{"version":3,"mappings":"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","names":["languages","getDefaultLanguage","selectedLang","browserLang","language","i18n","initReactI18next","enJSON","deJSON","esJSON","validateEmail","email","createUUID","c","mapNumberToMax","n","max","hexHash","str","createHash","getWSCredentials","msg","password","authParams","complementAuthParams","resp","subscribeEvent","eventName","listener","unsubscribeEvent","publishEvent","data","event","Context","createContext","useShelly","useContext","SCProvider","children","user","setUser","useState","devices","setDevices","validationRequest","setValidationRequest","retryCount","setRetryCount","ws","useRef","subscribtions","requests","isReconnecting","secret","reconnectMsg","WITHOUT_SECRET","startRetryTimeout","currentRetryCount","isInit","subscribe","subscription","events","unsubscribe","subscriptionID","send","useCallback","isSecretNeeded","requestID","request","callback","isExistingMessage","aRequest","login","theUser","logout","useEffect","wsurl","websocket","e","entry","connectedUser","request2","jsx","useMemo","usePathname","pathname","useLocation","RouterLink","forwardRef","href","other","ref","Link","useResponsive","query","start","end","theme","useTheme","mediaUp","useMediaQuery","Logo","disabledLink","sx","logo","Box","jsxs","Stack","Typography","PropTypes","StyledRootScrollbar","styled","StyledScrollbar","SimpleBar","alpha","Scrollbar","userAgent","memo","HEADER","NAV","SvgColor","src","icon","name","navConfig","Nav","openNav","onCloseNav","t","useTranslation","upLg","renderAccount","Avatar","renderMenu","item","NavItem","renderOpenSource","Button","renderContent","Drawer","active","ListItemButton","SPACING","Main","lgUp","bgBlur","props","color","blur","opacity","imgUrl","bgGradient","direction","startColor","endColor","Iconify","width","Icon","fDate","date","newFormat","format","fDateTime","fm","fUnixTime","time","fmt","fromUnixTime","LastUpdate","lastUpdateAt","setLastUpdateAt","navigate","useNavigate","handleLastUpdate","handleClick","CircularProgress","UserFormDisplay","type","requestResult","roles","currentUser","setRequestResult","setCurrentUser","handleForgotten","handleCurrentUser","homeSelection","setHomeSelection","roleSelection","setRoleSelection","showPassword","setShowPassword","isRolesLoaded","origUser","handleInputFocus","handleInputChange","target","updatedUser","handleSubmit","checkSubmitCriterias","isDisabled","FormControl","TextField","InputAdornment","IconButton","role","MenuItem","UserForm","updateuser","handleUsersReceived","handleUpdateUser","setRoles","location","handleUserValidation","handleUserUpdate","handleUserCreate","handleRolesReceived","handleResetPW","formUser","UpdateUser","title","openUpdate","onCloseUpdate","Divider","AccountPopover","open","setOpen","setOpenUpdate","handleOpenUpdate","handleClose","handleCloseUpdate","handleHome","handleOpen","getTitle","Fragment","Popover","ListItemIcon","ListItemText","LanguagePopover","changeLanguage","currentLanguage","setCurrentLanguage","languageIndex","setLanguageIndex","handleChangeLanguage","value","index","option","NotificationsPopover","notifications","setNotifications","totalUnRead","isNotificationLoaded","handleNotificationUpdate","notification","updatedNotifications","handleNotificationsReceived","allNotifications","currentSubscriptionID","handleMarkAllAsRead","readNotifications","newNotifications","handleItemClick","readNotification","handleItemDelete","id","Badge","Tooltip","List","ListSubheader","NotificationItem","avatar","getDatefnsLocale","enUS","de","es","ListItemAvatar","formatDistanceToNow","Header","onOpenNav","AppBar","Toolbar","DashboardLayout","setOpenNav","AppPage","lazy","__vitePreload","app","BlogPage","blog","UserPage","LoginPage","LandingPage","landing","ShelliesPage","shellies","Page404","Router","useRoutes","Suspense","Outlet","Navigate","useScrollToTop","grey","primary","secondary","info","success","warning","error","common","action","base","palette","shadows","transparent1","transparent2","transparent3","overrides","outlinedInputClasses","pxToRem","responsiveFontSizes","sm","md","lg","primaryFont","secondaryFont","typography","customShadows","transparent","ThemeProvider","memoizedValue","createTheme","MUIThemeProvider","CssBaseline","App","root","ReactDOM","HelmetProvider","BrowserRouter","fShortenNumber","number","numeral","result","fKWh","fWh","key","ViewTitle","useChartColors","Chart","ApexChart","AppWidgetSummary","subtitle","Card","getDeviceConsumption","deviceName","params","currentSwitch","totalPower","hasSwitch","powerPerDevice","i","_a","devicePower","_b","calculateOverview","scriptsCount","scriptsRunning","onlineCount","cloudCount","currentPower","colorPerDevice","deviceConsumption","device","_c","currentScript","script","useChart","options","LABEL_TOTAL","LABEL_VALUE","baseOptions","merge","CurrentConsumption","subheader","colors","series","labels","values","CardHeader","TimelineConsumption","chart","handleTimelineChange","selection","timeline","maxConsumption","chartOptions","Select","getTimelineOptions","selectedChart","buildTimeline","rows","chartLabels","chartSeries","chartDevices","chartColors","category","nIndex","dIndex","AppView","setTotalPower","scripts","setScripts","setCloudCount","setPowerPerDevice","setColorPerDevice","setOnlineCount","timelineByDevice","setTimelineByDevice","setSelection","handleTimelineUpdate","wsDevices","handleDevicesUpdate","overviewValues","handleDeviceUpdate","wsDevice","handleDevicesReceived","Container","Grid","Helmet","BlogEditor","handleContentChange","content","toolbar","customLabels","TextEditor","BlogpostForm","handleUpdatePost","updatepost","handleBlogpostsReceived","currentBlogpost","setCurrentBlogpost","handleBlogpostCreate","handleBlogpostUpdate","updatedBlogpost","isEqual","FormControlLabel","Switch","UpdateBlogpost","BlogPostForm","PostCard","blogpost","handleDeletePost","openMenue","setOpenMenue","openContent","setOpenContent","showReallyDelete","setShowReallyDelete","latestPostLarge","latestPost","formpost","updatedPost","handleOpenMenu","handleCloseMenu","handleShowReally","renderAvatar","renderPost","TextEditorReadOnly","renderCover","renderShape","CreateBlogpost","openCreate","onOpenCreate","onCloseCreate","BlogView","blogposts","setBlogposts","isBlogpostsLoaded","setOpenCreate","allBlogposts","handleOpenCreate","handleCloseCreate","CreateUser","TableNoData","TableRow","TableCell","Paper","DevicesForm","userDevices","setUserDevices","handleUserDevicesReceived","handleUserDeviceChange","device_id","newUserDevices","Checkbox","AddDevices","openDevices","onCloseDevices","UserTableRow","selected","alias","avatarUrl","firstname","lastname","roleid","home","handleDeleteUser","setOpenDevices","handleOpenDevices","handleCloseDevices","visuallyHidden","emptyRows","page","rowsPerPage","arrayLength","descendingComparator","a","b","orderBy","getComparator","order","applyFilter","inputData","comparator","filterName","field","stabilizedThis","el","UserTableHead","rowCount","headLabel","numSelected","onRequestSort","onSelectAllClick","onSort","property","TableHead","headCell","TableSortLabel","TableEmptyRows","height","UserTableToolbar","onFilterName","placeholder","handleDeleteSelected","handleShowReallyDelete","OutlinedInput","UserView","setPage","users","setUsers","setOrder","setSelected","setOrderBy","setFilterName","setRowsPerPage","isUsersLoaded","clientUsers","serverUser","updatedUsers","x","handleUpdateUserEvent","show","handleSort","handleSelectAllClick","newSelecteds","u","selectedIndex","newSelected","ids","handleChangePage","newPage","handleChangeRowsPerPage","handleFilterByName","dataFiltered","notFound","TableContainer","Table","TableBody","row","TablePagination","from","to","count","DeviceCarousel","DEVICES","setIndex","handleChange","cur","prev","Carousel","LoginView","LandingView","handleLogin","sortNumeric","array","prop","sortText","ShellyStatus","online","ShellySwitchList","ip","switches","aSwitch","Shelly","handleSwitchToggle","setSwitches","CardMedia","LogList","logmessage","ColorPicker","onSelectColor","limit","singleSelect","handleSelect","hasSelected","ButtonBase","ColorPreview","renderColors","remainingColor","COLORS","ShellyKVSList","kvs","kvsentry","convertValue","ShellyControls","handleSwitchSet","brightnessSwitch","whiteSwitch","rgbSwitch","rgb","setRGB","brightness","setBrightness","white","setWhite","debouncedSwitchSet","debounce","handleRGBChange","handleBrightnessChange","newValue","handleWhiteChange","Slider","MuiColorInput","White","BLEEvent","ButtonEvent","degree","NotifyEvents","elements","Energy","consume","Scripts","Firmware","version","Brightness","SystemValues","sys","Notifications","wsMessage","_d","_e","_f","_g","_h","_i","rgbcss","Events","SystemTime","ts","WSMessageList","wsmessages","ShellyScriptList","deviceIP","deviceOnline","updateDeviceValues","isChanged","doUpdate","ExpandKVS","expand","ShellyCard","shelly","expanded","setExpanded","setDevice","setWSmessages","setKVS","updateType","prevScripts","prevKVS","updatedDevice","prevDevice","prevWSmessages","handleExpandClick","arrRGB","val","CardContent","CardActions","Collapse","TabPanel","xs","xl","SORT_OPTIONS","ShellySort","onMenuItemClick","Menu","listClasses","ShellyFilters","openFilter","onOpenFilter","onCloseFilter","filter","handleDeviceFilter","mChecked","setMChecked","gChecked","setGChecked","handleModelFilterChange","position","updatedCheckedState","checked","handleGenFilterChange","renderModel","FormGroup","model","renderGen","gen","clearAll","ShelliesView","setOpenFilter","currentTabIndex","setCurrentTabIndex","setFilter","models","generations","newFilter","handleTabChange","tabIndex","handleOpenFilter","handleCloseFilter","sortedDevices","prevDevices","filterDevices","deviceFilters","isFilter","generation","Tabs","Tab","NotFoundView","renderHeader","NotFoundPage"],"ignoreList":[],"sources":["../../src/i18n.js","../../src/utils/general.js","../../src/utils/client-auth.js","../../src/events/pubsub.js","../../src/sccontext.jsx","../../src/routes/hooks/use-pathname.js","../../src/routes/components/router-link.jsx","../../src/hooks/use-responsive.js","../../src/components/logo/logo.jsx","../../src/components/scrollbar/styles.js","../../src/components/scrollbar/scrollbar.jsx","../../src/layouts/dashboard/config-layout.js","../../src/components/svg-color/svg-color.jsx","../../src/layouts/dashboard/config-navigation.jsx","../../src/layouts/dashboard/nav.jsx","../../src/layouts/dashboard/main.jsx","../../src/theme/css.js","../../src/components/iconify/iconify.jsx","../../src/utils/format-time.js","../../src/components/shellies/lastupdate.jsx","../../src/sections/user/user-form-display.jsx","../../src/sections/user/user-form.jsx","../../src/sections/user/update-user.jsx","../../src/layouts/dashboard/common/account-popover.jsx","../../src/layouts/dashboard/common/language-popover.jsx","../../src/layouts/dashboard/common/notifications-popover.jsx","../../src/layouts/dashboard/header.jsx","../../src/layouts/dashboard/index.jsx","../../src/routes/sections.jsx","../../src/hooks/use-scroll-to-top.js","../../src/theme/palette.js","../../src/theme/shadows.js","../../src/theme/overrides.js","../../src/theme/typography.js","../../src/theme/custom-shadows.js","../../src/theme/index.jsx","../../src/app.jsx","../../src/main.jsx","../../src/utils/format-number.js","../../src/components/shellies/view-title.jsx","../../src/components/chart/chart.js","../../src/sections/overview/app-widget-summary.jsx","../../src/utils/device-consumption.js","../../src/sections/overview/view/calculate-overview.js","../../src/components/chart/use-chart.js","../../src/sections/overview/current-consumption.jsx","../../src/sections/overview/timline-consumption.jsx","../../src/sections/overview/view/build-timeline.js","../../src/sections/overview/view/app-view.jsx","../../src/pages/app.jsx","../../src/sections/blog/post-editor.jsx","../../src/sections/blog/blogpost-form.jsx","../../src/sections/blog/update-blogpost.jsx","../../src/sections/blog/post-card.jsx","../../src/sections/blog/create-blogpost.jsx","../../src/sections/blog/view/blog-view.jsx","../../src/pages/blog.jsx","../../src/sections/user/create-user.jsx","../../src/sections/user/table-no-data.jsx","../../src/sections/user/devices-form.jsx","../../src/sections/user/add-devices.jsx","../../src/sections/user/user-table-row.jsx","../../src/sections/user/utils.js","../../src/sections/user/user-table-head.jsx","../../src/sections/user/table-empty-rows.jsx","../../src/sections/user/user-table-toolbar.jsx","../../src/sections/user/view/user-view.jsx","../../src/pages/user.jsx","../../src/sections/login/device-carousel.jsx","../../src/sections/login/view/login-view.jsx","../../src/pages/login.jsx","../../src/sections/landing/view/landing-view.jsx","../../src/pages/landing.jsx","../../src/utils/sort-array.js","../../src/components/shellies/shelly-status.jsx","../../src/components/shellies/shelly-switch-list.jsx","../../src/components/shellies/shelly.jsx","../../src/components/shellies/loglist.jsx","../../src/components/color-utils/color-picker.jsx","../../src/components/color-utils/color-preview.jsx","../../src/components/shellies/shelly-kvs-list.jsx","../../src/components/shellies/shelly-controls.jsx","../../src/components/shellies/handler/display/white.jsx","../../src/components/shellies/handler/display/ble-event.jsx","../../src/components/shellies/handler/display/button-event.jsx","../../src/components/shellies/handler/display/events.jsx","../../src/components/shellies/handler/display/energy.jsx","../../src/components/shellies/handler/display/scripts.jsx","../../src/components/shellies/handler/display/firmware.jsx","../../src/components/shellies/handler/display/brightness.jsx","../../src/components/shellies/handler/display/systemvalues.jsx","../../src/components/shellies/handler/notifcations.jsx","../../src/components/shellies/handler/display/systemtime.jsx","../../src/components/shellies/shelly-wsmessagelist.jsx","../../src/components/shellies/shelly-script-list.jsx","../../src/sections/shellies/view/update-device-values.js","../../src/components/shellies/shelly-card.jsx","../../src/components/shellies/tabpanel.jsx","../../src/sections/shellies/shelly-sort.jsx","../../src/sections/shellies/shelly-filters.jsx","../../src/sections/shellies/view/shellies-view.jsx","../../src/pages/shellies.jsx","../../src/sections/error/not-found-view.jsx","../../src/pages/page-not-found.jsx"],"sourcesContent":["/*\r\n  Author: André Kreienbring\r\n  Initialises i18next.\r\n  Exports an array with the supported languages and tries to \r\n  detect the preferred language of the user.\r\n*/\r\nimport i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport enJSON from './locale/en.json';\r\nimport deJSON from './locale/de.json';\r\nimport esJSON from './locale/es.json';\r\n\r\nexport const languages = [\r\n  {\r\n    value: 'en',\r\n    label: 'English',\r\n  },\r\n  {\r\n    value: 'de',\r\n    label: 'German',\r\n  },\r\n  {\r\n    value: 'es',\r\n    label: 'Spanish',\r\n  },\r\n];\r\n\r\n/*\r\n  Order of finding the prefered language:\r\n    1. Language that was selected by the user.\r\n    2. The preferred browser language (used if supported)\r\n    3. Fallback to english\r\n  For testing the 'i18nLanguage' key must be removed from local storage.\r\n*/\r\nconst getDefaultLanguage = () => {\r\n  // localStorage.removeItem('i18nLanguage'); // enable for testing\r\n  const selectedLang = localStorage.getItem('i18nLanguage');\r\n  if (selectedLang !== null) {\r\n    console.log(`Using last selected language ${selectedLang}`);\r\n    return selectedLang;\r\n  }\r\n\r\n  if (typeof navigator.language !== 'undefined') {\r\n    const browserLang = navigator.language.substring(0, 2);\r\n    if (typeof languages.find((language) => language.value === browserLang) !== 'undefined') {\r\n      console.log(`Using browser language ${browserLang}`);\r\n      return navigator.language.substring(0, 2);\r\n    }\r\n  }\r\n  console.log(`Using browser language en`);\r\n  return 'en';\r\n};\r\n\r\ni18n.use(initReactI18next).init({\r\n  resources: {\r\n    en: { ...enJSON },\r\n    de: { ...deJSON },\r\n    es: { ...esJSON },\r\n  },\r\n  lng: getDefaultLanguage(), // Set the initial language of the App\r\n});\r\n","/* eslint-disable no-bitwise */\r\n/*\r\n  Author: André Kreienbring\r\n  Various helpers\r\n*/\r\n\r\n/**\r\n  Checks if the input is an email adress.\r\n  @param {string} email The text that pretends to be an email address.\r\n  @return {boolean} true if the input is a valid email address, false if not.\r\n*/\r\nexport const validateEmail = (email) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n  return emailRegex.test(email);\r\n};\r\n\r\n/**\r\n * Creates a UUID \r\n * @returns {string} The UUID\r\n */\r\n// eslint-disable-next-line arrow-body-style\r\nexport const createUUID = () => {\r\n  return '10000000-1000-4000-8000-100000000000'.replace(/[018]/g, (c) =>\r\n    (+c ^ (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (+c / 4)))).toString(16)\r\n  );\r\n};\r\n\r\n/**\r\n  Maps a number to a given range (1 - max) of numbers.\r\n  If n > max the result starts from 1 again. Example\r\n  (1, 3) => 1, (2, 3) => 2, (3, 3) => 3, (4, 3) => 1...\r\n  @param {number} n The number that must be mapped to a range\r\n  @param {number} max The maximun number that can be returned\r\n  @returns {number} The initial number n mapped to the range\r\n*/\r\nexport const mapNumberToMax = (n, max) => {\r\n  if (n < max) {\r\n    return n;\r\n  }\r\n  if (n % max === 0) {\r\n    return max;\r\n  }\r\n  return n % max;\r\n};\r\n\r\n/**\r\n  UNUSED\r\n  see: https://dev.to/timothee/using-modulo-to-shift-a-value-and-keep-it-inside-a-range-8fm\r\n  mapNumberToMax2(i, 0, 1, 25) does the same as mapNumberToMax(i, 25)\r\n  @param {number} n The number that must be mapped to a range\r\n  @param {number} offset n is shifted by this amount\r\n  @param {number} min is the lowest value of the desired range\r\n  @param {number} max  is the length of the desired range.\r\n  @returns {number} The initial number n mapped to the range\r\n*/\r\nexport const mapNumberToMax2 = (n, offset, min, max) =>\r\n  ((n - min + (offset % max) + max) % max) + min;\r\n","/*\r\n  Author: André Kreienbring  \r\n  Provides functions that implement the Shellybroker Authentication (client) mechanism\r\n*/\r\nimport { createHash } from 'sha256-uint8array';\r\n\r\n/*\r\n  Uses the digest algorithm to encrypt a string\r\n  @param {string} str The string to encrypt\r\n*/\r\nfunction hexHash(str) {\r\n  return createHash().update(str).digest('hex');\r\n}\r\n\r\n/*\r\n  Build the digest credentials that will be passed to the broker\r\n  @param {object} msg The message with the challenge information\r\n  @param (string) password The password that protects the device\r\n  @param (string) email The mail address of an existing user.\r\n  @return {object} The authentication parameters\r\n*/\r\nexport function getWSCredentials(msg, password, email) {\r\n  if (typeof password === 'undefined' || password === '') {\r\n    throw new Error('Failed to authenticate!  Please supply a password!');\r\n  }\r\n\r\n  if (typeof msg === 'undefined' || msg.auth_type !== 'digest') {\r\n    throw new Error('The message contains no authentication information');\r\n  }\r\n\r\n  const authParams = {\r\n    nonce: msg.nonce,\r\n    nc: msg.nc,\r\n    realm: msg.realm,\r\n    algorithm: msg.algorithm,\r\n  };\r\n  return complementAuthParams(authParams, password, email);\r\n}\r\n\r\n/*\r\n  Create the auth params that will be added to the message that is send \"onOpen\".\r\n  @param {object} authParams The initial paramter object with the extracted values\r\n  @param {string} password The password the user must provide to access the device\r\n  @param (string) email The mail address of an existing user.\r\n  @return {object} The input authParams object with added credential values.\r\n*/\r\nfunction complementAuthParams(authParams, password, email) {\r\n  authParams.username = email;\r\n  authParams.cnonce = String(Math.floor(Math.random() * 10e8));\r\n\r\n  let resp = hexHash(`${authParams.username}:${authParams.realm}:${password}`);\r\n  resp += `:${authParams.nonce}`;\r\n  resp += `:1:${authParams.cnonce}`;\r\n  authParams.response = hexHash(resp);\r\n  return authParams;\r\n}\r\n","/*\r\n  Author: André Kreienbring\r\n  A set of helpers used to publish and subsribe to custom Events.\r\n  These are Browser events as usually used in the DOM\r\n*/\r\n\r\n/**\r\n * Subcribe to the event given with eventName\r\n * @param {string} eventName The name of the event to subscribe to\r\n * @param {function} listener The callback function that will be added\r\n */\r\nconst subscribeEvent = (eventName, listener) => {\r\n  document.addEventListener(eventName, listener);\r\n};\r\n\r\n/**\r\n * Unsubscribes from the event given with eventName\r\n * @param {*} eventName The name of the event to unsubscribe from\r\n * @param {*} listener The callback function that will be removed\r\n */\r\nconst unsubscribeEvent = (eventName, listener) => {\r\n  document.removeEventListener(eventName, listener);\r\n};\r\n\r\n/**\r\n * A component uses this function to publish an event\r\n * @param {string} eventName The name of the event that is published\r\n * @param {object} data Custom data published witch the event\r\n */\r\nconst publishEvent = (eventName, data) => {\r\n  const event = new CustomEvent(eventName, { detail: data });\r\n  document.dispatchEvent(event);\r\n};\r\n\r\nexport { publishEvent, subscribeEvent, unsubscribeEvent };\r\n","/*\r\n    Author: André Kreienbring\r\n    Provides a general context for the whole Application.\r\n    The context is used for user authentication and websocke access\r\n\r\n    The basic concept of websocket management is described here:\r\n    https://blog.stackademic.com/websockets-and-react-wscontext-and-components-subscription-pattern-4e580fc67bb5\r\n*/\r\n\r\nimport websocket from 'websocket';\r\nimport {\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n  createContext,\r\n} from 'react';\r\n\r\nimport { createUUID } from 'src/utils/general';\r\nimport { getWSCredentials } from 'src/utils/client-auth';\r\n\r\nimport { publishEvent } from 'src/events/pubsub';\r\n\r\nconst Context = createContext();\r\n\r\nexport const useShelly = () => useContext(Context);\r\n\r\n/** \r\n  A Context Provider that is available in every page of the app by \r\n  using the exported 'useShelly' hook.\r\n  Once logged in, the user object is stored in (and retrieved from) the\r\n  browsers local storage to prevent logging in after every refresh of the page.\r\n*/\r\nexport const SCProvider = ({ children }) => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\r\n  const [devices, setDevices] = useState([]);\r\n  const [validationRequest, setValidationRequest] = useState(null);\r\n  const [retryCount, setRetryCount] = useState(0.001);\r\n  const ws = useRef(null);\r\n  const subscribtions = useRef({});\r\n  const requests = useRef({});\r\n  const isReconnecting = useRef(false);\r\n  const secret = useRef(null);\r\n  const reconnectMsg = useRef({\r\n    event: 'user reconnect',\r\n    data: {\r\n      name: 'Shelly Context',\r\n      channelID: `sc${createUUID()}`,\r\n      message: 'Hello from Shelly Context',\r\n      user,\r\n    },\r\n  });\r\n\r\n  /*\r\n    These events are not forced to send the secret.\r\n    Will be respected by the request function\r\n  */\r\n  const WITHOUT_SECRET = useRef(['user validate', 'blogposts get public']);\r\n\r\n  /**\r\n    Implements a reconnection strategy.\r\n    Tries to reconnect directly after the ws connection was closed.\r\n    If not successful, subsequent tries will be delayed by\r\n    the configured delay time with a factor.\r\n    After the configured max tries the recursion stops.\r\n    @param {number} currentRetryCount Used to count the number of retries\r\n    @param {boolean} isInit If true the retry count is reset\r\n  */\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const startRetryTimeout = (currentRetryCount, isInit) => {\r\n    if (reconnectMsg.current.data.user === null) return;\r\n    if (isInit) currentRetryCount = 0.001;\r\n    isReconnecting.current = true;\r\n    setTimeout(\r\n      () => {\r\n        if (ws.current !== null && ws.current.readyState === WebSocket.OPEN) {\r\n          isReconnecting.current = false;\r\n          return;\r\n        }\r\n        if (currentRetryCount > window.scconfig.RECONNECT_MAX) {\r\n          isReconnecting.current = false;\r\n          console.log('Reconnecting makes no sense! Please reload Page');\r\n          publishEvent('lastUpdatedAt', null);\r\n          return;\r\n        }\r\n        console.log(`Trying to reconnect: ${currentRetryCount}`);\r\n        setRetryCount(currentRetryCount + 1); // this triggers the useEffect Hook\r\n        startRetryTimeout(currentRetryCount + 1, false);\r\n      },\r\n      currentRetryCount * window.scconfig.RECONNECT_DELAY * 1000\r\n    );\r\n  };\r\n\r\n  /**\r\n    A component can subscribe to one or more events.\r\n    @typedef {Object} subscription\r\n    @property {string} subscriptionID An unique ID that identifies the subscription\r\n    @property {callback} callback A function that is called when a msg with an event arrives\r\n    @property {boolean} all  A boolean value that indicates if the component needs all or only specific (device) events\r\n    @param {subscription} subscription The subscription object\r\n    @param {Array} events An array of websocket events (e.g. 'ShellyUpdate')\r\n  */\r\n  const subscribe = (subscription, events) => {\r\n    events.forEach((event) => {\r\n      if (typeof subscribtions.current[event] === 'undefined') {\r\n        subscribtions.current[event] = [subscription];\r\n      } else {\r\n        subscribtions.current[event].push(subscription);\r\n      }\r\n      /*\r\n      console.log(\r\n        `After subscription of ${subscription.subscriptionID} to events ${events}: ${JSON.stringify(subscribtions.current)}`\r\n      );\r\n      */\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Unsubscribe from a former subscription\r\n   * @param {string} subscriptionID The ID of the registered subscription\r\n   * @param {Array} events A list of events to unsubscribe from (e.g. 'ShellyUpdate')\r\n   */\r\n  const unsubscribe = (subscriptionID, events) => {\r\n    events.forEach((event) => {\r\n      if (typeof subscribtions.current[event] !== 'undefined') {\r\n        subscribtions.current[event] = subscribtions.current[event].filter(\r\n          (subscription) => subscription.subscriptionID !== subscriptionID\r\n        );\r\n        /*\r\n        console.log(\r\n          `After unsubsribe of ${subscriptionID} from events ${events}: ${JSON.stringify(subscribtions.current)}`\r\n        );\r\n        */\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n    Components can send messages directly to the websocket server\r\n    without expecting an answer.\r\n    This messages will ONLY be stored in the requests object,\r\n    if the websocket is closed. Each message triggers a reconnection attempt.\r\n    @param {Object} msg The message that will be send to the websocket server\r\n */\r\n  const send = useCallback(\r\n    (msg) => {\r\n      const isSecretNeeded = !WITHOUT_SECRET.current.includes(msg.event);\r\n      if (isSecretNeeded) {\r\n        msg.data.secret = secret.current;\r\n      }\r\n\r\n      if (\r\n        ws.current !== null &&\r\n        ws.current.readyState === WebSocket.OPEN &&\r\n        (!isSecretNeeded || secret.current !== null)\r\n      ) {\r\n        ws.current.send(JSON.stringify(msg));\r\n      } else {\r\n        // store the message. It will be send, when the websocket reconnects.\r\n        const requestID = createUUID();\r\n        requests.current[requestID] = { msg, undefined };\r\n\r\n        if (!isReconnecting.current) startRetryTimeout(retryCount, true);\r\n      }\r\n    },\r\n    [startRetryTimeout, retryCount]\r\n  );\r\n\r\n  /**\r\n    A component can request data from the server.\r\n    The requestID is unique an used to identify the request when the data arrives.\r\n    Requests will ALWAYS be stored in the request object.\r\n    Each request that can not be send triggers a reconnection attempt.\r\n    @param {Object} msg The message with the request that is send to the websocket server\r\n    @param {callback} callback The function to call when the data arrives.\r\n  */\r\n  const request = useCallback(\r\n    (msg, callback) => {\r\n      /*\r\n      Discard existing messages. This can happen, if the websocket is closed\r\n      and the user triggers requests more then once.\r\n    */\r\n      let isExistingMessage = false;\r\n      Object.values(requests.current).forEach((aRequest) => {\r\n        if (aRequest.msg.event === msg.event) {\r\n          isExistingMessage = true;\r\n        }\r\n      });\r\n      if (isExistingMessage) return;\r\n\r\n      if (msg.event === 'user validate') {\r\n        // if the socket is closed, this will trigger a reconnection\r\n        setValidationRequest({ msg, callback });\r\n      } else {\r\n        const requestID = createUUID();\r\n        msg.data.requestID = requestID;\r\n        requests.current[requestID] = { msg, callback };\r\n      }\r\n\r\n      const isSecretNeeded = !WITHOUT_SECRET.current.includes(msg.event);\r\n      if (isSecretNeeded) {\r\n        msg.data.secret = secret.current;\r\n      }\r\n\r\n      if (\r\n        ws.current !== null &&\r\n        ws.current.readyState === WebSocket.OPEN &&\r\n        (!isSecretNeeded || secret.current !== null)\r\n      ) {\r\n        // console.log(`Socket is open. Sending request '${msg.event}' to the server`);\r\n        ws.current.send(JSON.stringify(msg));\r\n      } else if (\r\n        !isReconnecting.current &&\r\n        (ws.current === null || ws.current.readyState !== WebSocket.OPEN)\r\n      )\r\n        startRetryTimeout(retryCount, true);\r\n    },\r\n    [startRetryTimeout, retryCount]\r\n  );\r\n\r\n  /**\r\n    Put the current user in the context of the application.\r\n    This also adds him to the reconnect message to be send when reconnecting the websocket.\r\n    @param {object} theUser The user that was provided by the login form.\r\n  */\r\n  const login = useCallback((theUser) => {\r\n    setUser(theUser);\r\n    reconnectMsg.current.data.user = theUser;\r\n    console.log(`Connecting the logged in user '${theUser.alias}'`);\r\n    // this will send a message with a channelID. Used to manage the connection on the serverside!\r\n    ws.current.send(JSON.stringify(reconnectMsg.current));\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    ws.current.close(4001, 'User logged out');\r\n    setUser(null);\r\n    setDevices([]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user !== null) {\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n    } else {\r\n      localStorage.removeItem('user');\r\n      reconnectMsg.current.data.user = null;\r\n      setDevices([]);\r\n    }\r\n  }, [user]);\r\n\r\n  // --------------------- Websocket Implementation END----------------\r\n  /*\r\n    When this effect is executed, a new WebSocket is created that will directly\r\n    connect to the server. Rerunning the effect reconnects when the socket was closed.\r\n  */\r\n  useEffect(() => {\r\n    if (ws.current === null || (isReconnecting && ws.current.readyState !== WebSocket.OPEN)) {\r\n      publishEvent('lastUpdatedAt', 'connecting');\r\n      const wsurl = import.meta.env.DEV ? window.scconfig.WSURL : window.scconfig.WSSURL;\r\n      console.log(`Creating websocket connection to ${wsurl}`);\r\n      ws.current = new websocket.w3cwebsocket(wsurl);\r\n    }\r\n\r\n    ws.current.onerror = (e) => console.error(e);\r\n\r\n    ws.current.onopen = (event) => {\r\n      isReconnecting.current = false;\r\n      publishEvent('lastUpdatedAt', Date.now());\r\n      console.log(`WebSocket connection opened for Shelly Context!`);\r\n\r\n      if (validationRequest !== null) {\r\n        console.log('Sending an existing validation request');\r\n        // don't send the password! Instead digest authentication will be used\r\n        ws.current.send(\r\n          JSON.stringify({\r\n            event: 'user validate',\r\n            data: {\r\n              source: validationRequest.msg.data.source,\r\n              message: validationRequest.msg.data.message,\r\n              user: { email: validationRequest.msg.data.user.email },\r\n            },\r\n          })\r\n        );\r\n      } else if (reconnectMsg.current.data.user !== null) {\r\n        console.log(\r\n          `Reconnecting the previously logged in user '${reconnectMsg.current.data.user.alias}'`\r\n        );\r\n        // this will send a message with a channelID. Used to manage the connection on the serverside!\r\n        ws.current.send(JSON.stringify(reconnectMsg.current));\r\n      }\r\n\r\n      // send all requests that don't need a secret\r\n      Object.entries(requests.current).forEach((entry) => {\r\n        const [requestID, request] = entry;\r\n        if (WITHOUT_SECRET.current.includes(request.msg.event)) {\r\n          console.log(`Sending '${request.msg.event}' after opening the websocket`);\r\n          ws.current.send(JSON.stringify(request.msg));\r\n        }\r\n        // delete the requests that don't receive an answer and hence have no callback\r\n        if (typeof request.callback === 'undefined') delete requests[requestID];\r\n      });\r\n    };\r\n\r\n    ws.current.onmessage = (event) => {\r\n      publishEvent('lastUpdatedAt', Date.now());\r\n      const msg = JSON.parse(event.data);\r\n      if (msg !== null) {\r\n        if (msg.event === 'user validate') {\r\n          if (\r\n            validationRequest !== null &&\r\n            typeof msg.data.error !== 'undefined' &&\r\n            msg.data.error.code === 401\r\n          ) {\r\n            // Not authenticated. Add the credentials to the message\r\n            validationRequest.msg.data.auth = getWSCredentials(\r\n              msg.data.error.message,\r\n              validationRequest.msg.data.user.password,\r\n              validationRequest.msg.data.user.email\r\n            );\r\n            delete validationRequest.msg.data.user.password;\r\n            delete validationRequest.msg.data.error;\r\n            // Retry with challenge response object\r\n            ws.current.send(JSON.stringify(validationRequest.msg));\r\n          } else {\r\n            // authenticated: forward the message to userform to perform a login\r\n            secret.current = msg.data.secret;\r\n            delete msg.data.secret;\r\n            validationRequest.callback(msg);\r\n            setValidationRequest(null);\r\n            console.log(\r\n              `Deleted the 'user validate' request. Now have ${Object.entries(requests.current).length} requests left`\r\n            );\r\n          }\r\n        } else if (msg.event === 'user reconnect') {\r\n          // the secret must be send with every request\r\n          if (typeof msg.data.secret !== 'undefined') {\r\n            const connectedUser = reconnectMsg.current.data.user;\r\n            console.log(\r\n              `Just reconnected with user ${connectedUser.alias}. There are ${Object.entries(requests.current).length} outstanding requests`\r\n            );\r\n            secret.current = msg.data.secret;\r\n            if (devices.length === 0) {\r\n              console.log(`Requesting devices of user ${connectedUser.alias}.`);\r\n              ws.current.send(\r\n                JSON.stringify({\r\n                  event: 'devices get all',\r\n                  data: {\r\n                    source: 'Shelly Context',\r\n                    message: 'Shelly Context needs the list of devices',\r\n                    userid: connectedUser.roleid != 1 ? connectedUser.id : null, //an admin gets all devices\r\n                    secret: secret.current,\r\n                  },\r\n                })\r\n              );\r\n            }\r\n            /*\r\n            Send all messages that arrived while the socket was not open\r\n            */\r\n            Object.entries(requests.current).forEach((entry) => {\r\n              const [requestID, request] = entry;\r\n              if (!WITHOUT_SECRET.current.includes(msg.event))\r\n                request.msg.data.secret = secret.current;\r\n              console.log(`Sending '${request.msg.event}' after reconnecting`);\r\n              ws.current.send(JSON.stringify(request.msg));\r\n              // delete the requests that don't receive an answer and hence have no callback\r\n              if (typeof request.callback === 'undefined') delete requests[requestID];\r\n            });\r\n          } else {\r\n            // reconnect unsuccessfull: logout\r\n            console.error('Reconnecting was not possible. Logging out!');\r\n            logout();\r\n          }\r\n        } else if (msg.event === 'devices get all') {\r\n          setDevices(msg.data.devices);\r\n        } else if (msg.event === 'ping') {\r\n          /*\r\n            the server sent a ping! Answer with pong to\r\n            make clear that this socket is still alive.\r\n          */\r\n          ws.current.send(\r\n            JSON.stringify({\r\n              event: 'pong',\r\n              data: {\r\n                source: 'SC Context',\r\n                message: msg.data.message,\r\n              },\r\n            })\r\n          );\r\n        } else if (\r\n          typeof msg.data.requestID !== 'undefined' &&\r\n          typeof requests.current[msg.data.requestID] !== 'undefined'\r\n        ) {\r\n          /*\r\n            Find the request with the provided id and forward the message\r\n            to the stored callback function\r\n          */\r\n          requests.current[msg.data.requestID].callback(msg);\r\n          delete requests.current[msg.data.requestID];\r\n          console.log(\r\n            `Deleted request '${msg.event}' on answer: '${msg.data.message}'. Now have ${Object.entries(requests.current).length} requests`\r\n          );\r\n        } else if (typeof msg.event !== 'undefined') {\r\n          /*\r\n            Forward the message to the registered / subscribed callback\r\n            functions for the given msg.event\r\n          */\r\n          if (typeof subscribtions.current[msg.event] !== 'undefined') {\r\n            subscribtions.current[msg.event].forEach((subscription) => {\r\n              if (subscription.all || msg.data.subscriptionID === subscription.subscriptionID) {\r\n                subscription.callback(msg);\r\n              }\r\n            });\r\n          }\r\n        } else {\r\n          console.error(`Shelly context received an unhandled message ${JSON.stringify(msg)} `);\r\n        }\r\n      }\r\n    };\r\n\r\n    ws.current.onclose = (e) => {\r\n      if (!isReconnecting.current) {\r\n        publishEvent('lastUpdatedAt', 'connecting');\r\n        startRetryTimeout(retryCount, true);\r\n      } else {\r\n        publishEvent('lastUpdatedAt', null);\r\n      }\r\n\r\n      if (ws.current) {\r\n        console.log(\r\n          `WebSocket connection closed by the server for SC Context. Reason: ${e.reason}!`\r\n        );\r\n      } else {\r\n        console.log(\r\n          `WebSocket connection closed because SC Context was unmounted. Reason: ${e.reason}!`\r\n        );\r\n      }\r\n    };\r\n  }, [validationRequest, startRetryTimeout, retryCount, logout, devices]);\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={useMemo(\r\n        () => ({ user, devices, login, logout, subscribe, unsubscribe, request, send }),\r\n        [user, devices, login, logout, request, send]\r\n      )}\r\n    >\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n","import { useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\n\n// ----------------------------------------------------------------------\n\nexport function usePathname() {\n  const { pathname } = useLocation();\n\n  return useMemo(() => pathname, [pathname]);\n}\n","import { forwardRef } from 'react';\nimport { Link } from 'react-router-dom';\n\n// ----------------------------------------------------------------------\n\nconst RouterLink = forwardRef(({ href, ...other }, ref) => <Link ref={ref} to={href} {...other} />);\n\nexport default RouterLink;\n","import { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\n// ----------------------------------------------------------------------\n\nexport function useResponsive(query, start, end) {\n  const theme = useTheme();\n\n  const mediaUp = useMediaQuery(theme.breakpoints.up(start));\n\n  const mediaDown = useMediaQuery(theme.breakpoints.down(start));\n\n  const mediaBetween = useMediaQuery(theme.breakpoints.between(start, end));\n\n  const mediaOnly = useMediaQuery(theme.breakpoints.only(start));\n\n  if (query === 'up') {\n    return mediaUp;\n  }\n\n  if (query === 'down') {\n    return mediaDown;\n  }\n\n  if (query === 'between') {\n    return mediaBetween;\n  }\n\n  return mediaOnly;\n}\n\n// ----------------------------------------------------------------------\n\nexport function useWidth() {\n  const theme = useTheme();\n\n  const keys = [...theme.breakpoints.keys].reverse();\n\n  return (\n    keys.reduce((output, key) => {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const matches = useMediaQuery(theme.breakpoints.up(key));\n\n      return !output && matches ? key : output;\n    }, null) || 'xs'\n  );\n}\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n\nconst Logo = forwardRef(({ disabledLink = false, sx, ...other }, ref) => {\n  const logo = <Box component=\"img\" src=\"/assets/logo.svg\" sx={{ width: 40, height: 40, ...sx }} />;\n\n  if (disabledLink) {\n    return logo;\n  }\n\n  return (\n    <Stack\n      direction=\"row\"\n      spacing={2}\n      sx={{\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n      }}\n    >\n      <Box sx={{ display: 'contents' }}>{logo}</Box>\n      <Typography variant=\"h6\" sx={{ pt: 3 }}>\n        S-Central\n      </Typography>\n    </Stack>\n  );\n});\n\nLogo.propTypes = {\n  disabledLink: PropTypes.bool,\n  sx: PropTypes.object,\n};\n\nexport default Logo;\n","import SimpleBar from 'simplebar-react';\n\nimport { alpha, styled } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nexport const StyledRootScrollbar = styled('div')(() => ({\n  flexGrow: 1,\n  height: '100%',\n  overflow: 'hidden',\n}));\n\nexport const StyledScrollbar = styled(SimpleBar)(({ theme }) => ({\n  maxHeight: '100%',\n  '& .simplebar-scrollbar': {\n    '&:before': {\n      backgroundColor: alpha(theme.palette.grey[600], 0.48),\n    },\n    '&.simplebar-visible:before': {\n      opacity: 1,\n    },\n  },\n  '& .simplebar-mask': {\n    zIndex: 'inherit',\n  },\n}));\n","import PropTypes from 'prop-types';\nimport { memo, forwardRef } from 'react';\n\nimport Box from '@mui/material/Box';\n\nimport { StyledScrollbar, StyledRootScrollbar } from './styles';\n\n// ----------------------------------------------------------------------\n\nconst Scrollbar = forwardRef(({ children, sx, ...other }, ref) => {\n  const userAgent = typeof navigator === 'undefined' ? 'SSR' : navigator.userAgent;\n\n  const mobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent);\n\n  if (mobile) {\n    return (\n      <Box ref={ref} sx={{ overflow: 'auto', ...sx }} {...other}>\n        {children}\n      </Box>\n    );\n  }\n\n  return (\n    <StyledRootScrollbar>\n      <StyledScrollbar\n        scrollableNodeProps={{\n          ref,\n        }}\n        clickOnTrack={false}\n        sx={sx}\n        {...other}\n      >\n        {children}\n      </StyledScrollbar>\n    </StyledRootScrollbar>\n  );\n});\n\nScrollbar.propTypes = {\n  children: PropTypes.node,\n  sx: PropTypes.object,\n};\n\nexport default memo(Scrollbar);\n","// ----------------------------------------------------------------------\n\nexport const HEADER = {\n  H_MOBILE: 64,\n  H_DESKTOP: 80,\n  H_DESKTOP_OFFSET: 80 - 16,\n};\n\nexport const NAV = {\n  WIDTH: 280,\n};\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n\nimport Box from '@mui/material/Box';\n\n// ----------------------------------------------------------------------\n\nconst SvgColor = forwardRef(({ src, sx, ...other }, ref) => (\n  <Box\n    component=\"span\"\n    className=\"svg-color\"\n    ref={ref}\n    sx={{\n      width: 24,\n      height: 24,\n      display: 'inline-block',\n      bgcolor: 'currentColor',\n      mask: `url(${src}) no-repeat center / contain`,\n      WebkitMask: `url(${src}) no-repeat center / contain`,\n      ...sx,\n    }}\n    {...other}\n  />\n));\n\nSvgColor.propTypes = {\n  src: PropTypes.string,\n  sx: PropTypes.object,\n};\n\nexport default SvgColor;\n","import SvgColor from 'src/components/svg-color';\n\n// ----------------------------------------------------------------------\n\nconst icon = (name) => (\n  <SvgColor src={`/assets/icons/navbar/${name}.svg`} sx={{ width: 1, height: 1 }} />\n);\n\nconst navConfig = [\n  {\n    title: 'dashboard',\n    path: '/dashboard',\n    icon: icon('ic_analytics'),\n    minRole: 'User',\n  },\n  {\n    title: 'shellies',\n    path: '/shellies',\n    icon: icon('ic_device'),\n    minRole: 'User',\n  },\n  {\n    title: 'blog',\n    path: '/blog',\n    icon: icon('ic_blog'),\n    minRole: 'User',\n  },\n  {\n    title: 'user',\n    path: '/user',\n    icon: icon('ic_user'),\n    minRole: 'Admin',\n  },\n];\n\nexport default navConfig;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport { alpha } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport ListItemButton from '@mui/material/ListItemButton';\n\nimport { usePathname } from 'src/routes/hooks';\nimport { RouterLink } from 'src/routes/components';\n\nimport { useResponsive } from 'src/hooks/use-responsive';\n\nimport { mapNumberToMax } from 'src/utils/general';\n\nimport { useShelly } from 'src/sccontext';\n\nimport Logo from 'src/components/logo';\nimport Scrollbar from 'src/components/scrollbar';\n\nimport { NAV } from './config-layout';\nimport navConfig from './config-navigation';\n\n// ----------------------------------------------------------------------\n\nexport default function Nav({ openNav, onCloseNav }) {\n  const pathname = usePathname();\n  const { user } = useShelly();\n  const { t } = useTranslation();\n\n  const upLg = useResponsive('up', 'lg');\n\n  useEffect(() => {\n    if (openNav) {\n      onCloseNav();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pathname]);\n\n  const renderAccount = (\n    <Box\n      sx={{\n        my: 3,\n        mx: 2.5,\n        py: 2,\n        px: 2.5,\n        display: 'flex',\n        borderRadius: 1.5,\n        alignItems: 'center',\n        bgcolor: (theme) => alpha(theme.palette.grey[500], 0.12),\n      }}\n    >\n      <Avatar\n        src={`/assets/images/avatars/avatar_${mapNumberToMax(user.id, 25)}.jpg`}\n        alt=\"photoURL\"\n      />\n\n      <Box sx={{ ml: 2 }}>\n        <Typography variant=\"subtitle2\">{`${user.firstname !== null ? user.firstname : user.alias} ${user.lastname !== null ? user.lastname : user.alias}`}</Typography>\n\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n          {user.role}\n        </Typography>\n      </Box>\n    </Box>\n  );\n\n  const renderMenu = (\n    <Stack component=\"nav\" spacing={0.5} sx={{ px: 2 }}>\n      {navConfig.map((item) => {\n        if (item.minRole === 'User' || (item.minRole === 'Admin' && user.roleid === 1)) {\n          return <NavItem key={item.title} item={item} />;\n        }\n        return null;\n      })}\n    </Stack>\n  );\n\n  const renderOpenSource = (\n    <Box sx={{ px: 2.5, pb: 3, mt: 10 }}>\n      <Stack alignItems=\"center\" spacing={3} sx={{ pt: 5, borderRadius: 2, position: 'relative' }}>\n        <Box sx={{ width: 100, position: 'absolute', top: -50 }}>\n          <Avatar src=\"/assets/illustrations/avatar_main.jpg\" sx={{ width: 100, height: 100 }} />\n        </Box>\n        <Box sx={{ textAlign: 'center' }}>\n          <Typography variant=\"h6\">{t('_getinvolved_')}</Typography>\n\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary', mt: 1 }}>\n            {t('_opensource_')}\n          </Typography>\n        </Box>\n\n        <Button\n          href=\"https://github.com/akreienbring/s-central\"\n          target=\"_blank\"\n          variant=\"contained\"\n          color=\"inherit\"\n        >\n          {t('_gotogithub_')}\n        </Button>\n      </Stack>\n    </Box>\n  );\n\n  const renderContent = (\n    <Scrollbar\n      sx={{\n        height: 1,\n        '& .simplebar-content': {\n          height: 1,\n          display: 'flex',\n          flexDirection: 'column',\n        },\n      }}\n    >\n      <Logo sx={{ mt: 3, ml: 4 }} />\n\n      {renderAccount}\n\n      {renderMenu}\n\n      <Box sx={{ flexGrow: 1 }} />\n\n      {renderOpenSource}\n    </Scrollbar>\n  );\n\n  return (\n    <Box\n      sx={{\n        flexShrink: { lg: 0 },\n        width: { lg: NAV.WIDTH },\n      }}\n    >\n      {upLg ? (\n        <Box\n          sx={{\n            height: 1,\n            position: 'fixed',\n            width: NAV.WIDTH,\n            borderRight: (theme) => `dashed 1px ${theme.palette.divider}`,\n          }}\n        >\n          {renderContent}\n        </Box>\n      ) : (\n        <Drawer\n          open={openNav}\n          onClose={onCloseNav}\n          slotProps={{\n            paper: {\n              sx: {\n                width: NAV.WIDTH,\n              },\n            },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n    </Box>\n  );\n}\n\nNav.propTypes = {\n  openNav: PropTypes.bool,\n  onCloseNav: PropTypes.func,\n};\n\n// ----------------------------------------------------------------------\n\nfunction NavItem({ item }) {\n  const pathname = usePathname();\n  const { t } = useTranslation();\n\n  const active = item.path === pathname;\n\n  return (\n    <ListItemButton\n      component={RouterLink}\n      href={item.path}\n      sx={{\n        minHeight: 44,\n        borderRadius: 0.75,\n        typography: 'body2',\n        color: 'text.secondary',\n        textTransform: 'capitalize',\n        fontWeight: 'fontWeightMedium',\n        ...(active && {\n          color: 'primary.main',\n          fontWeight: 'fontWeightSemiBold',\n          bgcolor: (theme) => alpha(theme.palette.primary.main, 0.08),\n          '&:hover': {\n            bgcolor: (theme) => alpha(theme.palette.primary.main, 0.16),\n          },\n        }),\n      }}\n    >\n      <Box component=\"span\" sx={{ width: 24, height: 24, mr: 2 }}>\n        {item.icon}\n      </Box>\n\n      <Box component=\"span\">{item.title === 'user' ? t('Users') : item.title} </Box>\n    </ListItemButton>\n  );\n}\n\nNavItem.propTypes = {\n  item: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\n\nimport Box from '@mui/material/Box';\n\nimport { useResponsive } from 'src/hooks/use-responsive';\n\nimport { NAV, HEADER } from './config-layout';\n\n// ----------------------------------------------------------------------\n\nconst SPACING = 8;\n\nexport default function Main({ children, sx, ...other }) {\n  const lgUp = useResponsive('up', 'lg');\n\n  return (\n    <Box\n      component=\"main\"\n      sx={{\n        flexGrow: 1,\n        minHeight: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        py: `${HEADER.H_MOBILE + SPACING}px`,\n        ...(lgUp && {\n          px: 2,\n          py: `${HEADER.H_DESKTOP + SPACING}px`,\n          width: `calc(100% - ${NAV.WIDTH}px)`,\n        }),\n        ...sx,\n      }}\n      {...other}\n    >\n      {children}\n    </Box>\n  );\n}\n\nMain.propTypes = {\n  children: PropTypes.node,\n  sx: PropTypes.object,\n};\n","import { alpha } from '@mui/material/styles';\nimport { dividerClasses } from '@mui/material/Divider';\nimport { checkboxClasses } from '@mui/material/Checkbox';\nimport { menuItemClasses } from '@mui/material/MenuItem';\nimport { autocompleteClasses } from '@mui/material/Autocomplete';\n\n// ----------------------------------------------------------------------\n\nexport const paper = ({ theme, bgcolor, dropdown }) => ({\n  ...bgBlur({\n    blur: 20,\n    opacity: 0.9,\n    color: theme.palette.background.paper,\n    ...(!!bgcolor && {\n      color: bgcolor,\n    }),\n  }),\n  backgroundImage: 'url(/assets/cyan-blur.png), url(/assets/red-blur.png)',\n  backgroundRepeat: 'no-repeat, no-repeat',\n  backgroundPosition: 'top right, left bottom',\n  backgroundSize: '50%, 50%',\n  ...(theme.direction === 'rtl' && {\n    backgroundPosition: 'top left, right bottom',\n  }),\n  ...(dropdown && {\n    padding: theme.spacing(0.5),\n    boxShadow: theme.customShadows.dropdown,\n    borderRadius: theme.shape.borderRadius * 1.25,\n  }),\n});\n\n// ----------------------------------------------------------------------\n\nexport const menuItem = (theme) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(0.75, 1),\n  borderRadius: theme.shape.borderRadius * 0.75,\n  '&:not(:last-of-type)': {\n    marginBottom: 4,\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    fontWeight: theme.typography.fontWeightSemiBold,\n    backgroundColor: theme.palette.action.selected,\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n  [`& .${checkboxClasses.root}`]: {\n    padding: theme.spacing(0.5),\n    marginLeft: theme.spacing(-0.5),\n    marginRight: theme.spacing(0.5),\n  },\n  [`&.${autocompleteClasses.option}[aria-selected=\"true\"]`]: {\n    backgroundColor: theme.palette.action.selected,\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n  [`&+.${dividerClasses.root}`]: {\n    margin: theme.spacing(0.5, 0),\n  },\n});\n\n// ----------------------------------------------------------------------\n\nexport function bgBlur(props) {\n  const color = props?.color || '#000000';\n  const blur = props?.blur || 6;\n  const opacity = props?.opacity || 0.8;\n  const imgUrl = props?.imgUrl;\n\n  if (imgUrl) {\n    return {\n      position: 'relative',\n      backgroundImage: `url(${imgUrl})`,\n      '&:before': {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        zIndex: 9,\n        content: '\"\"',\n        width: '100%',\n        height: '100%',\n        backdropFilter: `blur(${blur}px)`,\n        WebkitBackdropFilter: `blur(${blur}px)`,\n        backgroundColor: alpha(color, opacity),\n      },\n    };\n  }\n\n  return {\n    backdropFilter: `blur(${blur}px)`,\n    WebkitBackdropFilter: `blur(${blur}px)`,\n    backgroundColor: alpha(color, opacity),\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function bgGradient(props) {\n  const direction = props?.direction || 'to bottom';\n  const startColor = props?.startColor;\n  const endColor = props?.endColor;\n  const imgUrl = props?.imgUrl;\n  const color = props?.color;\n\n  if (imgUrl) {\n    return {\n      background: `linear-gradient(${direction}, ${startColor || color}, ${\n        endColor || color\n      }), url(${imgUrl})`,\n      backgroundSize: 'cover',\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center center',\n    };\n  }\n\n  return {\n    background: `linear-gradient(${direction}, ${startColor}, ${endColor})`,\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function textGradient(value) {\n  return {\n    background: `-webkit-linear-gradient(${value})`,\n    WebkitBackgroundClip: 'text',\n    WebkitTextFillColor: 'transparent',\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport const hideScroll = {\n  x: {\n    msOverflowStyle: 'none',\n    scrollbarWidth: 'none',\n    overflowX: 'scroll',\n    '&::-webkit-scrollbar': {\n      display: 'none',\n    },\n  },\n  y: {\n    msOverflowStyle: 'none',\n    scrollbarWidth: 'none',\n    overflowY: 'scroll',\n    '&::-webkit-scrollbar': {\n      display: 'none',\n    },\n  },\n};\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\nimport { Icon } from '@iconify/react';\n\nimport Box from '@mui/material/Box';\n\n// ----------------------------------------------------------------------\n\nconst Iconify = forwardRef(({ icon, width = 25, sx, ...other }, ref) => (\n  <Box\n    ref={ref}\n    component={Icon}\n    className=\"component-iconify\"\n    icon={icon}\n    sx={{ width, height: width, ...sx }}\n    {...other}\n  />\n));\n\nIconify.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  sx: PropTypes.object,\n  width: PropTypes.number,\n};\n\nexport default Iconify;\n","//  see 'date-fns' and 'date-fns-tz\nimport { format, getTime, fromUnixTime, formatDistanceToNow } from 'date-fns';\n// eslint-disable-next-line no-unused-vars, perfectionist/sort-imports, unused-imports/no-unused-imports\n\n// ----------------------------------------------------------------------\n\nexport function fDate(date, newFormat) {\n  const fm = newFormat || 'dd MMM yyyy';\n\n  return date ? format(new Date(date), fm) : '';\n}\n\nexport function fDateTime(date, newFormat) {\n  const fm = newFormat || 'dd MMM yyyy p';\n\n  return date ? format(new Date(date), fm) : '';\n}\n\nexport function fTimestamp(date) {\n  return date ? getTime(new Date(date)) : '';\n}\n\nexport function fUnixTime(time, fmt) {\n  return time ? format(fromUnixTime(time), fmt) : '';\n}\n\nexport function fToNow(date) {\n  return date\n    ? formatDistanceToNow(new Date(date), {\n        addSuffix: true,\n      })\n    : '';\n}\n","/*\r\n    Author: André Kreienbring\r\n    Displays the time of the last received websocket message.\r\n    Also indicates if the client is connected to the Shellybroker WS server\r\n*/\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState, useEffect, useCallback } from 'react';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport { fDateTime } from 'src/utils/format-time';\r\n\r\nimport { subscribeEvent, unsubscribeEvent } from 'src/events/pubsub';\r\n\r\nimport Iconify from 'src/components/iconify';\r\n\r\n/*\r\n  When the wbsocket receives data it publishes the custom event 'lastUpdateAt' with the current time.\r\n  When the websocket is closed it publishes the event 'lastUpdateAt' with a null value.\r\n  During rendering 'lastUpdateAt' may be undefined.\r\n*/\r\nconst LastUpdate = () => {\r\n  const [lastUpdateAt, setLastUpdateAt] = useState('connecting');\r\n  const { t } = useTranslation();\r\n  const navigate = useNavigate();\r\n\r\n  /**\r\n    @param {object} event Contains the Date/Time of the last update. Displayd in the Title of the view.\r\n      lastUpdatedAt Can be:\r\n      - {date} The time when the last ws msg was received\r\n      - {null} The websocket is disconnected from the server\r\n      - {'connecting'} The websocket is reconnecting to the server\r\n      - {'loading'} The websocket is fetching data from the server\r\n       - 0 The component will not be displayd if no websocket exists\r\n  */\r\n  const handleLastUpdate = useCallback((event) => {\r\n    if (event !== null) setLastUpdateAt(event.detail);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    subscribeEvent('lastUpdatedAt', handleLastUpdate);\r\n\r\n    return () => {\r\n      // cleanup on unmount: unsubscribe from the event\r\n      unsubscribeEvent('lastUpdatedAt');\r\n    };\r\n  }, [handleLastUpdate, lastUpdateAt]);\r\n\r\n  /*\r\n    When disconnected, this will reload the current location\r\n    and hence reconnect the websocket.\r\n  */\r\n  const handleClick = () => {\r\n    if (lastUpdateAt === null) {\r\n      setLastUpdateAt(undefined);\r\n      navigate(0);\r\n    }\r\n  };\r\n\r\n  if (lastUpdateAt === 0) return null;\r\n\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color={lastUpdateAt !== null && lastUpdateAt !== 'connecting' ? 'success' : 'error'}\r\n      startIcon={\r\n        lastUpdateAt === 'connecting' || lastUpdateAt === 'loading' ? (\r\n          <CircularProgress size={25} variant=\"indeterminate\" color=\"common.white\" />\r\n        ) : (\r\n          <Iconify icon=\"carbon:update-now\" />\r\n        )\r\n      }\r\n      onClick={handleClick}\r\n    >\r\n      {lastUpdateAt !== null && lastUpdateAt !== 'connecting' && lastUpdateAt !== 'loading'\r\n        ? fDateTime(lastUpdateAt, 'HH:mm:ss')\r\n        : t('_notconnected_')}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default LastUpdate;\r\n","/*\r\n  Author: André Kreienbring  \r\n  Renders the login, profile, security and create form depending on the passed in type property.\r\n*/\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useRef, useState, useEffect } from 'react';\r\n\r\nimport Link from '@mui/material/Link';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TextField from '@mui/material/TextField';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\n\r\nimport { validateEmail } from 'src/utils/general';\r\n\r\nimport { useShelly } from 'src/sccontext';\r\n\r\nimport Iconify from 'src/components/iconify';\r\n\r\n/**\r\n  Separates the form display components from the UserForm that communicates with the websocket.\r\n  @param {string} type Must be 'login', 'profile', 'security' , or 'create'\r\n  @param {object} requestResult Information about a request result from the websocket server.\r\n  @param {array} roles A list of roles requested from the websocket server.\r\n  @param {object} currentUser Either the currently logged in user OR a user from the UserView / UserTableRow list.\r\n  @param {function} setRequestResult is called when a displayed request result is changed (hidden)\r\n  @param {function} setCurrentUser called everytime an input is changed to reflect the updated user.\r\n  @param {function} handleForgotten called when a password must be reset.\r\n  @param {function} handleCurrentUser called when the user was changed.\r\n*/\r\nconst UserFormDisplay = ({\r\n  type,\r\n  requestResult,\r\n  roles,\r\n  currentUser,\r\n  setRequestResult,\r\n  setCurrentUser,\r\n  handleForgotten,\r\n  handleCurrentUser,\r\n}) => {\r\n  const { user } = useShelly();\r\n  const [homeSelection, setHomeSelection] = useState(\r\n    type !== 'profile' ? 'dashboard' : currentUser.home\r\n  );\r\n  const [roleSelection, setRoleSelection] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const { t } = useTranslation();\r\n  const isRolesLoaded = useRef(false);\r\n\r\n  // the origUser is used to check if properties are changed. See checkSubmitCriterias\r\n  const origUser = useRef(currentUser);\r\n\r\n  /*\r\n    Needed to ensure the form rerenders, when the roles from the server arrive.\r\n  */\r\n  useEffect(() => {\r\n    if (!isRolesLoaded.current && roles.length > 0) {\r\n      setRoleSelection(currentUser.roleid);\r\n      isRolesLoaded.current = true;\r\n    }\r\n  }, [roles, requestResult, currentUser]);\r\n\r\n  /*\r\n    type 'login': When email or password get the focus an 'invalid credentials' warning\r\n    will be hidden.\r\n    type 'profile' and 'create': Empty an evtl. existing success or fail message. \r\n  */\r\n  const handleInputFocus = () => {\r\n    setRequestResult({ success: true, message: '' });\r\n  };\r\n\r\n  /**\r\n    All controlled inputs constantly keep the 'currentUser'\r\n    up to date. This way it can be directly submitted to \r\n    the server without collecting the form entries.\r\n    The name of the input must match a user attribute!\r\n    @param {object} target The input field that was changed\r\n  */\r\n  const handleInputChange = ({ target }) => {\r\n    const updatedUser = { ...currentUser };\r\n    if (target.name === 'role') {\r\n      setRoleSelection(target.value);\r\n      updatedUser.role = roles[target.value - 1].name;\r\n      updatedUser.roleid = target.value;\r\n    } else if (target.name === 'home') {\r\n      setHomeSelection(target.value);\r\n    } else if (target.name === 'alias') {\r\n      // no spaces on alias\r\n      updatedUser[target.name] = target.value.trim();\r\n    } else {\r\n      updatedUser[target.name] = target.value;\r\n    }\r\n\r\n    setCurrentUser(updatedUser);\r\n  };\r\n\r\n  /**\r\n    Update the origUser to handle changes correctly and\r\n    send the updated user to the websocket server\r\n    @param {object} e The event\r\n  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    origUser.current = currentUser;\r\n    handleCurrentUser(currentUser);\r\n  };\r\n\r\n  /**\r\n    If entered values are unvalid the submit button is disabled.\r\n    This depends on the type of the form.\r\n    @return {boolean} true if the submit button must be disabled.\r\n  */\r\n  const checkSubmitCriterias = () => {\r\n    if (currentUser === null) return true;\r\n    let isDisabled = false;\r\n    if (type === 'login') {\r\n      // disable if email or password is empty or email not valid\r\n      isDisabled =\r\n        typeof currentUser.email === 'undefined' ||\r\n        currentUser.email.length === 0 ||\r\n        typeof currentUser.password === 'undefined' ||\r\n        currentUser.password.length === 0 ||\r\n        !validateEmail(currentUser.email);\r\n    }\r\n    if (type === 'profile' || type === 'settings') {\r\n      // disable if nothing was changed or alias is empty\r\n      isDisabled =\r\n        (currentUser.alias === origUser.current.alias || currentUser.alias.length === 0) &&\r\n        currentUser.firstname === origUser.current.firstname &&\r\n        currentUser.lastname === origUser.current.lastname &&\r\n        currentUser.home === origUser.current.home;\r\n    }\r\n    if (type === 'create') {\r\n      // disable if email or alias is empty or email not valid\r\n      isDisabled =\r\n        typeof currentUser.email === 'undefined' ||\r\n        currentUser.email.length === 0 ||\r\n        !validateEmail(currentUser.email) ||\r\n        typeof currentUser.alias === 'undefined' ||\r\n        currentUser.alias.length === 0;\r\n    }\r\n    if (type === 'security') {\r\n      // disable if email is empty or not valid of if password are not equal\r\n      isDisabled =\r\n        !validateEmail(currentUser.email) ||\r\n        currentUser.password !== currentUser.password2 ||\r\n        typeof currentUser.password === 'undefined' ||\r\n        currentUser.password.length === 0 ||\r\n        typeof currentUser.password2 === 'undefined' ||\r\n        currentUser.password.length2 === 0;\r\n    }\r\n    return isDisabled;\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <FormControl fullWidth size=\"subtitle2\">\r\n        <Stack spacing={3} sx={{ px: 3, py: 3 }}>\r\n          {(type === 'login' || type === 'create' || type === 'security') && (\r\n            <TextField\r\n              required\r\n              value={currentUser.email}\r\n              name=\"email\"\r\n              label={t('Email')}\r\n              onFocus={handleInputFocus}\r\n              onChange={handleInputChange}\r\n            />\r\n          )}\r\n          {(type === 'login' || type === 'security') && (\r\n            <TextField\r\n              name=\"password\"\r\n              required\r\n              label={t('Password')}\r\n              onFocus={handleInputFocus}\r\n              onChange={handleInputChange}\r\n              type={showPassword ? 'text' : 'password'}\r\n              slotProps={{\r\n                input: {\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton onClick={() => setShowPassword(!showPassword)} edge=\"end\">\r\n                        <Iconify icon={showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'} />\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                },\r\n              }}\r\n            />\r\n          )}\r\n          {type === 'security' && (\r\n            <TextField\r\n              required\r\n              name=\"password2\"\r\n              label={t('Password')}\r\n              onFocus={handleInputFocus}\r\n              onChange={handleInputChange}\r\n              type={showPassword ? 'text' : 'password'}\r\n              slotProps={{\r\n                input: {\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton onClick={() => setShowPassword(!showPassword)} edge=\"end\">\r\n                        <Iconify icon={showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'} />\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                },\r\n              }}\r\n            />\r\n          )}\r\n          {(type === 'profile' || type === 'create') && (\r\n            <Stack spacing={3}>\r\n              <TextField\r\n                required\r\n                value={currentUser.alias}\r\n                name=\"alias\"\r\n                label={t('Alias')}\r\n                onChange={handleInputChange}\r\n                onFocus={handleInputFocus}\r\n              />\r\n              <TextField\r\n                value={currentUser.firstname ? currentUser.firstname : ''}\r\n                name=\"firstname\"\r\n                label={t('Firstname')}\r\n                onChange={handleInputChange}\r\n                onFocus={handleInputFocus}\r\n              />\r\n              <TextField\r\n                value={currentUser.lastname ? currentUser.lastname : ''}\r\n                name=\"lastname\"\r\n                label={t('Lastname')}\r\n                onChange={handleInputChange}\r\n                onFocus={handleInputFocus}\r\n              />\r\n              <TextField\r\n                disabled={user.id === currentUser.id || currentUser.id === 1}\r\n                required\r\n                select\r\n                value={roleSelection}\r\n                name=\"role\"\r\n                label={t('Role')}\r\n                onChange={handleInputChange}\r\n                onFocus={handleInputFocus}\r\n              >\r\n                {typeof roles !== 'undefined'\r\n                  ? roles.map((role) => (\r\n                      <MenuItem key={role.name} value={role.id}>\r\n                        {role.name}\r\n                      </MenuItem>\r\n                    ))\r\n                  : null}\r\n              </TextField>\r\n            </Stack>\r\n          )}\r\n          {(type === 'settings' || type === 'create') && (\r\n            <TextField\r\n              required\r\n              select\r\n              value={homeSelection || 'dashboard'}\r\n              name=\"home\"\r\n              label={t('Home')}\r\n              onChange={handleInputChange}\r\n              onFocus={handleInputFocus}\r\n            >\r\n              <MenuItem value=\"dashboard\">Dashboard</MenuItem>\r\n              <MenuItem value=\"shellies\">Shellies</MenuItem>\r\n            </TextField>\r\n          )}\r\n          <Stack direction=\"row\" alignItems=\"baseline\" justifyContent=\"space-between\" spacing={1}>\r\n            <Typography variant=\"subtitle2\" color={requestResult.success ? 'success' : 'error'}>\r\n              {t(requestResult.message)}\r\n            </Typography>\r\n            {type === 'login' && (\r\n              <Link\r\n                variant=\"subtitle2\"\r\n                underline=\"hover\"\r\n                color=\"primary\"\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={() => handleForgotten(currentUser.email)}\r\n              >\r\n                {t('_forgotpw_')}\r\n              </Link>\r\n            )}\r\n          </Stack>\r\n          {type === 'login' ? (\r\n            <Button\r\n              disabled={checkSubmitCriterias()}\r\n              fullWidth\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"inherit\"\r\n            >\r\n              {t('Login')}\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              disabled={checkSubmitCriterias()}\r\n              fullWidth\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              color=\"inherit\"\r\n              variant=\"outlined\"\r\n              startIcon={<Iconify icon=\"formkit:submit\" />}\r\n            >\r\n              {t('Save')}\r\n            </Button>\r\n          )}\r\n        </Stack>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UserFormDisplay;\r\n\r\nUserFormDisplay.propTypes = {\r\n  type: PropTypes.string,\r\n  currentUser: PropTypes.object,\r\n  setCurrentUser: PropTypes.func,\r\n  requestResult: PropTypes.object,\r\n  setRequestResult: PropTypes.func,\r\n  roles: PropTypes.array,\r\n  handleForgotten: PropTypes.func,\r\n  handleCurrentUser: PropTypes.func,\r\n};\r\n","/*\r\n  Author: André Kreienbring\r\n  Renders the login, profile, security and create form.\r\n  Depending on the passed in type property.\r\n*/\r\nimport PropTypes from 'prop-types';\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nimport { useShelly } from 'src/sccontext';\r\nimport { publishEvent } from 'src/events/pubsub';\r\n\r\nimport UserFormDisplay from './user-form-display';\r\n\r\n/**\r\n  Presents a form to create / update / validate a user. Communicates with the \r\n  websocket server. The 'currentUser' is set to the logged in user OR to a user\r\n  that must be updated from the UserView / UserTableRow list.\r\n  @param {string} type Must be 'login', 'profile', 'security' , or 'create'\r\n  @param {object} updateuser The user that can be updated. Only set when a user\r\n    from the list of users (UserView / UserTableRow) is updated\r\n  @param {function} handleUsersReceived Will be used to update the list of all users\r\n    in the UserView\r\n  @param {function} handleUpdateUser When a user was updated this must be reflected in the UserView\r\n*/\r\nconst UserForm = ({ type, updateuser, handleUsersReceived, handleUpdateUser }) => {\r\n  const { login, user, request } = useShelly();\r\n  const [currentUser, setCurrentUser] = useState(() => {\r\n    if (type === 'profile' || type === 'settings' || type === 'security') {\r\n      return typeof updateuser === 'undefined' ? { ...user } : updateuser;\r\n    }\r\n    return {\r\n      alias: '',\r\n      email: '',\r\n      firstname: '',\r\n      lastname: '',\r\n      password: '',\r\n      home: 'dashboard',\r\n      roleid: 3,\r\n    };\r\n  });\r\n  const [roles, setRoles] = useState([]);\r\n  const [requestResult, setRequestResult] = useState({ success: true, message: '' });\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  /**\r\n    ONLY when type = 'login'!  \r\n    Called when a 'user validate' answer was received upon a former\r\n    request that was send by 'handleSubmit'\r\n    @param {object} msg The message that was passed with the answer\r\n  */\r\n  const handleUserValidation = useCallback(\r\n    (msg) => {\r\n      if (msg.data.success) {\r\n        setCurrentUser(msg.data.user);\r\n        login(msg.data.user);\r\n        navigate(`/${msg.data.user.home !== null ? msg.data.user.home : 'dashboard'}`);\r\n      } else {\r\n        setRequestResult({ success: false, message: msg.data.message });\r\n      }\r\n    },\r\n    [navigate, login]\r\n  );\r\n\r\n  /**\r\n    ONLY when type = 'profile' or 'security'! \r\n    Called when a 'user profile update' or 'user security update' message was received upon a former\r\n    request that was send by 'handleSubmit'\r\n    @param {object} msg The message that was passed with the answer from the server\r\n  */\r\n  const handleUserUpdate = useCallback(\r\n    (msg) => {\r\n      setRequestResult({\r\n        success: msg.data.success,\r\n        message: msg.data.message,\r\n      });\r\n      if (user.id === currentUser.id) {\r\n        // update the context user\r\n        login(currentUser);\r\n      }\r\n      if (typeof handleUpdateUser !== 'undefined') {\r\n        handleUpdateUser(currentUser);\r\n      } else if (location.pathname === '/user') publishEvent('userUpdated', currentUser);\r\n    },\r\n    [user, currentUser, login, handleUpdateUser, location]\r\n  );\r\n\r\n  /**\r\n    ONLY when type = 'create'! \r\n    Called when a 'user create' message was received upon a former\r\n    request that was send by 'handleSubmit'\r\n    @param {object} msg The mesage that was passed with the answer from the server\r\n  */\r\n  const handleUserCreate = useCallback(\r\n    (msg) => {\r\n      setRequestResult({\r\n        success: msg.data.success,\r\n        message: msg.data.message,\r\n      });\r\n      // if successful: update the users in UserView\r\n      if (msg.data.success) handleUsersReceived(msg);\r\n    },\r\n    [handleUsersReceived]\r\n  );\r\n\r\n  /**\r\n    Called when the requested list of roles \r\n    is received from the server.\r\n    @param {object} msg The received ws message with the list of roles\r\n  */\r\n  const handleRolesReceived = useCallback((msg) => {\r\n    setRoles(msg.data.roles);\r\n  }, []);\r\n\r\n  /**\r\n   * Called when the password was reset\r\n   * @param {object} msg The received ws message indicating if\r\n   *  the reset was successful or not\r\n   */\r\n  const handleResetPW = useCallback((msg) => {\r\n    setRequestResult({\r\n      success: msg.data.success,\r\n      message: msg.data.message,\r\n    });\r\n  }, []);\r\n\r\n  // --------------------- Websocket Implementation BEGIN----------------\r\n  /*\r\n      When the user submits the login form or wants to reset his password messages\r\n      are send to the websocket server. The server answers and the response is\r\n      handled accordingly.\r\n    */\r\n  useEffect(() => {\r\n    if (type === 'profile' || type === 'create')\r\n      request(\r\n        {\r\n          event: 'roles get all',\r\n          data: {\r\n            source: 'Users Form',\r\n            message: 'User Form needs the list of roles',\r\n          },\r\n        },\r\n        handleRolesReceived\r\n      );\r\n  }, [type, handleRolesReceived, request]);\r\n  // --------------------- Websocket Implementation END------------------\r\n\r\n  /**\r\n    Sends a validation request to the websocket server (type = 'login')\r\n    OR updates the current user profile data (type = 'profile)\r\n    OR creates the current user (type = 'create)\r\n    OR updates the current user credentials (type = 'security)\r\n    OR creates the current user settings (type = 'settings)\r\n    The answer is received as a websocket message.\r\n    @param {object} formUser The user that was submitted from the form\r\n  */\r\n  const handleCurrentUser = (formUser) => {\r\n    if (type === 'login') {\r\n      // send a validation request to validate the credentials\r\n      const msg = {\r\n        event: 'user validate',\r\n        data: {\r\n          source: 'User Form',\r\n          message: 'User Form wants to validate a user',\r\n          user: formUser,\r\n        },\r\n      };\r\n      request(msg, handleUserValidation);\r\n    } else if (type === 'profile') {\r\n      // send the updated user to the server\r\n      const msg = {\r\n        event: 'user profile update',\r\n        data: {\r\n          source: 'User Form',\r\n          message: 'User Form wants to update a users profile',\r\n          user: formUser,\r\n        },\r\n      };\r\n      request(msg, handleUserUpdate);\r\n    } else if (type === 'create') {\r\n      // send the created user to the server\r\n      const msg = {\r\n        event: 'user create',\r\n        data: {\r\n          source: 'User Form ',\r\n          message: 'User Form wants to create a new user',\r\n          user: formUser,\r\n        },\r\n      };\r\n      request(msg, handleUserCreate);\r\n    } else if (type === 'security') {\r\n      // send the updated user to the server\r\n      const msg = {\r\n        event: 'user security update',\r\n        data: {\r\n          source: 'User Form ',\r\n          message: 'User Form  wants to update a users credentials',\r\n          user: formUser,\r\n        },\r\n      };\r\n      request(msg, handleUserUpdate);\r\n    } else if (type === 'settings') {\r\n      // send the updated user to the server\r\n      const msg = {\r\n        event: 'user settings update',\r\n        data: {\r\n          source: 'User Form ',\r\n          message: 'User Form  wants to update a users settings',\r\n          user: formUser,\r\n        },\r\n      };\r\n      request(msg, handleUserUpdate);\r\n    }\r\n  };\r\n\r\n  /**\r\n    ONLY when type = 'login'!  \r\n    Sends a reset password to the websocket server.\r\n    The answer is received as a websocket message.\r\n    @param {string} email The email of a user who wants to reset his password\r\n  */\r\n  const handleForgotten = (email) => {\r\n    const msg = {\r\n      event: 'user resetpw',\r\n      data: {\r\n        source: 'User Form',\r\n        message: 'User Form wants to reset a password',\r\n        email,\r\n      },\r\n    };\r\n    request(msg, handleResetPW);\r\n  };\r\n\r\n  return (\r\n    <UserFormDisplay\r\n      type={type}\r\n      roles={roles}\r\n      requestResult={requestResult}\r\n      currentUser={currentUser}\r\n      setCurrentUser={setCurrentUser}\r\n      setRequestResult={setRequestResult}\r\n      handleForgotten={handleForgotten}\r\n      handleCurrentUser={handleCurrentUser}\r\n    />\r\n  );\r\n};\r\nexport default UserForm;\r\n\r\nUserForm.propTypes = {\r\n  type: PropTypes.string,\r\n  updateuser: PropTypes.object,\r\n  handleUsersReceived: PropTypes.func,\r\n  handleUpdateUser: PropTypes.func,\r\n};\r\n","/*\r\n  Author: André Kreienbring\r\n  Presented for profile editing in the account popover or in a user table row entry. \r\n  When clicked a dialog is opened that holds the form to update an existing user.\r\n*/\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport Iconify from 'src/components/iconify';\r\n\r\nimport UserForm from './user-form';\r\n\r\n/**\r\n  Component that allows to update an existing user\r\n  @param {string} title The title that is presented at the top\r\n  @param {boolean} openUpdate To determine if the dialog is shown or not\r\n  @param {type} type: Type of the planned update. Either 'profile' or 'security'\r\n  @param {object} updateuser The user that can be updated. Only set when a user\r\n    from UserView / UserTableRow is updated\r\n  @param {function} onCloseUpdate Handles the closed status. Either in the \r\n    UserView / UserTableRow. Or in the\r\n    AccountPopover component\r\n  @param {function} handleUpdateUser Called when UserView / UserTableRow must rerender the user in the list\r\n*/\r\nexport default function UpdateUser({\r\n  title,\r\n  openUpdate,\r\n  type,\r\n  updateuser,\r\n  onCloseUpdate,\r\n  handleUpdateUser,\r\n}) {\r\n  return (\r\n    <Drawer\r\n      anchor=\"right\"\r\n      open={openUpdate}\r\n      onClose={onCloseUpdate}\r\n      slotProps={{\r\n        paper: {\r\n          sx: { width: 300, border: 'none', overflow: 'hidden' },\r\n        },\r\n      }}\r\n    >\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        sx={{ px: 1, py: 2 }}\r\n      >\r\n        <Typography variant=\"h6\" sx={{ ml: 1 }}>\r\n          {title}\r\n        </Typography>\r\n        <IconButton onClick={onCloseUpdate}>\r\n          <Iconify icon=\"eva:close-fill\" />\r\n        </IconButton>\r\n      </Stack>\r\n\r\n      <Divider />\r\n      <UserForm type={type} updateuser={updateuser} handleUpdateUser={handleUpdateUser} />\r\n    </Drawer>\r\n  );\r\n}\r\n","/*\n  Author: André Kreienbring\n  A Popover that presents functions to edit the current user settings\n  and to log out from the system\n*/\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\n\nimport Box from '@mui/material/Box';\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport Popover from '@mui/material/Popover';\nimport { alpha } from '@mui/material/styles';\nimport MenuItem from '@mui/material/MenuItem';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport { mapNumberToMax } from 'src/utils/general';\n\nimport { useShelly } from 'src/sccontext';\n\nimport Iconify from 'src/components/iconify';\n\nimport UpdateUser from 'src/sections/user/update-user';\n\n// ----------------------------------------------------------------------\n\nexport default function AccountPopover() {\n  const [open, setOpen] = useState(null);\n  const [openUpdate, setOpenUpdate] = useState({ open: false, type: '' });\n\n  const { user, logout } = useShelly();\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n\n  /**\n    Open / Close the UserUpdate Dialog\n    with the type of update that is going to be made\n    @param {string} type The type is either 'profile', 'security' or 'settings'\n  */\n  const handleOpenUpdate = (type) => {\n    handleClose();\n    setOpenUpdate({ open: true, type });\n  };\n  const handleCloseUpdate = () => {\n    setOpenUpdate({ open: false, type: '' });\n  };\n\n  /**\n    Navigates to the configure homepage (dashboard or shellies)\n    of the current user\n   */\n  const handleHome = () => {\n    handleClose();\n    navigate(`${user.home}`);\n  };\n\n  /**\n   * Opens the Popover itself \n   * @param {object} event \n   */\n  const handleOpen = (event) => {\n    setOpen(event.currentTarget);\n  };\n  const handleClose = () => {\n    setOpen(null);\n  };\n\n  /**\n   * Maps the type to a title that is displayed in the Popover\n   * @param {string} type \n   * @returns The (translated) title\n   */\n  const getTitle = (type) => {\n    if (type === 'profile') {\n      return t('_editprofile_');\n    }\n    if (type === 'security') {\n      return t('_editsecurity_');\n    }\n    return t('_editsettings');\n  };\n\n  return (\n    <>\n      <IconButton\n        onClick={handleOpen}\n        sx={{\n          width: 40,\n          height: 40,\n          background: (theme) => alpha(theme.palette.grey[500], 0.08),\n          ...(open && {\n            background: (theme) =>\n              `linear-gradient(135deg, ${theme.palette.primary.light} 0%, ${theme.palette.primary.main} 100%)`,\n          }),\n        }}\n      >\n        <Avatar\n          src={`/assets/images/avatars/avatar_${mapNumberToMax(user.id, 25)}.jpg`}\n          alt={user.name}\n          sx={{\n            width: 36,\n            height: 36,\n            border: (theme) => `solid 2px ${theme.palette.background.default}`,\n          }}\n        >\n          {`${user.firstname !== null ? user.firstname : user.alias} ${user.lastname !== null ? user.lastname : user.alias}`}\n        </Avatar>\n      </IconButton>\n\n      <Popover\n        open={!!open}\n        anchorEl={open}\n        onClose={handleClose}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        marginThreshold={8}\n        slotProps={{\n          paper: {\n            sx: {\n              p: 0,\n              mt: 1,\n              ml: 0.75,\n              width: 200,\n            },\n          },\n        }}\n      >\n        <Box sx={{ my: 1.5, px: 2 }}>\n          <Typography variant=\"subtitle2\" noWrap>\n            {`${user.firstname !== null ? user.firstname : user.alias} ${user.lastname !== null ? user.lastname : user.alias}`}\n          </Typography>\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n            {user.email}\n          </Typography>\n        </Box>\n\n        <Divider sx={{ borderStyle: 'dashed' }} />\n\n        <MenuItem key=\"Home\" onClick={handleHome}>\n          <ListItemIcon>\n            <Iconify icon=\"eva:home-fill\" />\n          </ListItemIcon>\n          <ListItemText primary={t('Home')} />\n        </MenuItem>\n        <MenuItem key=\"Profile\" onClick={() => handleOpenUpdate('profile')}>\n          <ListItemIcon>\n            <Iconify icon=\"eva:person-fill\" />\n          </ListItemIcon>\n          <ListItemText primary={t('Profile')} />\n        </MenuItem>\n\n        <MenuItem key=\"Security\" onClick={() => handleOpenUpdate('security')}>\n          <ListItemIcon>\n            <Iconify icon=\"eva:lock-fill\" />\n          </ListItemIcon>\n          <ListItemText primary={t('Security')} />\n        </MenuItem>\n        <MenuItem key=\"Settings\" onClick={() => handleOpenUpdate('settings')}>\n          <ListItemIcon>\n            <Iconify icon=\"eva:settings-2-fill\" />\n          </ListItemIcon>\n          <ListItemText primary={t('Settings')} />\n        </MenuItem>\n\n        <Divider sx={{ borderStyle: 'dashed', m: 0 }} />\n\n        <MenuItem\n          disableRipple\n          disableTouchRipple\n          onClick={logout}\n          sx={{ typography: 'body2', color: 'error.main', py: 1.5 }}\n        >\n          {t('Logout')}\n        </MenuItem>\n      </Popover>\n      <UpdateUser\n        title={getTitle(openUpdate.type)}\n        openUpdate={openUpdate.open}\n        type={openUpdate.type}\n        onCloseUpdate={handleCloseUpdate}\n      />\n    </>\n  );\n}\n","/*\nAuthor: André Kreienbring\nLets the user select a language.\nFor the usage of i18next with placeholders:\nUse something like\n{\n  \"translation\": {\n    \"headerTitle\": \"My {{appName}} Header Title\"\n  }\n}\nin the locale json file an then use\n{t('headerTitle', { appName: \"Shelly Monitor\" })}\nfor the text that needs to be translated in the components.\nSee 'i18n.js' for the initialization of i18next.\n*/\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Box from '@mui/material/Box';\nimport Popover from '@mui/material/Popover';\nimport MenuItem from '@mui/material/MenuItem';\nimport IconButton from '@mui/material/IconButton';\n\nimport { languages } from 'src/i18n';\n\nexport default function LanguagePopover() {\n  const [open, setOpen] = useState(null);\n  const {\n    t,\n    i18n: { changeLanguage, language },\n  } = useTranslation();\n\n  const [currentLanguage, setCurrentLanguage] = useState(language);\n  const [languageIndex, setLanguageIndex] = useState(0);\n\n  /**\n   * When the language was changes the according states are set and\n   * i18next is used\n   * @param {string} value \n   * @param {number} index \n   */\n  const handleChangeLanguage = (value, index) => {\n    setCurrentLanguage(value);\n    setLanguageIndex(index);\n    changeLanguage(value);\n    // store the current language for reuse after page refresh\n    localStorage.setItem('i18nLanguage', value);\n    handleClose();\n  };\n\n  const handleOpen = (event) => {\n    setOpen(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setOpen(null);\n  };\n\n  return (\n    <>\n      <IconButton\n        onClick={handleOpen}\n        sx={{\n          width: 40,\n          height: 40,\n          ...(open && {\n            bgcolor: 'action.selected',\n          }),\n        }}\n      >\n        <img\n          src={`/assets/icons/flags/${currentLanguage}.svg`}\n          alt={t(languages[languageIndex].label)}\n        />\n      </IconButton>\n\n      <Popover\n        open={!!open}\n        anchorEl={open}\n        onClose={handleClose}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        slotProps={{\n          paper: {\n            sx: {\n              p: 0,\n              mt: 1,\n              ml: 0.75,\n              width: 180,\n            },\n          },\n        }}\n      >\n        {languages.map((option, index) => (\n          <MenuItem\n            key={option.value}\n            selected={option.value === languages[languageIndex].value}\n            onClick={(event) => handleChangeLanguage(option.value, index)}\n            sx={{ typography: 'body2', py: 1 }}\n          >\n            <Box\n              component=\"img\"\n              alt={option.label}\n              src={`/assets/icons/flags/${option.value}.svg`}\n              sx={{ width: 28, mr: 2 }}\n            />\n\n            {t(option.label)}\n          </MenuItem>\n        ))}\n      </Popover>\n    </>\n  );\n}\n","/*\n  Author: André Kreienbring\n  Lists notifications that are retrieved from the server.\n  Presents functions to manage them.\n*/\nimport PropTypes from 'prop-types';\nimport { es, de, enUS } from 'date-fns/locale';\nimport { useTranslation } from 'react-i18next';\nimport { formatDistanceToNow } from 'date-fns';\nimport { useRef, useState, useEffect, useCallback } from 'react';\n\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport Stack from '@mui/material/Stack';\nimport Badge from '@mui/material/Badge';\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport Tooltip from '@mui/material/Tooltip';\nimport Popover from '@mui/material/Popover';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemButton from '@mui/material/ListItemButton';\n\nimport { createUUID } from 'src/utils/general';\n\nimport { useShelly } from 'src/sccontext';\n\nimport Iconify from 'src/components/iconify';\nimport Scrollbar from 'src/components/scrollbar';\n\n// ----------------------------------------------------------------------\n\nexport default function NotificationsPopover() {\n  const [notifications, setNotifications] = useState([]);\n  const totalUnRead = notifications.filter((item) => item.isUnread === true).length;\n  const [open, setOpen] = useState(null);\n  const { request, subscribe, unsubscribe, send } = useShelly();\n  const subscriptionID = useRef(createUUID());\n  const isNotificationLoaded = useRef(false);\n  const { t } = useTranslation();\n\n  /**\n    Called after a new notification arrived.\n    @param {object} msg The message with a new notification.\n  */\n  const handleNotificationUpdate = useCallback(\n    (msg) => {\n      const { notification } = msg.data;\n      const updatedNotifications = [...notifications];\n\n      updatedNotifications.push({\n        id: notification.id,\n        type: notification.type,\n        title: notification.title,\n        description: notification.notification,\n        avatar: null,\n        createdAt: new Date(notification.ts),\n        isUnread: notification.isUnread === 1,\n      });\n\n      setNotifications(updatedNotifications);\n    },\n    [notifications]\n  );\n\n  /**\n    Called when the PopOver is mounted and the list of notifications\n    is received from the server.\n    @param {object} msg The message with the initial notifications attached\n  */\n  const handleNotificationsReceived = useCallback(\n    (msg) => {\n      isNotificationLoaded.current = true;\n\n      const allNotifications = msg.data.notifications.map((notification, index) => ({\n        id: notification.id,\n        type: notification.type,\n        title: notification.title,\n        description: notification.notification,\n        avatar: null,\n        createdAt: new Date(notification.ts),\n        isUnread: notification.isUnread === 1,\n      }));\n\n      setNotifications(allNotifications);\n    },\n    [setNotifications]\n  );\n\n  // --------------------- Websocket Implementation BEGIN----------------\n  /*\n    After creation of the page all notifications are requested from the websocket server.\n    The components also subscribes to the event 'ScriptError' to receive them as they occur.\n    The useEffect is only triggered once and lives as long the page is mounted.\n  */\n  useEffect(() => {\n    const currentSubscriptionID = subscriptionID.current;\n\n    if (!isNotificationLoaded.current)\n      request(\n        {\n          event: 'notifications get all',\n          data: {\n            source: 'Notifications Popover',\n            message: 'Notifications Popover needs the list of notifications',\n          },\n        },\n        handleNotificationsReceived\n      );\n\n    subscribe(\n      {\n        subscriptionID: subscriptionID.current,\n        callback: handleNotificationUpdate,\n        all: true,\n      },\n      ['notification create']\n    );\n    /*\n      Clean up the websocket subscription when unmounting the component.\n    */\n    // eslint-disable-next-line consistent-return\n    return () => {\n      unsubscribe(currentSubscriptionID, ['notification create']);\n    };\n  }, [handleNotificationsReceived, handleNotificationUpdate, subscribe, unsubscribe, request]);\n\n  /**\n   * Used to open the Popover\n   * @param {*} event\n   */\n  const handleOpen = (event) => {\n    setOpen(event.currentTarget);\n  };\n  const handleClose = () => {\n    setOpen(null);\n  };\n\n  /**\n   * Sets all notifications to read.\n   * Only read notifications can be deleted\n   */\n  const handleMarkAllAsRead = () => {\n    const readNotifications = [];\n    const newNotifications = notifications.map((notification) => {\n      notification.isUnread = false;\n      readNotifications.push(notification.id);\n      return notification;\n    });\n\n    setNotifications(newNotifications);\n\n    send({\n      event: 'notification update',\n      data: {\n        source: 'Notifications Popover',\n        message: 'Notifications Popover wants to update notifications',\n        ids: readNotifications,\n      },\n    });\n  };\n\n  /**\n    When an unread notification is clicked,\n    it will be marked as read. An according update is send to the server.\n    @param {object} readNotification The notification that was read\n  */\n  const handleItemClick = (readNotification) => {\n    const readNotifications = [];\n\n    const newNotifications = notifications.map((notification) => {\n      if (readNotification.id === notification.id) {\n        notification.isUnread = false;\n        readNotifications.push(notification.id);\n        return notification;\n      }\n      return notification;\n    });\n\n    setNotifications(newNotifications);\n\n    send({\n      event: 'notification update',\n      data: {\n        source: 'Notifications Popover',\n        message: 'Notifications Popover wants to update notifications',\n        ids: readNotifications,\n      },\n    });\n  };\n\n  /**\n   * Deletes a notification by sending a request to the server.\n   * The server answers with the remaining list of notifications.\n   * @param {number} id The id of the notification that must be deleted\n   */\n  const handleItemDelete = (id) => {\n    request(\n      {\n        event: 'notification delete',\n        data: {\n          source: 'Notifications Popover',\n          message: 'Notifications Popover wants to delete a notification',\n          ids: [id],\n        },\n      },\n      handleNotificationsReceived\n    );\n  };\n\n  return (\n    <>\n      <IconButton color={open ? 'primary' : 'default'} onClick={handleOpen}>\n        <Badge badgeContent={totalUnRead} color=\"error\">\n          <Iconify width={24} icon=\"solar:bell-bing-bold-duotone\" />\n        </Badge>\n      </IconButton>\n\n      <Popover\n        open={!!open}\n        anchorEl={open}\n        onClose={handleClose}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        slotProps={{\n          paper: {\n            sx: {\n              mt: 1.5,\n              ml: 0.75,\n              width: 360,\n            },\n          },\n        }}\n      >\n        <Box sx={{ display: 'flex', alignItems: 'center', py: 2, px: 2.5 }}>\n          <Box sx={{ flexGrow: 1 }}>\n            <Typography variant=\"subtitle1\">{t('Notifications')}</Typography>\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              {t('_unreadmessages_', { totalUnRead })}\n            </Typography>\n          </Box>\n\n          {totalUnRead > 0 && (\n            <Tooltip title={t('_markallasread_')}>\n              <IconButton color=\"primary\" onClick={handleMarkAllAsRead}>\n                <Iconify icon=\"eva:done-all-fill\" />\n              </IconButton>\n            </Tooltip>\n          )}\n        </Box>\n\n        <Divider sx={{ borderStyle: 'dashed' }} />\n\n        <Scrollbar sx={{ height: { xs: 340, sm: 'auto' } }}>\n          <List\n            disablePadding\n            subheader={\n              <ListSubheader disableSticky sx={{ py: 1, px: 2.5, typography: 'overline' }}>\n                {t('Unread')}\n              </ListSubheader>\n            }\n          >\n            {notifications\n              .filter((item) => item.isUnread === true)\n              .map((notification) => (\n                <NotificationItem\n                  key={createUUID()}\n                  notification={notification}\n                  handleItemClick={handleItemClick}\n                />\n              ))}\n          </List>\n\n          <List\n            disablePadding\n            subheader={\n              <ListSubheader disableSticky sx={{ py: 1, px: 2.5, typography: 'overline' }}>\n                {t('Read')}\n              </ListSubheader>\n            }\n          >\n            {notifications\n              .filter((item) => item.isUnread === false)\n              .map((notification) => (\n                <NotificationItem\n                  key={createUUID()}\n                  notification={notification}\n                  handleItemDelete={handleItemDelete}\n                />\n              ))}\n          </List>\n        </Scrollbar>\n      </Popover>\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n/**\n * This components presents a single notification.\n * @param {object} notification The notification to show\n * @param {function} handleItemClick Sets the notification to 'read'\n * @param {function} handleItemDelete Deletes the notification\n */\nfunction NotificationItem({ notification, handleItemClick, handleItemDelete }) {\n  const { avatar, title } = renderContent(notification);\n  const { i18n } = useTranslation();\n\n  /*\n    Maps the current i18n language to a date-fns locale\n  */\n  const getDatefnsLocale = () => {\n    switch (i18n.language) {\n      case 'en':\n        return enUS;\n      case 'de':\n        return de;\n      case 'es':\n        return es;\n      default:\n        return enUS;\n    }\n  };\n\n  return (\n    <ListItemButton\n      onClick={(event) => {\n        if (notification.isUnread) handleItemClick(notification);\n      }}\n      sx={{\n        py: 1.5,\n        px: 2.5,\n        mt: '1px',\n        ...(notification.isUnread && {\n          bgcolor: 'action.selected',\n        }),\n      }}\n    >\n      <ListItemAvatar>\n        <Avatar sx={{ bgcolor: 'background.neutral' }}>{avatar}</Avatar>\n      </ListItemAvatar>\n      <Stack direction=\"row\" spacing={3} alignItems=\"start\" justifyContent=\"space-between\">\n        <ListItemText\n          primary={title}\n          secondary={\n            <Typography\n              variant=\"caption\"\n              sx={{\n                mt: 0.5,\n                display: 'flex',\n                alignItems: 'center',\n                color: 'text.disabled',\n              }}\n            >\n              <Iconify icon=\"eva:clock-outline\" sx={{ mr: 0.5, width: 16, height: 16 }} />\n              {formatDistanceToNow(notification.createdAt, {\n                addSuffix: true,\n                locale: getDatefnsLocale(),\n              })}\n            </Typography>\n          }\n          sx={{ maxWidth: 200 }}\n        />\n        {!notification.isUnread && (\n          <IconButton\n            onClick={(event) => {\n              handleItemDelete(notification.id);\n            }}\n          >\n            <Iconify icon=\"eva:trash-2-outline\" sx={{ mr: 2 }} />\n          </IconButton>\n        )}\n      </Stack>\n    </ListItemButton>\n  );\n}\n\n// ----------------------------------------------------------------------\n/**\n * Renders the content of a notification\n * @param {object} notification\n * @returns\n */\nfunction renderContent(notification) {\n  const title = (\n    <>\n      <Typography variant=\"subtitle2\">{notification.title} </Typography>\n      <Typography\n        component=\"span\"\n        variant=\"body2\"\n        style={{ whiteSpace: 'pre-line' }}\n        sx={{ color: 'text.secondary' }}\n      >\n        {notification.description}\n      </Typography>\n    </>\n  );\n\n  if (notification.type === 'script-error') {\n    return {\n      avatar: <img alt={notification.title} src=\"/assets/icons/ic_notification_error.svg\" />,\n      title,\n    };\n  }\n\n  if (notification.type === 'device-offline') {\n    return {\n      avatar: <img alt={notification.title} src=\"/assets/icons/ic_notification_offline.svg\" />,\n      title,\n    };\n  }\n  return null;\n}\n\nNotificationItem.propTypes = {\n  handleItemDelete: PropTypes.func,\n  handleItemClick: PropTypes.func,\n  notification: PropTypes.shape({\n    createdAt: PropTypes.instanceOf(Date),\n    id: PropTypes.number,\n    isUnread: PropTypes.bool,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    type: PropTypes.string,\n    avatar: PropTypes.any,\n  }),\n};\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport { useTheme } from '@mui/material/styles';\nimport IconButton from '@mui/material/IconButton';\n\nimport { useResponsive } from 'src/hooks/use-responsive';\n\nimport { bgBlur } from 'src/theme/css';\n\nimport Iconify from 'src/components/iconify';\nimport LastUpdate from 'src/components/shellies/lastupdate';\n\nimport { NAV, HEADER } from './config-layout';\nimport AccountPopover from './common/account-popover';\nimport LanguagePopover from './common/language-popover';\nimport NotificationsPopover from './common/notifications-popover';\n\n// ----------------------------------------------------------------------\n\nexport default function Header({ onOpenNav }) {\n  const theme = useTheme();\n  const location = useLocation();\n\n  const lgUp = useResponsive('up', 'lg');\n\n  const renderContent = (\n    <>\n      {!lgUp && (\n        <IconButton onClick={onOpenNav} sx={{ mr: 1 }}>\n          <Iconify icon=\"eva:menu-2-fill\" />\n        </IconButton>\n      )}\n\n      <Box sx={{ flexGrow: 1 }} />\n\n      <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n        {(location.pathname === '/dashboard' || location.pathname === '/shellies') && (\n          <LastUpdate />\n        )}\n        <LanguagePopover />\n        <NotificationsPopover />\n        <AccountPopover />\n      </Stack>\n    </>\n  );\n\n  return (\n    <AppBar\n      sx={{\n        boxShadow: 'none',\n        height: HEADER.H_MOBILE,\n        zIndex: theme.zIndex.appBar + 1,\n        ...bgBlur({\n          color: theme.palette.background.default,\n        }),\n        transition: theme.transitions.create(['height'], {\n          duration: theme.transitions.duration.shorter,\n        }),\n        ...(lgUp && {\n          width: `calc(100% - ${NAV.WIDTH + 1}px)`,\n          height: HEADER.H_DESKTOP,\n        }),\n      }}\n    >\n      <Toolbar\n        sx={{\n          height: 1,\n          px: { lg: 5 },\n        }}\n      >\n        {renderContent}\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nHeader.propTypes = {\n  onOpenNav: PropTypes.func,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Box from '@mui/material/Box';\n\nimport Nav from './nav';\nimport Main from './main';\nimport Header from './header';\n\n// ----------------------------------------------------------------------\n\nexport default function DashboardLayout({ children }) {\n  const [openNav, setOpenNav] = useState(false);\n\n  return (\n    <>\n      <Header onOpenNav={() => setOpenNav(true)} />\n\n      <Box\n        sx={{\n          minHeight: 1,\n          display: 'flex',\n          flexDirection: { xs: 'column', lg: 'row' },\n        }}\n      >\n        <Nav openNav={openNav} onCloseNav={() => setOpenNav(false)} />\n\n        <Main>{children}</Main>\n      </Box>\n    </>\n  );\n}\n\nDashboardLayout.propTypes = {\n  children: PropTypes.node,\n};\n","import { lazy, Suspense } from 'react';\nimport { Outlet, Navigate, useRoutes } from 'react-router-dom';\n\nimport { useShelly } from 'src/sccontext';\nimport DashboardLayout from 'src/layouts/dashboard';\n\nexport const AppPage = lazy(() => import('src/pages/app'));\nexport const BlogPage = lazy(() => import('src/pages/blog'));\nexport const UserPage = lazy(() => import('src/pages/user'));\nexport const LoginPage = lazy(() => import('src/pages/login'));\nexport const LandingPage = lazy(() => import('src/pages/landing'));\nexport const ShelliesPage = lazy(() => import('src/pages/shellies'));\nexport const Page404 = lazy(() => import('src/pages/page-not-found'));\n\n// ----------------------------------------------------------------------\n\nexport default function Router() {\n  const { user } = useShelly();\n\n  const routes = useRoutes([\n    {\n      path: '/',\n      element: window.scconfig.LANDING_PAGE === 'login' ? <LoginPage /> : <LandingPage />,\n    },\n    {\n      // only if logged in\n      element: user ? (\n        <DashboardLayout>\n          <Suspense>\n            <Outlet />\n          </Suspense>\n        </DashboardLayout>\n      ) : (\n        <Navigate to=\"/\" replace />\n      ),\n      children:\n        // only if admin or no user (needed for correct logout behavior)\n        !user || user.roleid === 1\n          ? [\n              { path: 'dashboard', element: <AppPage />, index: true },\n              { path: 'user', element: <UserPage /> },\n              { path: 'shellies', element: <ShelliesPage /> },\n              { path: 'blog', element: <BlogPage /> },\n            ]\n          : [\n              { path: 'dashboard', element: <AppPage />, index: true },\n              { path: 'shellies', element: <ShelliesPage /> },\n              { path: 'blog', element: <BlogPage /> },\n            ],\n    },\n    {\n      path: 'login',\n      element: <LoginPage />,\n    },\n    {\n      path: '404',\n      element: <Page404 />,\n    },\n    {\n      path: '*',\n      element: <Navigate to=\"/404\" replace />,\n    },\n  ]);\n\n  return routes;\n}\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\n// ----------------------------------------------------------------------\n\nexport function useScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import { alpha } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\n// SETUP COLORS\n\nexport const grey = {\n  0: '#FFFFFF',\n  100: '#F9FAFB',\n  200: '#F4F6F8',\n  300: '#DFE3E8',\n  400: '#C4CDD5',\n  500: '#919EAB',\n  600: '#637381',\n  700: '#454F5B',\n  800: '#212B36',\n  900: '#161C24',\n};\n\nexport const primary = {\n  lighter: '#D0ECFE',\n  light: '#73BAFB',\n  main: '#1877F2',\n  dark: '#0C44AE',\n  darker: '#042174',\n  contrastText: '#FFFFFF',\n};\n\nexport const secondary = {\n  lighter: '#EFD6FF',\n  light: '#C684FF',\n  main: '#8E33FF',\n  dark: '#5119B7',\n  darker: '#27097A',\n  contrastText: '#FFFFFF',\n};\n\nexport const info = {\n  lighter: '#CAFDF5',\n  light: '#61F3F3',\n  main: '#00B8D9',\n  dark: '#006C9C',\n  darker: '#003768',\n  contrastText: '#FFFFFF',\n};\n\nexport const success = {\n  lighter: '#C8FAD6',\n  light: '#5BE49B',\n  main: '#00A76F',\n  dark: '#007867',\n  darker: '#004B50',\n  contrastText: '#FFFFFF',\n};\n\nexport const warning = {\n  lighter: '#FFF5CC',\n  light: '#FFD666',\n  main: '#FFAB00',\n  dark: '#B76E00',\n  darker: '#7A4100',\n  contrastText: grey[800],\n};\n\nexport const error = {\n  lighter: '#FFE9D5',\n  light: '#FFAC82',\n  main: '#FF5630',\n  dark: '#B71D18',\n  darker: '#7A0916',\n  contrastText: '#FFFFFF',\n};\n\nexport const common = {\n  black: '#000000',\n  white: '#FFFFFF',\n};\n\nexport const action = {\n  hover: alpha(grey[500], 0.08),\n  selected: alpha(grey[500], 0.16),\n  disabled: alpha(grey[500], 0.8),\n  disabledBackground: alpha(grey[500], 0.24),\n  focus: alpha(grey[500], 0.24),\n  hoverOpacity: 0.08,\n  disabledOpacity: 0.48,\n};\n\nconst base = {\n  primary,\n  secondary,\n  info,\n  success,\n  warning,\n  error,\n  grey,\n  common,\n  divider: alpha(grey[500], 0.2),\n  action,\n};\n\n// ----------------------------------------------------------------------\n\nexport function palette() {\n  return {\n    ...base,\n    mode: 'light',\n    text: {\n      primary: grey[800],\n      secondary: grey[600],\n      disabled: grey[500],\n    },\n    background: {\n      paper: '#FFFFFF',\n      default: grey[100],\n      neutral: grey[200],\n    },\n    action: {\n      ...base.action,\n      active: grey[600],\n    },\n  };\n}\n","import { alpha } from '@mui/material/styles';\n\nimport { grey } from './palette';\n\n// ----------------------------------------------------------------------\n\nexport function shadows() {\n  const transparent1 = alpha(grey[500], 0.2);\n  const transparent2 = alpha(grey[500], 0.14);\n  const transparent3 = alpha(grey[500], 0.12);\n\n  return [\n    'none',\n    `0px 2px 1px -1px ${transparent1},0px 1px 1px 0px ${transparent2},0px 1px 3px 0px ${transparent3}`,\n    `0px 3px 1px -2px ${transparent1},0px 2px 2px 0px ${transparent2},0px 1px 5px 0px ${transparent3}`,\n    `0px 3px 3px -2px ${transparent1},0px 3px 4px 0px ${transparent2},0px 1px 8px 0px ${transparent3}`,\n    `0px 2px 4px -1px ${transparent1},0px 4px 5px 0px ${transparent2},0px 1px 10px 0px ${transparent3}`,\n    `0px 3px 5px -1px ${transparent1},0px 5px 8px 0px ${transparent2},0px 1px 14px 0px ${transparent3}`,\n    `0px 3px 5px -1px ${transparent1},0px 6px 10px 0px ${transparent2},0px 1px 18px 0px ${transparent3}`,\n    `0px 4px 5px -2px ${transparent1},0px 7px 10px 1px ${transparent2},0px 2px 16px 1px ${transparent3}`,\n    `0px 5px 5px -3px ${transparent1},0px 8px 10px 1px ${transparent2},0px 3px 14px 2px ${transparent3}`,\n    `0px 5px 6px -3px ${transparent1},0px 9px 12px 1px ${transparent2},0px 3px 16px 2px ${transparent3}`,\n    `0px 6px 6px -3px ${transparent1},0px 10px 14px 1px ${transparent2},0px 4px 18px 3px ${transparent3}`,\n    `0px 6px 7px -4px ${transparent1},0px 11px 15px 1px ${transparent2},0px 4px 20px 3px ${transparent3}`,\n    `0px 7px 8px -4px ${transparent1},0px 12px 17px 2px ${transparent2},0px 5px 22px 4px ${transparent3}`,\n    `0px 7px 8px -4px ${transparent1},0px 13px 19px 2px ${transparent2},0px 5px 24px 4px ${transparent3}`,\n    `0px 7px 9px -4px ${transparent1},0px 14px 21px 2px ${transparent2},0px 5px 26px 4px ${transparent3}`,\n    `0px 8px 9px -5px ${transparent1},0px 15px 22px 2px ${transparent2},0px 6px 28px 5px ${transparent3}`,\n    `0px 8px 10px -5px ${transparent1},0px 16px 24px 2px ${transparent2},0px 6px 30px 5px ${transparent3}`,\n    `0px 8px 11px -5px ${transparent1},0px 17px 26px 2px ${transparent2},0px 6px 32px 5px ${transparent3}`,\n    `0px 9px 11px -5px ${transparent1},0px 18px 28px 2px ${transparent2},0px 7px 34px 6px ${transparent3}`,\n    `0px 9px 12px -6px ${transparent1},0px 19px 29px 2px ${transparent2},0px 7px 36px 6px ${transparent3}`,\n    `0px 10px 13px -6px ${transparent1},0px 20px 31px 3px ${transparent2},0px 8px 38px 7px ${transparent3}`,\n    `0px 10px 13px -6px ${transparent1},0px 21px 33px 3px ${transparent2},0px 8px 40px 7px ${transparent3}`,\n    `0px 10px 14px -6px ${transparent1},0px 22px 35px 3px ${transparent2},0px 8px 42px 7px ${transparent3}`,\n    `0px 11px 14px -7px ${transparent1},0px 23px 36px 3px ${transparent2},0px 9px 44px 8px ${transparent3}`,\n    `0px 11px 15px -7px ${transparent1},0px 24px 38px 3px ${transparent2},0px 9px 46px 8px ${transparent3}`,\n  ];\n}\n","import { alpha } from '@mui/material/styles';\nimport { outlinedInputClasses } from '@mui/material/OutlinedInput';\n\n// ----------------------------------------------------------------------\n\nexport function overrides(theme) {\n  return {\n    MuiCssBaseline: {\n      styleOverrides: {\n        '*': {\n          boxSizing: 'border-box',\n        },\n        html: {\n          margin: 0,\n          padding: 0,\n          width: '100%',\n          height: '100%',\n          WebkitOverflowScrolling: 'touch',\n        },\n        body: {\n          margin: 0,\n          padding: 0,\n          width: '100%',\n          height: '100%',\n        },\n        '#root': {\n          width: '100%',\n          height: '100%',\n        },\n        input: {\n          '&[type=number]': {\n            MozAppearance: 'textfield',\n            '&::-webkit-outer-spin-button': {\n              margin: 0,\n              WebkitAppearance: 'none',\n            },\n            '&::-webkit-inner-spin-button': {\n              margin: 0,\n              WebkitAppearance: 'none',\n            },\n          },\n        },\n        img: {\n          maxWidth: '100%',\n          display: 'inline-block',\n          verticalAlign: 'bottom',\n        },\n      },\n    },\n    MuiBackdrop: {\n      styleOverrides: {\n        root: {\n          backgroundColor: alpha(theme.palette.grey[900], 0.8),\n        },\n        invisible: {\n          background: 'transparent',\n        },\n      },\n    },\n    MuiButton: {\n      styleOverrides: {\n        containedInherit: {\n          color: theme.palette.common.white,\n          backgroundColor: theme.palette.grey[800],\n          '&:hover': {\n            color: theme.palette.common.white,\n            backgroundColor: theme.palette.grey[800],\n          },\n        },\n        sizeLarge: {\n          minHeight: 48,\n        },\n      },\n    },\n    MuiCard: {\n      styleOverrides: {\n        root: {\n          boxShadow: theme.customShadows.card,\n          borderRadius: Number(theme.shape.borderRadius) * 2,\n          position: 'relative',\n          zIndex: 0, // Fix Safari overflow: hidden with border radius\n        },\n      },\n    },\n    MuiCardHeader: {\n      defaultProps: {\n        titleTypographyProps: { variant: 'h6' },\n        subheaderTypographyProps: { variant: 'body2' },\n      },\n      styleOverrides: {\n        root: {\n          padding: theme.spacing(3, 3, 0),\n        },\n      },\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        root: {\n          [`& .${outlinedInputClasses.notchedOutline}`]: {\n            borderColor: alpha(theme.palette.grey[500], 0.24),\n          },\n        },\n      },\n    },\n    MuiPaper: {\n      defaultProps: {\n        elevation: 0,\n      },\n    },\n    MuiTableCell: {\n      styleOverrides: {\n        head: {\n          color: theme.palette.text.secondary,\n          backgroundColor: theme.palette.background.neutral,\n        },\n      },\n    },\n    MuiTooltip: {\n      styleOverrides: {\n        tooltip: {\n          backgroundColor: theme.palette.grey[800],\n        },\n        arrow: {\n          color: theme.palette.grey[800],\n        },\n      },\n    },\n    MuiTypography: {\n      styleOverrides: {\n        paragraph: {\n          marginBottom: theme.spacing(2),\n        },\n        gutterBottom: {\n          marginBottom: theme.spacing(1),\n        },\n      },\n    },\n    MuiMenuItem: {\n      styleOverrides: {\n        root: {\n          ...theme.typography.body2,\n        },\n      },\n    },\n  };\n}\n","// ----------------------------------------------------------------------\n\nexport function remToPx(value) {\n  return Math.round(parseFloat(value) * 16);\n}\n\nexport function pxToRem(value) {\n  return `${value / 16}rem`;\n}\n\nexport function responsiveFontSizes({ sm, md, lg }) {\n  return {\n    '@media (min-width:600px)': {\n      fontSize: pxToRem(sm),\n    },\n    '@media (min-width:900px)': {\n      fontSize: pxToRem(md),\n    },\n    '@media (min-width:1200px)': {\n      fontSize: pxToRem(lg),\n    },\n  };\n}\n\nexport const primaryFont = 'Public Sans, sans-serif';\nexport const secondaryFont = 'Barlow, sans-serif';\n\n// ----------------------------------------------------------------------\n\nexport const typography = {\n  fontFamily: primaryFont,\n  fontSecondaryFamily: secondaryFont,\n  fontWeightRegular: 400,\n  fontWeightMedium: 500,\n  fontWeightSemiBold: 600,\n  fontWeightBold: 700,\n  h1: {\n    fontWeight: 800,\n    lineHeight: 80 / 64,\n    fontSize: pxToRem(40),\n    ...responsiveFontSizes({ sm: 52, md: 58, lg: 64 }),\n  },\n  h2: {\n    fontWeight: 800,\n    lineHeight: 64 / 48,\n    fontSize: pxToRem(32),\n    ...responsiveFontSizes({ sm: 40, md: 44, lg: 48 }),\n  },\n  h3: {\n    fontWeight: 700,\n    lineHeight: 1.5,\n    fontSize: pxToRem(24),\n    ...responsiveFontSizes({ sm: 26, md: 30, lg: 32 }),\n  },\n  h4: {\n    fontWeight: 700,\n    lineHeight: 1.5,\n    fontSize: pxToRem(20),\n    ...responsiveFontSizes({ sm: 20, md: 24, lg: 24 }),\n  },\n  h5: {\n    fontWeight: 700,\n    lineHeight: 1.5,\n    fontSize: pxToRem(18),\n    ...responsiveFontSizes({ sm: 19, md: 20, lg: 20 }),\n  },\n  h6: {\n    fontWeight: 700,\n    lineHeight: 28 / 18,\n    fontSize: pxToRem(17),\n    ...responsiveFontSizes({ sm: 18, md: 18, lg: 18 }),\n  },\n  subtitle1: {\n    fontWeight: 600,\n    lineHeight: 1.5,\n    fontSize: pxToRem(16),\n  },\n  subtitle2: {\n    fontWeight: 600,\n    lineHeight: 22 / 14,\n    fontSize: pxToRem(14),\n  },\n  body1: {\n    lineHeight: 1.5,\n    fontSize: pxToRem(16),\n  },\n  body2: {\n    lineHeight: 22 / 14,\n    fontSize: pxToRem(14),\n  },\n  caption: {\n    lineHeight: 1.5,\n    fontSize: pxToRem(12),\n  },\n  overline: {\n    fontWeight: 700,\n    lineHeight: 1.5,\n    fontSize: pxToRem(12),\n    textTransform: 'uppercase',\n  },\n  button: {\n    fontWeight: 700,\n    lineHeight: 24 / 14,\n    fontSize: pxToRem(14),\n    textTransform: 'unset',\n  },\n};\n","import { alpha } from '@mui/material/styles';\n\nimport { grey, info, error, common, primary, success, warning, secondary } from './palette';\n\n// ----------------------------------------------------------------------\n\nexport function customShadows() {\n  const transparent = alpha(grey[500], 0.16);\n\n  return {\n    z1: `0 1px 2px 0 ${transparent}`,\n    z4: `0 4px 8px 0 ${transparent}`,\n    z8: `0 8px 16px 0 ${transparent}`,\n    z12: `0 12px 24px -4px ${transparent}`,\n    z16: `0 16px 32px -4px ${transparent}`,\n    z20: `0 20px 40px -4px ${transparent}`,\n    z24: `0 24px 48px 0 ${transparent}`,\n    //\n    card: `0 0 2px 0 ${alpha(grey[500], 0.08)}, 0 12px 24px -4px ${alpha(grey[500], 0.08)}`,\n    dropdown: `0 0 2px 0 ${alpha(grey[500], 0.24)}, -20px 20px 40px -4px ${alpha(grey[500], 0.24)}`,\n    dialog: `-40px 40px 80px -8px ${alpha(common.black, 0.24)}`,\n    //\n    primary: `0 8px 16px 0 ${alpha(primary.main, 0.24)}`,\n    info: `0 8px 16px 0 ${alpha(info.main, 0.24)}`,\n    secondary: `0 8px 16px 0 ${alpha(secondary.main, 0.24)}`,\n    success: `0 8px 16px 0 ${alpha(success.main, 0.24)}`,\n    warning: `0 8px 16px 0 ${alpha(warning.main, 0.24)}`,\n    error: `0 8px 16px 0 ${alpha(error.main, 0.24)}`,\n  };\n}\n","import { useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { createTheme, ThemeProvider as MUIThemeProvider } from '@mui/material/styles';\n\nimport { palette } from './palette';\nimport { shadows } from './shadows';\nimport { overrides } from './overrides';\nimport { typography } from './typography';\nimport { customShadows } from './custom-shadows';\n\n// ----------------------------------------------------------------------\n\nexport default function ThemeProvider({ children }) {\n  const memoizedValue = useMemo(\n    () => ({\n      palette: palette(),\n      typography,\n      shadows: shadows(),\n      customShadows: customShadows(),\n      shape: { borderRadius: 8 },\n    }),\n    []\n  );\n\n  const theme = createTheme(memoizedValue);\n\n  theme.components = overrides(theme);\n\n  return (\n    <MUIThemeProvider theme={theme}>\n      <CssBaseline />\n      {children}\n    </MUIThemeProvider>\n  );\n}\n\nThemeProvider.propTypes = {\n  children: PropTypes.node,\n};\n","import 'src/global.css';\n\nimport Router from 'src/routes/sections';\n\nimport { useScrollToTop } from 'src/hooks/use-scroll-to-top';\n\nimport ThemeProvider from 'src/theme';\n\nimport { SCProvider } from './sccontext';\n\n// ----------------------------------------------------------------------\n\nexport default function App() {\n  useScrollToTop();\n\n  return (\n    <SCProvider>\n      <ThemeProvider>\n        <Router />\n      </ThemeProvider>\n    </SCProvider>\n  );\n}\n","import './i18n';\n\nimport { Suspense } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport { HelmetProvider } from 'react-helmet-async';\n\nimport App from './app';\n\n// ----------------------------------------------------------------------\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <HelmetProvider>\n    <BrowserRouter>\n      <Suspense>\n        <App />\n      </Suspense>\n    </BrowserRouter>\n  </HelmetProvider>\n);\n","import numeral from 'numeral';\n\n// ----------------------------------------------------------------------\n\nexport function fNumber(number) {\n  return numeral(number).format();\n}\n\nexport function fCurrency(number) {\n  const format = typeof number !== 'undefined' ? numeral(number).format('$0,0.00') : '';\n\n  return result(format, '.00');\n}\n\nexport function fPercent(number) {\n  const format = typeof number !== 'undefined' ? numeral(Number(number) / 100).format('0.0%') : '';\n\n  return result(format, '.0');\n}\n\nexport function fShortenNumber(number) {\n  const format = typeof number !== 'undefined' ? numeral(number).format('0.00a') : '';\n\n  return result(format, '.00');\n}\n\nexport function fData(number) {\n  const format = typeof number !== 'undefined' ? numeral(number).format('0.0 b') : '';\n\n  return result(format, '.0');\n}\n\n/*\n  Used to display consumption (stored as mw/m) in charts)\n  The value is converted to kw/h\n  @param {number} The value that must be formatted as kw/h\n  @return {string} The formatted value\n  */\nexport function fKWh(number) {\n  const format =\n    typeof number !== 'undefined' ? `${((number / 1000 / 1000) * 60).toFixed(2)} kw/h` : '';\n\n  return result(format, '');\n}\n\n/*\n  Used to display consumption (stored as mw/m) in charts)\n  The value is converted to w/h\n  @param {number} The value that must be formatted as w/h\n  @return {string} The formatted value\n*/\nexport function fWh(number) {\n  const format = typeof number !== 'undefined' ? `${((number / 1000) * 60).toFixed(2)} w/h` : '';\n\n  return result(format, '');\n}\n\nfunction result(format, key) {\n  const isInteger = format.includes(key);\n\n  return isInteger ? format.replace(key, '') : format;\n}\n","/*\r\n  Author: André Kreienbring\r\n  Shows the title of 'AppView', 'ShellyView', 'UserView' and 'BlogView'. \r\n*/\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n/*\r\n  @param {string} title The title that is shown on top of the page.\r\n*/\r\nconst ViewTitle = ({ title }) => (\r\n  <Stack\r\n    direction=\"row\"\r\n    sx={{\r\n      justifyContent: 'space-between',\r\n      alignItems: 'baseline',\r\n    }}\r\n  >\r\n    <Typography variant=\"h4\">{title}</Typography>\r\n  </Stack>\r\n);\r\n\r\nexport default ViewTitle;\r\n\r\nViewTitle.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","import { memo } from 'react';\nimport ApexChart from 'react-apexcharts';\n\nimport { alpha, styled, useTheme } from '@mui/material/styles';\n\nimport { bgBlur } from 'src/theme/css'\n\n/*\n  These colors are used for the consumption charts.\n  The device color is dependent on the device index in the device array\n*/\nexport const useChartColors = () => {\n  const theme = useTheme();\n  return [\n    theme.palette.success.dark,\n    theme.palette.info.dark,\n    theme.palette.error.dark,\n    theme.palette.warning.dark,\n    theme.palette.primary.dark,\n    theme.palette.success.main,\n    theme.palette.info.main,\n    theme.palette.error.main,\n    theme.palette.primary.main,\n    theme.palette.warning.main,\n    theme.palette.success.light,\n    theme.palette.info.light,\n    theme.palette.error.light,\n    theme.palette.warning.light,\n    theme.palette.primary.light,\n  ];\n};\n\nconst Chart = styled(ApexChart)(({ theme }) => ({\n  '& .apexcharts-canvas': {\n    // Tooltip\n    '& .apexcharts-tooltip': {\n      ...bgBlur({\n        color: theme.palette.background.default,\n      }),\n      color: theme.palette.text.primary,\n      boxShadow: theme.customShadows.dropdown,\n      borderRadius: theme.shape.borderRadius * 1.25,\n      '&.apexcharts-theme-light': {\n        borderColor: 'transparent',\n        ...bgBlur({\n          color: theme.palette.background.default,\n        }),\n      },\n    },\n    '& .apexcharts-xaxistooltip': {\n      ...bgBlur({\n        color: theme.palette.background.default,\n      }),\n      borderColor: 'transparent',\n      color: theme.palette.text.primary,\n      boxShadow: theme.customShadows.dropdown,\n      borderRadius: theme.shape.borderRadius * 1.25,\n      '&:before': {\n        borderBottomColor: alpha(theme.palette.grey[500], 0.24),\n      },\n      '&:after': {\n        borderBottomColor: alpha(theme.palette.background.default, 0.8),\n      },\n    },\n    '& .apexcharts-tooltip-title': {\n      textAlign: 'center',\n      fontWeight: theme.typography.fontWeightBold,\n      backgroundColor: alpha(theme.palette.grey[500], 0.08),\n      color: theme.palette.text[theme.palette.mode === 'light' ? 'secondary' : 'primary'],\n    },\n\n    // LEGEND\n    '& .apexcharts-legend': {\n      padding: 0,\n    },\n    '& .apexcharts-legend-series': {\n      display: 'inline-flex !important',\n      alignItems: 'center',\n    },\n    '& .apexcharts-legend-marker': {\n      marginRight: 8,\n    },\n    '& .apexcharts-legend-text': {\n      lineHeight: '18px',\n      textTransform: 'capitalize',\n    },\n  },\n}));\n\nexport default memo(Chart);\n","/*\n  Author: André Kreienbring\n  A small card that displays values on the Dashboard\n*/\nimport PropTypes from 'prop-types';\n\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n\n// ----------------------------------------------------------------------\n\nexport default function AppWidgetSummary({\n  title,\n  subtitle,\n  icon,\n  color = 'primary',\n  sx,\n  ...other\n}) {\n  return (\n    <Card\n      component={Stack}\n      spacing={3}\n      direction=\"row\"\n      sx={{\n        px: 3,\n        py: 5,\n        borderRadius: 2,\n        ...sx,\n      }}\n      {...other}\n    >\n      {icon && <Box sx={{ width: 64, height: 64 }}>{icon}</Box>}\n\n      <Stack spacing={0.5}>\n        <Typography variant=\"h5\">{title}</Typography>\n\n        <Typography variant=\"subtitle2\" sx={{ color: 'text.disabled' }}>\n          {subtitle}\n        </Typography>\n      </Stack>\n    </Card>\n  );\n}\n\nAppWidgetSummary.propTypes = {\n  color: PropTypes.string,\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  sx: PropTypes.object,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n};\n","/*\r\n    Author: André Kreienbring\r\n*/\r\n\r\n/*\r\n  Calculates the consumption from all the switches of a notification message.\r\n  The websocket msg 'Notify(Full)Status' may contain up to four switches or an 'rgbw' switch.\r\n  The given 'params' part of a 'Notify(Full)Status' is queried for this data.\r\n  @param {string} deviceName The custom name of the device that will be shown as switch name\r\n  @param {object} params The params part of a 'Notify(Full)Status' websocket message\r\n  @return {object} The current status / consumption of all switches as mw/m. Where:\r\n      - hasSwitch {boolean} True, if the device has at least one switch\r\n      - totalPower {number} The total consumption of the device\r\n      - powerPerDevice {array} The consumption per switch. (for usage in a chart)\r\n      - colorPerDevice {array} The color for usage in a chart\r\n*/\r\nexport function getDeviceConsumption(deviceName, params) {\r\n  let currentSwitch;\r\n  let totalPower = 0;\r\n  let hasSwitch = false;\r\n  const powerPerDevice = [];\r\n\r\n  // check for up to four switches\r\n  for (let i = 0; i <= 3; i += 1) {\r\n    // NotifyStatus constains either aenergy OR apower\r\n    currentSwitch = params[`switch:${i}`];\r\n\r\n    if (typeof currentSwitch?.aenergy?.by_minute !== 'undefined') {\r\n      // aenergy returns the power in mw/m\r\n      hasSwitch = true;\r\n      const devicePower = Number(currentSwitch.aenergy.by_minute[0]);\r\n      if (devicePower > 0) {\r\n        totalPower += devicePower;\r\n        powerPerDevice.push({\r\n          label: `${deviceName} switch:${i}`,\r\n          value: devicePower,\r\n        });\r\n      }\r\n    }\r\n  } // switches 0-3\r\n\r\n  // check for rgbw:0 switch\r\n  currentSwitch = params['rgbw:0'];\r\n\r\n  if (typeof currentSwitch?.aenergy?.by_minute !== 'undefined') {\r\n    hasSwitch = true;\r\n    const devicePower = Number(currentSwitch.aenergy.by_minute[0]);\r\n    if (devicePower > 0) {\r\n      totalPower += devicePower;\r\n      powerPerDevice.push({ label: `${deviceName} rgbw:0`, value: devicePower });\r\n    }\r\n  }\r\n\r\n  return { hasSwitch, totalPower, powerPerDevice };\r\n}\r\n","/*\r\n  Author: André Kreienbring\r\n  Check the existance of energy values in the 'NotifyFullStatus' of every device. \r\n  The values are returned from the 'aenergy.by_minute[0]'\r\n  The 'apower' value of the device could be an alternative.\r\n  A device can have up to 4 switches!\r\n\r\n  The total number of script and running scripts is also calculated.\r\n  The total number of devices connected to the cloud is also calculated.\r\n  'powerPerDevice' is an (series) array that will be passed to the consumption chart.\r\n*/\r\nimport { getDeviceConsumption } from 'src/utils/device-consumption';\r\n\r\n/**\r\nCalculates several values for the Dashboard\r\n@param {array} devices An array with devices\r\n@return {object} An object with the calculated values.\r\n*/\r\nexport default function calculateOverview(devices) {\r\n  let scriptsCount = 0;\r\n  let scriptsRunning = 0;\r\n  let onlineCount = 0;\r\n  let cloudCount = 0;\r\n  let currentPower = 0;\r\n  let powerPerDevice = [];\r\n  const colorPerDevice = [];\r\n\r\n  let deviceConsumption = { hasSwitch: false, totalPower: 0, powerPerDevice: [] };\r\n\r\n  Object.values(devices).forEach((device, index) => {\r\n    const params = device?.wsmessages?.NotifyFullStatus?.params;\r\n    if (device.online) onlineCount += 1;\r\n\r\n    if (typeof params !== 'undefined') {\r\n      /*\r\n      calculate consumption from all switches of a device and add the information to\r\n      the global powerPerDevice array that will be used for the consumption chart.\r\n      */\r\n      deviceConsumption = getDeviceConsumption(device.cname, params);\r\n      if (deviceConsumption.totalPower > 0) colorPerDevice.push(device.chartColor);\r\n\r\n      powerPerDevice = powerPerDevice.concat(deviceConsumption.powerPerDevice);\r\n\r\n      currentPower += deviceConsumption.totalPower;\r\n\r\n      // check cloud connection\r\n      if (typeof params?.cloud?.connected !== 'undefined') {\r\n        if (params.cloud.connected) cloudCount += 1;\r\n      }\r\n\r\n      /*\r\n      check the status of the scripts of the device.\r\n      Get the id from the device script and use the value\r\n      of the last NotifyFullStatus Event\r\n    */\r\n      if (typeof device.scripts !== 'undefined') {\r\n        let currentScript;\r\n        Object.values(device.scripts).forEach((script) => {\r\n          currentScript = params[`script:${script.id}`];\r\n\r\n          if (currentScript !== 'undefined') {\r\n            scriptsCount += 1;\r\n            if (currentScript.running) scriptsRunning += 1;\r\n            // set the value on the device\r\n            script.running = currentScript.running;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  return {\r\n    currentPower,\r\n    powerPerDevice,\r\n    colorPerDevice,\r\n    scriptsRunning,\r\n    scriptsCount,\r\n    cloudCount,\r\n    onlineCount,\r\n  };\r\n}\r\n","import merge from 'lodash/merge';\n\nimport { alpha, useTheme } from '@mui/material/styles';\n\nimport { useResponsive } from 'src/hooks/use-responsive';\n\n// ----------------------------------------------------------------------\n\nexport default function useChart(options) {\n  const theme = useTheme();\n\n  const smUp = useResponsive('up', 'sm');\n\n  const LABEL_TOTAL = {\n    show: true,\n    label: 'Total',\n    color: theme.palette.text.secondary,\n    fontSize: theme.typography.subtitle2.fontSize,\n    fontWeight: theme.typography.subtitle2.fontWeight,\n    lineHeight: theme.typography.subtitle2.lineHeight,\n  };\n\n  const LABEL_VALUE = {\n    offsetY: 8,\n    color: theme.palette.text.primary,\n    fontSize: theme.typography.h3.fontSize,\n    fontWeight: theme.typography.h3.fontWeight,\n    lineHeight: theme.typography.h3.lineHeight,\n  };\n\n  const baseOptions = {\n    // Chart\n    chart: {\n      toolbar: { show: false },\n      zoom: {\n        enabled: false,\n        type: 'xy',\n      },\n\n      animations: { enabled: true },\n      foreColor: theme.palette.text.disabled,\n      fontFamily: theme.typography.fontFamily,\n    },\n\n    // States\n    states: {\n      hover: {\n        filter: {\n          type: 'lighten',\n          value: 0.04,\n        },\n      },\n      active: {\n        filter: {\n          type: 'darken',\n          value: 0.88,\n        },\n      },\n    },\n\n    // Fill\n    fill: {\n      opacity: 1,\n      gradient: {\n        type: 'vertical',\n        shadeIntensity: 0,\n        opacityFrom: 0.4,\n        opacityTo: 0,\n        stops: [0, 100],\n      },\n    },\n\n    // Datalabels\n    dataLabels: {\n      enabled: false,\n    },\n\n    // Stroke\n    stroke: {\n      width: 3,\n      curve: 'smooth',\n      lineCap: 'round',\n    },\n\n    // Grid\n    grid: {\n      strokeDashArray: 3,\n      borderColor: theme.palette.divider,\n      xaxis: {\n        lines: {\n          show: false,\n        },\n      },\n    },\n\n    xaxis: {\n      tickPlacement: 'on',\n      axisBorder: { show: false },\n      axisTicks: { show: false },\n    },\n\n    // Markers\n    markers: {\n      size: 0,\n      strokeColors: theme.palette.background.paper,\n    },\n\n    // Tooltip\n    tooltip: {\n      theme: false,\n      x: {\n        show: true,\n      },\n    },\n\n    // Legend\n    legend: {\n      show: true,\n      showForSingleSeries: true,\n      fontSize: 13,\n      position: 'bottom',\n      horizontalAlign: 'center',\n      markers: {\n        radius: 12,\n      },\n      fontWeight: 500,\n      itemMargin: {\n        horizontal: 8,\n      },\n      labels: {\n        colors: theme.palette.text.primary,\n      },\n    },\n\n    // plotOptions\n    plotOptions: {\n      // Bar\n      bar: {\n        borderRadius: 0,\n        // borderRadius: smUp ? 3 : 1,\n        // borderRadiusApplication: 'end', // 'around', 'end'\n        // borderRadiusWhenStacked: 'last', // 'all', 'last'\n      },\n\n      // Pie + Donut\n      pie: {\n        donut: {\n          labels: {\n            show: true,\n            value: LABEL_VALUE,\n            total: LABEL_TOTAL,\n          },\n        },\n      },\n\n      // Radialbar\n      radialBar: {\n        track: {\n          strokeWidth: '100%',\n          background: alpha(theme.palette.grey[500], 0.16),\n        },\n        dataLabels: {\n          value: LABEL_VALUE,\n          total: LABEL_TOTAL,\n        },\n      },\n\n      // Radar\n      radar: {\n        polygons: {\n          fill: { colors: ['transparent'] },\n          strokeColors: theme.palette.divider,\n          connectorColors: theme.palette.divider,\n        },\n      },\n\n      // polarArea\n      polarArea: {\n        rings: {\n          strokeColor: theme.palette.divider,\n        },\n        spokes: {\n          connectorColors: theme.palette.divider,\n        },\n      },\n    },\n\n    // Responsive\n    responsive: [\n      {\n        // sm\n        breakpoint: theme.breakpoints.values.sm,\n        options: {\n          plotOptions: { bar: { columnWidth: '40%' } },\n        },\n      },\n      {\n        // md\n        breakpoint: theme.breakpoints.values.md,\n        options: {\n          plotOptions: { bar: { columnWidth: '32%' } },\n        },\n      },\n    ],\n  };\n\n  return merge(baseOptions, options);\n}\n","/*\r\n  Author: André Kreienbring\r\n*/\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport CardHeader from '@mui/material/CardHeader';\r\n\r\nimport { fWh } from 'src/utils/format-number';\r\n\r\nimport Chart from 'src/components/chart';\r\n\r\n/**\r\n * Component that displays the current consumption circle chart.\r\n * @param {string} title The title that is displayed on top of the chart\r\n * @param {string} subheader The subheader, shown beneath the title\r\n * @param {array} colors contains a color for every device\r\n * @param {array} series the consumption data used in the chart\r\n */\r\nexport default function CurrentConsumption({ title, subheader, colors, series, ...other }) {\r\n  const theme = useTheme();\r\n\r\n  const labels = [];\r\n  const values = [];\r\n  series.forEach((n) => {\r\n    labels.push(n.label);\r\n    values.push(n.value);\r\n  });\r\n\r\n  const options = {\r\n    labels,\r\n    stroke: {\r\n      colors: [theme.palette.background.paper],\r\n    },\r\n    legend: {\r\n      show: true,\r\n      position: 'bottom',\r\n    },\r\n    colors,\r\n    dataLabels: {\r\n      enabled: true,\r\n      dropShadow: {\r\n        enabled: false,\r\n      },\r\n    },\r\n    tooltip: {\r\n      fillSeriesColor: false,\r\n      shared: true,\r\n      intersect: false,\r\n      y: {\r\n        formatter: (value) => {\r\n          if (typeof value !== 'undefined') {\r\n            return fWh(value);\r\n          }\r\n          return value;\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Card {...other}>\r\n      <CardHeader title={title} subheader={subheader} sx={{ mb: 5 }} />\r\n\r\n      <Chart dir=\"ltr\" type=\"pie\" series={values} options={options} width=\"100%\" height={280} />\r\n    </Card>\r\n  );\r\n}\r\nCurrentConsumption.propTypes = {\r\n  chart: PropTypes.object,\r\n  subheader: PropTypes.string,\r\n  title: PropTypes.string,\r\n  colors: PropTypes.array,\r\n  series: PropTypes.array,\r\n};\r\n","/*\n  Author: André Kreienbring\n  Builds the Timeline Chart in the AppView / Dashboard Component\n*/\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport CardHeader from '@mui/material/CardHeader';\nimport FormControl from '@mui/material/FormControl';\n\nimport { fWh, fKWh } from 'src/utils/format-number';\n\nimport Chart, { useChart } from 'src/components/chart';\n\n/**\n  This component presents the Timeline charts of the periods\n  minute, hour, day, month and year.\n  @param {string} title The title of the chart\n  @param {string} subheader The text shown underneath the title\n  @param {object} chart Holds additional data to be used in the chart\n  @param {function} handleTimelineChange Called when the type of the chart is changed\n  @param {number} selection The currently selected type of the chart\n*/\nexport default function TimelineConsumption({\n  title,\n  subheader,\n  chart,\n  handleTimelineChange,\n  selection,\n  ...other\n}) {\n  // eslint-disable-next-line no-unused-vars\n  const { labels, colors, series, timeline, maxConsumption } = chart;\n  const { t } = useTranslation();\n\n  const chartOptions = useChart({\n    colors,\n    plotOptions: {\n      bar: {\n        columnWidth: '28%',\n      },\n    },\n    chart: {\n      stacked: timeline.data !== 'Minute',\n    },\n    yaxis: {\n      labels: {\n        formatter(value) {\n          if (timeline.data === 'Minute') {\n            if ((maxConsumption / 1000) * 60 < 1000) return fWh(value);\n            return fKWh(value);\n          }\n          if (maxConsumption / 1000 < 1000) return `${(value / 1000).toFixed(2)} w/h`;\n          return `${(value / 1000 / 1000).toFixed(2)} kw/h`;\n        },\n      },\n      forceNiceScale: true,\n    },\n    xaxis: {\n      type: 'datetime',\n      labels: {\n        format: timeline.format,\n        datetimeUTC: false,\n      },\n      // categories: labels,\n    },\n    tooltip: {\n      shared: true,\n      intersect: false,\n      x: {\n        show: true,\n        format: timeline.format || 'undefined',\n      },\n      y: {\n        formatter(value) {\n          if (timeline.data === 'Minute') {\n            if ((maxConsumption / 1000) * 60 < 9000) return fWh(value);\n            return fKWh(value);\n          }\n          if (maxConsumption / 1000 < 9000) return `${(value / 1000).toFixed(2)} w/h`;\n          return `${(value / 1000 / 1000).toFixed(2)} kw/h`;\n        },\n      },\n    },\n  });\n\n  return (\n    <Card {...other}>\n      <CardHeader\n        title={title}\n        subheader={subheader}\n        action={\n          <FormControl sx={{ m: 1, minWidth: 120 }} size=\"small\">\n            <Select value={selection} onChange={handleTimelineChange}>\n              <MenuItem value=\"0\">{t('_byminute_')}</MenuItem>\n              <MenuItem value=\"1\">{t('_byhour_')}</MenuItem>\n              <MenuItem value=\"2\">{t('_byday_')}</MenuItem>\n              <MenuItem value=\"3\">{t('_bymonth_')}</MenuItem>\n              <MenuItem value=\"4\">{t('_byyear_')}</MenuItem>\n            </Select>\n          </FormControl>\n        }\n      />\n\n      <Box sx={{ p: 3, pb: 1 }}>\n        <Chart\n          dir=\"ltr\"\n          type={series[0].type}\n          series={series}\n          options={chartOptions}\n          width=\"100%\"\n          height={364}\n        />\n      </Box>\n    </Card>\n  );\n}\n\nTimelineConsumption.propTypes = {\n  chart: PropTypes.object,\n  subheader: PropTypes.string,\n  title: PropTypes.string,\n  handleTimelineChange: PropTypes.func,\n  selection: PropTypes.number,\n};\n","/*\r\n  Author: André Kreienbring\r\n  Helpers for building the Timeline Chart in the AppView Component\r\n*/\r\nimport { fUnixTime } from 'src/utils/format-time';\r\n\r\n/**\r\n    Based on the selected chart type (minute, hour, day, month, year)\r\n    formats are defined. These will be used for the labels / categories display\r\n    within the chart.\r\n    @param {number} selectedChart A number that represents the type of the chart\r\n*/\r\nexport function getTimelineOptions(selectedChart) {\r\n  const timeline = {};\r\n\r\n  switch (selectedChart) {\r\n    case 1:\r\n      timeline.data = 'Hour';\r\n      timeline.format = 'HH:00';\r\n      timeline.catformat = 'yyyy-MM-dd HH:00';\r\n      break;\r\n    case 2:\r\n      timeline.data = 'Day';\r\n      timeline.format = 'd.MM';\r\n      timeline.catformat = 'yyyy-MM-dd';\r\n      break;\r\n    case 3:\r\n      timeline.data = 'Month';\r\n      timeline.format = 'MMM.yyyy';\r\n      timeline.catformat = 'yyyy-MM';\r\n      break;\r\n    case 4:\r\n      timeline.data = 'Year';\r\n      timeline.format = 'yyyy';\r\n      timeline.catformat = 'yyyy';\r\n      break;\r\n    default:\r\n      timeline.data = 'Minute';\r\n      timeline.format = 'H:mm';\r\n      timeline.catformat = 'yyyy-MM-dd HH:mm';\r\n  }\r\n  return timeline;\r\n}\r\n\r\n/**\r\n  Builds the Timeline chart out of the received websocket consumption\r\n  data.\r\n  ATTENTION: 'currently stacked charts can NOT be used, because the scaling of the yaxis doesn't work!!!\r\n  @param {array} devices The array with the devices. Needed to identify the chart color.\r\n  @param {array} rows The array with the consumption values\r\n  @param {object} timeline Contains options based on the selected chart (minute, hour, day, month, year)\r\n  @return {object} An object that contains series, labels, colors and the maximun consumption value for the timeline chart.\r\n*/\r\nexport function buildTimeline(devices, rows, timeline) {\r\n  const chartLabels = [];\r\n  const chartSeries = [];\r\n  const chartDevices = [];\r\n  const chartColors = [];\r\n  let maxConsumption = 0;\r\n  // console.log(`Got Rows: ${JSON.stringify(rows)}`);\r\n  rows.forEach((entry, index) => {\r\n    if (entry.consumption > maxConsumption) maxConsumption = entry.consumption;\r\n\r\n    const category = fUnixTime(entry.ts, timeline.catformat);\r\n    if (!chartLabels.includes(category)) chartLabels.push(category);\r\n\r\n    // Create a series for every device\r\n    const nIndex = chartDevices.indexOf(entry.device_id);\r\n    if (nIndex === -1) {\r\n      const dIndex = devices.findIndex((device) => device.id === entry.device_id);\r\n      if (dIndex !== -1) {\r\n        chartDevices.push(entry.device_id);\r\n        // add the color that corresponds with the device to the color array\r\n        chartColors.push(devices[dIndex].chartColor);\r\n\r\n        chartSeries.push({\r\n          name: devices[dIndex].cname,\r\n          type: timeline.data === 'Minute' ? 'line' : 'bar',\r\n          data: [{ x: category, y: entry.consumption }],\r\n        });\r\n      } else {\r\n        console.error(`Could not finde device with id ${entry.device_id}`);\r\n      }\r\n    } else {\r\n      chartSeries[nIndex].data.push({ x: category, y: entry.consumption });\r\n    }\r\n  });\r\n\r\n  // console.log(`Got Series: ${JSON.stringify(chartSeries)}`);\r\n  // console.log(`Got labels: ${JSON.stringify(chartLabels)}`);\r\n\r\n  return {\r\n    labels: chartLabels,\r\n    series: chartSeries,\r\n    colors: chartColors,\r\n    maxConsumption,\r\n  };\r\n}\r\n","/*\n  Author: André Kreienbring\n  AppView is the 'Overview/Dashboard' component of the Application.\n  It shows several values, calculated from current websocket notifications \n  of the shelly devices.\n  It implements a Websocket client that receives either an array of devices or a single device (update)\n*/\n/*\n  icon sources:\n  https://icon-sets.iconify.design/devicon/fastapi/\n  https://icon-sets.iconify.design/devicon/swagger/\n  https://icon-sets.iconify.design/mdi/cloud-circle/\n*/\nimport { useTranslation } from 'react-i18next';\nimport { useRef, useState, useEffect, useCallback } from 'react';\n\nimport Grid from '@mui/material/Grid';\nimport Stack from '@mui/material/Stack';\nimport Container from '@mui/material/Container';\n\nimport { fWh, fShortenNumber } from 'src/utils/format-number';\nimport { createUUID, mapNumberToMax } from 'src/utils/general';\n\nimport { useShelly } from 'src/sccontext';\n\nimport ViewTitle from 'src/components/shellies/view-title';\nimport { useChartColors } from 'src/components/chart/chart';\n\nimport AppWidgetSummary from '../app-widget-summary';\nimport calculateOverview from './calculate-overview';\n// eslint-disable-next-line no-unused-vars, unused-imports/no-unused-imports\nimport CurrentConsumption from '../current-consumption';\nimport TimelineConsumption from '../timline-consumption';\nimport { buildTimeline, getTimelineOptions } from './build-timeline';\n// ----------------------------------------------------------------------\n\nexport default function AppView() {\n  const [totalPower, setTotalPower] = useState(0);\n  const [scripts, setScripts] = useState({ running: 0, count: 0 });\n  const [cloudCount, setCloudCount] = useState(0);\n  const [powerPerDevice, setPowerPerDevice] = useState([]);\n  const [colorPerDevice, setColorPerDevice] = useState([]);\n  const [onlineCount, setOnlineCount] = useState({ online: 0, count: 0 });\n  const [timelineByDevice, setTimelineByDevice] = useState({\n    labels: [],\n    colors: [],\n    series: [],\n    timeline: {},\n    maxConsumption: 0,\n  });\n  const [devices, setDevices] = useState([]);\n  const { t } = useTranslation();\n  const [selection, setSelection] = useState(0);\n  const timeline = useRef({ data: 'Minute', format: 'HH:mm', catformat: 'yyyy-MM-dd HH:mm' });\n  const { user, request, subscribe, unsubscribe } = useShelly();\n  const chartColors = useChartColors();\n  const subscriptionID = useRef(createUUID());\n\n  /**\n    Called when requested timeline data arrives.\n    Build the apex charts and rerenders the timeline\n    @param {object} msg The message with timeline data.\n  */\n  const handleTimelineUpdate = useCallback(\n    (msg) => {\n      let wsDevices;\n      if (devices.length !== 0) {\n        wsDevices = devices;\n      } else if (typeof msg.data.devices !== 'undefined') {\n        // when mounted the devices array is empty\n        wsDevices = msg.data.devices;\n      } else {\n        return;\n      }\n\n      /*\n        Construct the timeline chart\n      */\n      const { rows } = msg.data;\n      const chart = buildTimeline(wsDevices, rows, timeline.current);\n\n      if (wsDevices.length > 0)\n        setTimelineByDevice({\n          labels: chart.labels,\n          colors: chart.colors,\n          series: chart.series,\n          timeline: timeline.current,\n          maxConsumption: chart.maxConsumption,\n        });\n    },\n    [devices]\n  );\n\n  /**\n    Called after an update from the websocket server for one device.\n    Calculates various values for the dashboard\n    @param {array} wsDevices The (updated) devices received from the websocket server.\n  */\n  const handleDevicesUpdate = useCallback(\n    (wsDevices) => {\n      // calculate the values for all devices\n      const overviewValues = calculateOverview(wsDevices);\n\n      const { currentPower } = overviewValues;\n      setScripts({ running: overviewValues.scriptsRunning, count: overviewValues.scriptsCount });\n      setCloudCount(overviewValues.cloudCount);\n      setPowerPerDevice(overviewValues.powerPerDevice);\n      setColorPerDevice(overviewValues.colorPerDevice);\n      setTotalPower(currentPower);\n      setOnlineCount({ online: overviewValues.onlineCount, count: wsDevices.length });\n      setDevices(wsDevices);\n\n      /*\n        When a device websocket message was updated the current \n        timeline is also requested.\n      */\n      request(\n        {\n          event: `getTimeline${timeline.current.data}`,\n          data: {\n            source: 'App View',\n            message: 'App View needs timeline for a device',\n          },\n        },\n        handleTimelineUpdate\n      );\n    },\n    [request, handleTimelineUpdate]\n  );\n\n  /**\n  Called when the wsmessages of a device were updated.\n  Creates a new array with the replaces received device\n  and calls the handler that calculates the changes for the Dashboard\n  The message with event of:\n    - 'ShellyUpdate' contains an updated single device\n    - 'timeline' contains requested timeline data\n    @param {object} msg The message that contains a single device or the timeline data\n  */\n  const handleDeviceUpdate = useCallback(\n    (msg) => {\n      const wsDevice = msg.data.device;\n      if (msg.event === 'ShellyUpdate' && msg.type === 'ws') {\n        // this view only cares about Shelly websocket messages like 'NotifyStatus' and 'NotifyFullStatus'\n        // update the device object in the array and trigger a render\n        const wsDevices = devices.map((device, index) => {\n          if (device.id === wsDevice.id) {\n            // add a chart color to the device that depends on its index in the array\n            wsDevice.chartColor = chartColors[mapNumberToMax(index + 1, chartColors.length)];\n            return wsDevice;\n          }\n          return device;\n        });\n\n        handleDevicesUpdate(wsDevices);\n      }\n    },\n    [handleDevicesUpdate, devices, chartColors]\n  );\n\n  /**\n    Gets called from the timeline chart, when the dropdown selection changes.\n    Sends a request to the websocket server to send the selected timeline.\n    Based on the selected timeline some format options are set.\n    @param e The event with the selected value\n  */\n  const handleTimelineChange = (e) => {\n    const selectedChart = Number(e.target.value);\n    setSelection(selectedChart);\n    timeline.current = getTimelineOptions(selectedChart);\n    request(\n      {\n        event: `getTimeline${timeline.current.data}`,\n        data: {\n          source: 'App View',\n          message: 'App View needs timeline for a device',\n        },\n      },\n      handleTimelineUpdate\n    );\n  };\n\n  /**\n    Called when the AppView is mounted and the list of devices \n    and timeline data is received from the server.\n    @param {object} msg The message that contains an array of devices\n  */\n  const handleDevicesReceived = useCallback(\n    (msg) => {\n      const wsDevices = msg.data.devices.map((wsDevice, index) => {\n        // add a chart color to the device that depends on its index in the array\n        wsDevice.chartColor = chartColors[mapNumberToMax(index + 1, chartColors.length)];\n        return wsDevice;\n      });\n\n      handleTimelineUpdate(msg);\n      handleDevicesUpdate(wsDevices);\n    },\n    [chartColors, handleDevicesUpdate, handleTimelineUpdate]\n  );\n\n  // --------------------- Websocket Implementation BEGIN----------------\n  /*\n    After creation of the page all devices are requested from the websocket server.\n    Further ws messages from the Shelly devices are also handled.\n    The useEffect is only triggered once and lives as long the page is mounted.\n  */\n  useEffect(() => {\n    const currentSubscriptionID = subscriptionID.current;\n\n    if (devices.length === 0) {\n      request(\n        {\n          event: 'devices timeline get',\n          data: {\n            source: 'App View',\n            message: 'App View needs the list of devices and the timeline',\n          },\n        },\n        handleDevicesReceived\n      );\n    }\n\n    subscribe(\n      {\n        subscriptionID: currentSubscriptionID,\n        callback: handleDeviceUpdate,\n        all: true,\n      },\n      ['ShellyUpdate']\n    );\n\n    /*\n      Clean up the websocket subscription when unmounting the component.\n    */\n    return () => {\n      unsubscribe(currentSubscriptionID, ['ShellyUpdate']);\n    };\n  }, [devices.length, handleDevicesReceived, handleDeviceUpdate, unsubscribe, subscribe, request]);\n  // --------------------- Websocket Implementation END------------------\n\n  if (devices.length === 0) return null;\n  return (\n    <Container maxWidth=\"xl\">\n      <Stack direction=\"row\">\n        <ViewTitle\n          title={`${t('_welcome_')} ${user.firstname !== null ? user.firstname : user.alias}`}\n        />\n      </Stack>\n      <Grid container spacing={3}>\n        <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n          <AppWidgetSummary\n            title={`${onlineCount.online}/${onlineCount.count}`}\n            subtitle={`Shellies ${t('Connected')}`}\n            color=\"success\"\n            icon={<img alt=\"icon\" src=\"/assets/icons/overview/S-Shelly-Icon.svg\" />}\n          />\n        </Grid>\n\n        <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n          <AppWidgetSummary\n            title={fWh(totalPower)}\n            subtitle={t('_consumption_')}\n            color=\"info\"\n            icon={<img alt=\"icon\" src=\"/assets/icons/overview/consumption.svg\" />}\n          />\n        </Grid>\n\n        <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n          <AppWidgetSummary\n            title={`${scripts.running}/${scripts.count}`}\n            subtitle={t('Running')}\n            color=\"success\"\n            icon={<img alt=\"icon\" src=\"/assets/icons/overview/script.svg\" />}\n          />\n        </Grid>\n\n        <Grid size={{ xs: 12, sm: 6, md: 3 }}>\n          <AppWidgetSummary\n            title={fShortenNumber(cloudCount)}\n            subtitle={t('Connected')}\n            color=\"error\"\n            icon={<img alt=\"icon\" src=\"/assets/icons/overview/cloud.svg\" />}\n          />\n        </Grid>\n\n        <Grid size={{ xs: 12, sm: 12, md: 12, lg: 12 }}>\n          <CurrentConsumption\n            title={t('_consumption_')}\n            subheader={t('_perShelly_')}\n            colors={colorPerDevice}\n            series={powerPerDevice}\n          />\n        </Grid>\n\n        <Grid size={{ xs: 12, sm: 12, md: 12, lg: 12 }}>\n          <TimelineConsumption\n            title=\"Timeline\"\n            subheader={t('_perShelly_')}\n            chart={timelineByDevice}\n            handleTimelineChange={handleTimelineChange}\n            selection={selection}\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n\nimport { useShelly } from 'src/sccontext';\n\nimport { AppView } from 'src/sections/overview/view';\n\n// ----------------------------------------------------------------------\n\nexport default function AppPage() {\n  const { user } = useShelly();\n  return (\n    <>\n      <Helmet>\n        <title> Dashboard</title>\n      </Helmet>\n\n      {user ? <AppView /> : null}\n    </>\n  );\n}\n","/*\r\n  Author: André Kreienbring\r\n  Implementation of https://github.com/tiavina-mika/mui-tiptap-editor\r\n  Used for creating and updating blogposts.\r\n*/\r\nimport PropTypes from 'prop-types';\r\nimport { TextEditor } from 'mui-tiptap-editor';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n/**\r\n * Component that displays the mui-tiptap-editor\r\n * @param {function} handleContentChange Every change is reported to keep the post up-to-date\r\n * @param {string}  content The initial content of the editor\r\n */\r\nexport default function BlogEditor({ handleContentChange, content }) {\r\n  const { t } = useTranslation();\r\n\r\n  const toolbar = [\r\n    'heading',\r\n    'bold',\r\n    'italic',\r\n    'strike',\r\n    'link',\r\n    'underline',\r\n    'code',\r\n    'orderedList',\r\n    'bulletList',\r\n    'align',\r\n    'codeBlock',\r\n    'blockquote',\r\n    'history',\r\n    'color',\r\n  ];\r\n\r\n  /*\r\n    Label translation for the editor.\r\n    Not all of them are currently used!\r\n  */\r\n  const customLabels = {\r\n    editor: {\r\n      editor: 'Editor',\r\n      preview: t('_editor-preview_'),\r\n    },\r\n    toolbar: {\r\n      bold: t('_editor-bold_'),\r\n      italic: t('_editor-italic_'),\r\n      strike: t('_editor-strike_'),\r\n      underline: t('_editor-underline_'),\r\n      link: t('_editor-link_'),\r\n      bulletList: t('_editor-bulletlist_'),\r\n      orderedList: t('_editor-orderedlist_'),\r\n      alignLeft: t('_editor-alignleft_'),\r\n      alignCenter: t('_editor-aligncenter_'),\r\n      alignRight: t('_editor-alignright_'),\r\n      alignJustify: t('_editor-alignjustify_'),\r\n      blockquote: t('_editor-blockquote_'),\r\n      codeBlock: t('_editor-codeblock_'),\r\n      color: t('_editor-color_'),\r\n      table: 'Table',\r\n      youtube: 'Youtube',\r\n      undo: t('_editor-undo_'),\r\n      redo: t('_editor-redo_'),\r\n      mention: 'Mention',\r\n    },\r\n    headings: {\r\n      normalText: t('_editor-normaltext_'),\r\n      h1: t('_editor-h1_'),\r\n      h2: t('_editor-h2_'),\r\n      h3: t('_editor-h3_'),\r\n      h4: t('_editor-h4_'),\r\n      h5: t('_editor-h5_'),\r\n      h6: t('_editor-h6_'),\r\n    },\r\n    table: {\r\n      table: 'Tableau',\r\n      addColumnBefore: 'Ajouter une colonne avant',\r\n      addColumnAfter: 'Ajouter une colonne après',\r\n      deleteColumn: 'Supprimer la colonne',\r\n      addRowBefore: 'Ajouter une ligne avant',\r\n      addRowAfter: 'Ajouter une ligne après',\r\n      deleteRow: 'Supprimer la ligne',\r\n      mergeCells: 'Fusionner les cellules',\r\n      splitCell: 'Diviser la cellule',\r\n      deleteTable: 'Supprimer le tableau',\r\n      insertTable: 'Insérer un tableau',\r\n      toggleHeaderCell: \"Basculer la cellule d'en-tête\",\r\n      toggleHeaderColumn: \"Basculer la colonne d'en-tête\",\r\n      toggleHeaderRow: \"Basculer la ligne d'en-tête\",\r\n      mergeOrSplit: 'Fusionner ou diviser',\r\n      setCellAttribute: \"Définir l'attribut de cellule\",\r\n    },\r\n    link: {\r\n      link: t('_editor-link_'),\r\n      insert: t('_editor-insertlink_'),\r\n      invalid: t('_editor-invalidlink_'),\r\n    },\r\n    youtube: {\r\n      link: 'Lien',\r\n      insert: 'Insérer la vidéo Youtube',\r\n      title: 'Insérer une vidéo Youtube',\r\n      invalid: 'Lien invalide',\r\n      enter: 'Entrer le lien',\r\n      height: 'Hauteur',\r\n      width: 'Largeur',\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TextEditor\r\n        value={content}\r\n        onChange={handleContentChange}\r\n        toolbar={toolbar}\r\n        placeholder={t('_editor-placeholder_')}\r\n        disableTabs\r\n        toolbarPosition=\"top\"\r\n        labels={customLabels}\r\n        withBubbleMenu={false}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nBlogEditor.propTypes = {\r\n  handleContentChange: PropTypes.func.isRequired,\r\n  content: PropTypes.string,\r\n};\r\n","/*\r\n  Author: André Kreienbring\r\n  Renders the create and update form for blogposts\r\n  depending on the passed in type property.\r\n*/\r\nimport { useState } from 'react';\r\nimport isEqual from 'lodash/isEqual';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Switch from '@mui/material/Switch';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\nimport { useShelly } from 'src/sccontext';\r\n\r\nimport Iconify from 'src/components/iconify';\r\n\r\nimport BlogEditor from './post-editor';\r\n\r\n/**\r\n * Component that displays a form to create or update a Blogpost\r\n * @param {string} type The type of the form. Either 'create' or 'update'.\r\n * @param {function} handleUpdatePost Called when a Blogpost must be updated.\r\n * @param {object} A post that will be updated\r\n * @param {function} handleBlogpostsReceived Called when a list of blogposts arrives from the server\r\n */\r\nconst BlogpostForm = ({ type, handleUpdatePost, updatepost, handleBlogpostsReceived }) => {\r\n  const { user, request } = useShelly();\r\n  const [currentBlogpost, setCurrentBlogpost] = useState(\r\n    type === 'update'\r\n      ? updatepost\r\n      : {\r\n          title: '',\r\n          content: '',\r\n          public: 0,\r\n        }\r\n  );\r\n  const { t } = useTranslation();\r\n  const [requestResult, setRequestResult] = useState({ success: true, message: '' });\r\n\r\n  /**\r\n    Called when a 'blogpost create' message was received upon a former\r\n    request that was send by 'handleSubmit'. The new list of blogposts is attached\r\n    to the message\r\n    @param {object} msg The message that was passed with the answer from the server\r\n  */\r\n  const handleBlogpostCreate = (msg) => {\r\n    setRequestResult({\r\n      success: msg.data.success,\r\n      message: msg.data.message,\r\n    });\r\n    // if successful: update the posts in Blogview\r\n    if (msg.data.success) handleBlogpostsReceived(msg);\r\n  };\r\n\r\n  /**\r\n    Called when a 'blogpost update' message was received upon a former\r\n    request that was send by 'handleSubmit'\r\n    @param {object} msg The mesage that was passed with the answer from the server\r\n  */\r\n  const handleBlogpostUpdate = (msg) => {\r\n    setRequestResult({\r\n      success: msg.data.success,\r\n      message: msg.data.message,\r\n    });\r\n    // if successful: update the blogpost in BlogView\r\n    if (msg.data.success) handleUpdatePost(currentBlogpost);\r\n  };\r\n\r\n  /**\r\n    All controlled inputs constantly keep the 'currentBlogpost'\r\n    up to date. This way it can be directly submitted to \r\n    the server without collecting the form entries.\r\n    The name of the input must match a blogpost attribute!\r\n    @param {object} target The input field that was changed\r\n  */\r\n  const handleInputChange = ({ target }) => {\r\n    const updatedBlogpost = { ...currentBlogpost };\r\n    if (target.name === 'public') {\r\n      updatedBlogpost.public = target.checked ? 1 : 0;\r\n    } else {\r\n      updatedBlogpost[target.name] = target.value;\r\n    }\r\n    setCurrentBlogpost(updatedBlogpost);\r\n  };\r\n\r\n  /**\r\n    Called everytime the content of the RichTextEditor changes.\r\n    Adds the content to the current blogpost\r\n    @param {string} content The HTML content of the editor.\r\n  */\r\n  const handleContentChange = (content) => {\r\n    const updatedBlogpost = { ...currentBlogpost };\r\n    updatedBlogpost.content = content;\r\n    setCurrentBlogpost(updatedBlogpost);\r\n  };\r\n\r\n  /**\r\n   * Called when the submit button was clicked.\r\n   * Creates or updates a blogpost by communicating with the server\r\n   * @param {object} event\r\n   */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (type === 'create') {\r\n      currentBlogpost.userid = user.id;\r\n      currentBlogpost.createdAt = Date.now();\r\n\r\n      // send the created user to the server\r\n      const msg = {\r\n        event: 'blogpost create',\r\n        data: {\r\n          source: 'Blogpost Form',\r\n          message: 'Blogpost Form wants to create a new post',\r\n          blogpost: currentBlogpost,\r\n        },\r\n      };\r\n      request(msg, handleBlogpostCreate);\r\n    } else if (type === 'update') {\r\n      // send the updated blogpost to the server\r\n      const msg = {\r\n        event: 'blogpost update',\r\n        data: {\r\n          source: 'Blogpost Form',\r\n          message: 'Blogpost Form wants to update a post',\r\n          blogpost: currentBlogpost,\r\n        },\r\n      };\r\n      request(msg, handleBlogpostUpdate);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Constantly checking if submit criterias are met.\r\n   * @returns {boolean} True if the criterias are met, false otherwise\r\n   */\r\n  const checkSubmitCriterias = () =>\r\n    typeof currentBlogpost.title === 'undefined' ||\r\n    currentBlogpost.title.length === 0 ||\r\n    typeof currentBlogpost.content === 'undefined' ||\r\n    currentBlogpost.content.length === 0 ||\r\n    isEqual(updatepost, currentBlogpost);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <FormControl fullWidth size=\"subtitle2\">\r\n        <Stack spacing={3} sx={{ px: 3, py: 3 }}>\r\n          <Stack direction=\"row\" spacing={3}>\r\n            <TextField\r\n              required\r\n              value={currentBlogpost.title}\r\n              name=\"title\"\r\n              label={t('Title')}\r\n              slotProps={{ htmlInput: { maxLength: 40 } }}\r\n              onChange={handleInputChange}\r\n              sx={{ width: 280 }}\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  name=\"public\"\r\n                  size=\"medium\"\r\n                  checked={currentBlogpost.public === 1}\r\n                  onChange={handleInputChange}\r\n                />\r\n              }\r\n              label=\"Public\"\r\n              labelPlacement=\"bottom\"\r\n            />\r\n          </Stack>\r\n          <BlogEditor handleContentChange={handleContentChange} content={currentBlogpost.content} />\r\n          <Typography variant=\"subtitle2\" color={requestResult.success ? 'success' : 'error'}>\r\n            {t(requestResult.message)}\r\n          </Typography>\r\n          <Button\r\n            disabled={checkSubmitCriterias()}\r\n            fullWidth\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            color=\"inherit\"\r\n            variant=\"outlined\"\r\n            startIcon={<Iconify icon=\"formkit:submit\" />}\r\n          >\r\n            {t('Save')}\r\n          </Button>\r\n        </Stack>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BlogpostForm;\r\n","/*\r\n  Author: André Kreienbring\r\n  Presented for blogpost editing in the post-card\r\n  When clicked a dialog is opened that holds the form to update an existing blogpost.\r\n*/\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport Iconify from 'src/components/iconify';\r\n\r\nimport BlogPostForm from './blogpost-form';\r\n\r\n/**\r\n  A Drawer that displays the Blogpost form to update a post.\r\n  @param {boolean} openUpdate To determine if the update dialog is shown or not\r\n  @param {object} updatepost The blogpost that will be updated.\r\n  @param {function} onCloseUpdate Handles the closed status\r\n  @param {function} handleUpdatePost Called when BlogView must rerender the post\r\n*/\r\nexport default function UpdateBlogpost({\r\n  openUpdate,\r\n  updatepost,\r\n  onCloseUpdate,\r\n  handleUpdatePost,\r\n}) {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"right\"\r\n      open={openUpdate}\r\n      onClose={onCloseUpdate}\r\n      slotProps={{\r\n        paper: {\r\n          sx: { width: 1, border: 'none', overflow: 'auto' },\r\n        },\r\n      }}\r\n    >\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        sx={{ px: 1, py: 2 }}\r\n      >\r\n        <Typography variant=\"h6\" sx={{ ml: 1 }}>\r\n          {t('_editpost_')}\r\n        </Typography>\r\n        <IconButton onClick={onCloseUpdate}>\r\n          <Iconify icon=\"eva:close-fill\" />\r\n        </IconButton>\r\n      </Stack>\r\n\r\n      <Divider />\r\n      <BlogPostForm type=\"update\" handleUpdatePost={handleUpdatePost} updatepost={updatepost} />\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nUpdateBlogpost.propTypes = {\r\n  openUpdate: PropTypes.bool.isRequired,\r\n  updatepost: PropTypes.object,\r\n  handleUpdatePost: PropTypes.func,\r\n  onCloseUpdate: PropTypes.func.isRequired,\r\n};\r\n","/*\n  Author: André Kreienbring\n  A PostCard displays a single blog post. All PostCard's are\n  embedded in the BlogView Component\n*/\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { TextEditorReadOnly } from 'mui-tiptap-editor';\n\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport Grid from '@mui/material/Grid';\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport Popover from '@mui/material/Popover';\nimport { alpha } from '@mui/material/styles';\nimport MenuItem from '@mui/material/MenuItem';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\n\nimport { fDate } from 'src/utils/format-time';\n\nimport { useShelly } from 'src/sccontext';\n\nimport Iconify from 'src/components/iconify';\nimport SvgColor from 'src/components/svg-color';\n\nimport UpdateBlogpost from './update-blogpost';\n\n// ----------------------------------------------------------------------\n/**\n * A Component to display one single blogpost object with \n * available functions like e.g. a menue.\n * @param {object} blogpost The blogpost to display in the card\n * @param {number} index The index of the post in the blogpost array (determines size and design)\n * @param {function} handleDeletePost Called when the post must be deleted\n */\nexport default function PostCard({ blogpost, index, handleDeletePost }) {\n  const [openMenue, setOpenMenue] = useState(null);\n  const [openUpdate, setOpenUpdate] = useState(false);\n  const [openContent, setOpenContent] = useState(false);\n\n  const [showReallyDelete, setShowReallyDelete] = useState(false);\n  const [currentBlogpost, setCurrentBlogpost] = useState(blogpost);\n  const { t } = useTranslation();\n  const { user } = useShelly();\n\n  // this defines different shapes of the PostCard\n  const latestPostLarge = index === 0;\n  const latestPost = index === 1 || index === 2;\n\n  /**\n    Called when a post was updated.\n    @param {object} formpost The post that was updated using the form\n  */\n  const handleUpdatePost = (formpost) => {\n    const updatedPost = { ...currentBlogpost };\n    updatedPost.title = formpost.title;\n    updatedPost.content = formpost.content;\n    updatedPost.public = formpost.public;\n\n    setCurrentBlogpost(updatedPost);\n  };\n\n  // Open / Close the action menue\n  const handleOpenMenu = (e) => {\n    setOpenMenue(e.currentTarget);\n    setShowReallyDelete(false);\n  };\n  const handleCloseMenu = () => {\n    setOpenMenue(null);\n  };\n\n  // Open / Close the BlogpostUpdate Dialog\n  const handleCloseUpdate = () => {\n    setOpenUpdate(false);\n  };\n  const handleOpenUpdate = () => {\n    setOpenUpdate(true);\n    setOpenMenue(null);\n  };\n\n  /**\n   * Display a menue entry if the user clicks on 'delete'\n   */\n  const handleShowReally = () => {\n    setShowReallyDelete(true);\n  };\n\n  const renderAvatar = (\n    <Avatar\n      alt={currentBlogpost.author.name}\n      src={currentBlogpost.author.avatarUrl}\n      sx={{\n        zIndex: 9,\n        width: 32,\n        height: 32,\n        position: 'absolute',\n        left: (theme) => theme.spacing(3),\n        bottom: (theme) => theme.spacing(-2),\n        ...((latestPostLarge || latestPost) && {\n          zIndex: 9,\n          top: 24,\n          left: 24,\n          width: 40,\n          height: 40,\n        }),\n      }}\n    />\n  );\n\n  const renderPost = (\n    <Box\n      sx={\n        latestPostLarge || latestPost\n          ? {\n              position: 'absolute',\n              top: 80,\n              left: 25,\n            }\n          : { pl: 3, pt: 4 }\n      }\n    >\n      <Stack>\n        <Typography\n          variant=\"caption\"\n          component=\"div\"\n          sx={{\n            mb: 2,\n            color: 'text.disabled',\n            ...((latestPostLarge || latestPost) && {\n              opacity: 0.48,\n              color: 'common.white',\n            }),\n          }}\n        >\n          {fDate(currentBlogpost.createdAt)}\n        </Typography>\n        <Stack direction=\"row\" spacing={2}>\n          <Typography\n            color=\"inherit\"\n            variant=\"subtitle2\"\n            sx={{\n              height: 44,\n              overflow: 'hidden',\n              WebkitLineClamp: 2,\n              display: '-webkit-box',\n              WebkitBoxOrient: 'vertical',\n              ...(latestPostLarge && { typography: 'h5', height: 60 }),\n              ...((latestPostLarge || latestPost) && {\n                color: 'common.white',\n              }),\n            }}\n          >\n            {currentBlogpost.title}\n          </Typography>\n          <Iconify\n            icon=\"mdi:text-box\"\n            onClick={() => setOpenContent(!openContent)}\n            sx={{\n              cursor: 'pointer',\n              ...((latestPostLarge || latestPost) && {\n                color: 'white',\n              }),\n            }}\n          />\n        </Stack>\n        <Typography\n          variant=\"caption\"\n          color=\"inherit\"\n          sx={{\n            ...((latestPostLarge || latestPost) && {\n              color: 'common.white',\n            }),\n          }}\n        >\n          <TextEditorReadOnly\n            value={`${currentBlogpost.content.substring(0, 150)} ${currentBlogpost.content.length > 150 ? '...' : ''}`}\n          />\n        </Typography>\n      </Stack>\n    </Box>\n  );\n\n  const renderCover = (\n    <Box\n      component=\"img\"\n      alt={currentBlogpost.title}\n      src={currentBlogpost.cover}\n      sx={{\n        top: 0,\n        width: 1,\n        height: 1,\n        objectFit: 'cover',\n        position: 'absolute',\n      }}\n    />\n  );\n\n  const renderShape = (\n    <SvgColor\n      color=\"paper\"\n      src=\"/assets/icons/shape-avatar.svg\"\n      sx={{\n        width: 80,\n        height: 36,\n        zIndex: 9,\n        bottom: -15,\n        position: 'absolute',\n        color: 'background.paper',\n        ...((latestPostLarge || latestPost) && { display: 'none' }),\n      }}\n    />\n  );\n\n  return (\n    <Grid\n      size={\n        !openContent\n          ? { xs: 12, sm: latestPostLarge ? 12 : 6, md: latestPostLarge ? 6 : 3 }\n          : { xs: 12, sm: 12, md: 12 }\n      }\n    >\n      <Card>\n        <Box\n          sx={{\n            position: 'relative',\n            pt: 'calc(100% * 3 / 4)',\n            ...((latestPostLarge || latestPost) && {\n              pt: 'calc(100% * 4 / 3)',\n              '&:after': {\n                top: 0,\n                content: \"''\",\n                width: '100%',\n                height: '100%',\n                position: 'absolute',\n                bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72),\n              },\n            }),\n            ...(latestPostLarge && {\n              pt: {\n                xs: 'calc(100% * 4 / 3)',\n                sm: 'calc(100% * 3 / 4.66)',\n              },\n            }),\n          }}\n        >\n          {user !== null && user.roleid < 3 && (\n            <IconButton\n              onClick={handleOpenMenu}\n              sx={{\n                zIndex: 9,\n                position: 'absolute',\n                top: 24,\n                right: 20,\n                width: 40,\n                height: 40,\n              }}\n            >\n              <Iconify icon=\"eva:more-vertical-fill\" color=\"white\" />\n            </IconButton>\n          )}\n          {renderShape}\n\n          {renderAvatar}\n          {renderCover}\n        </Box>\n        {renderPost}\n      </Card>\n      {openContent && (\n        <Box\n          sx={{\n            m: 3,\n            display: 'flex',\n            width: 1,\n            overflowX: 'auto',\n            overflowY: 'auto',\n          }}\n        >\n          <TextEditorReadOnly value={currentBlogpost.content} />\n        </Box>\n      )}\n      {user !== null && user.roleid < 3 && (\n        <Popover\n          open={!!openMenue}\n          anchorEl={openMenue}\n          onClose={handleCloseMenu}\n          anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n          transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n          slotProps={{\n            paper: {\n              sx: { width: 200 },\n            },\n          }}\n        >\n          <MenuItem onClick={handleOpenUpdate}>\n            <Iconify icon=\"eva:edit-fill\" sx={{ mr: 2 }} />\n            {t('Edit')}\n          </MenuItem>\n\n          {!showReallyDelete && (\n            <MenuItem onClick={handleShowReally} sx={{ color: 'error.main' }}>\n              <Iconify icon=\"eva:trash-2-outline\" sx={{ mr: 2 }} />\n              {t('Delete')}\n            </MenuItem>\n          )}\n\n          {showReallyDelete && (\n            <MenuItem onClick={handleDeletePost} sx={{ color: 'error.main' }}>\n              <Iconify icon=\"eva:question-mark-circle-outline\" sx={{ mr: 2 }} />\n              {t('_reallydelete_')}\n            </MenuItem>\n          )}\n        </Popover>\n      )}\n      <UpdateBlogpost\n        title={t('_editpost_')}\n        openUpdate={openUpdate}\n        type=\"update\"\n        updatepost={currentBlogpost}\n        onCloseUpdate={handleCloseUpdate}\n        handleUpdatePost={handleUpdatePost}\n      />\n    </Grid>\n  );\n}\n\nPostCard.propTypes = {\n  blogpost: PropTypes.object.isRequired,\n  index: PropTypes.number.isRequired,\n  handleDeletePost: PropTypes.func,\n};\n","/*\r\n  Author: André Kreienbring\r\n  Presented as a Button in the Blog view. When clicked a Drawer is opened\r\n  that holds the form to create a new blogpost.\r\n*/\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport Iconify from 'src/components/iconify';\r\n\r\nimport BlogPostForm from './blogpost-form';\r\n\r\n/**\r\n  @param {boolean} openCreate To determine if the dialog is shown or not\r\n  @param {function} onOpenCreate Handles the open status\r\n  @param {function} onCloseCreate Handles the closed status\r\n  @param {function} handleBlogpostsReceived Will be passed to the UserForm to update\r\n    the list of all users\r\n*/\r\nexport default function CreateBlogpost({\r\n  openCreate,\r\n  onOpenCreate,\r\n  onCloseCreate,\r\n  handleBlogpostsReceived,\r\n}) {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"inherit\"\r\n        startIcon={<Iconify icon=\"eva:plus-fill\" />}\r\n        onClick={onOpenCreate}\r\n      >\r\n        {t('_newpost_')}\r\n      </Button>\r\n      <Drawer\r\n        anchor=\"right\"\r\n        open={openCreate}\r\n        onClose={onCloseCreate}\r\n        slotProps={{\r\n          paper: {\r\n            sx: { width: 1, border: 'none', overflow: 'auto' },\r\n          },\r\n        }}\r\n      >\r\n        <Stack\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n          sx={{ px: 1, py: 2 }}\r\n        >\r\n          <Typography variant=\"h6\" sx={{ ml: 1 }}>\r\n            {t('_newpost_')}\r\n          </Typography>\r\n          <IconButton onClick={onCloseCreate}>\r\n            <Iconify icon=\"eva:close-fill\" />\r\n          </IconButton>\r\n        </Stack>\r\n\r\n        <Divider />\r\n        <BlogPostForm type=\"create\" handleBlogpostsReceived={handleBlogpostsReceived} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nCreateBlogpost.propTypes = {\r\n  openCreate: PropTypes.bool.isRequired,\r\n  onOpenCreate: PropTypes.func.isRequired,\r\n  onCloseCreate: PropTypes.func.isRequired,\r\n  handleBlogpostsReceived: PropTypes.func.isRequired,\r\n};\r\n","/*\n  Main view for the Blog Posts\n*/\nimport { useRef, useState, useEffect, useCallback } from 'react';\n\nimport Grid from '@mui/material/Grid';\nimport Stack from '@mui/material/Stack';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n\nimport { createUUID, mapNumberToMax } from 'src/utils/general';\n\nimport { useShelly } from 'src/sccontext';\n\nimport PostCard from '../post-card';\nimport CreateBlogpost from '../create-blogpost';\n\n// ----------------------------------------------------------------------\n\nexport default function BlogView() {\n  const [blogposts, setBlogposts] = useState([]);\n  const { request, user } = useShelly();\n  const isBlogpostsLoaded = useRef(false);\n  const [openCreate, setOpenCreate] = useState(false);\n\n  /**\n    Called when BlogView is mounted and all blogposts\n    are received from the server.\n    @param {object} msg with an array ob existing blog posts\n  */\n  const handleBlogpostsReceived = useCallback(\n    (msg) => {\n      isBlogpostsLoaded.current = true;\n\n      const allBlogposts = msg.data.blogposts.map((blogpost, index) => ({\n        id: blogpost.blogpostid,\n        cover: `/assets/images/covers/cover_${mapNumberToMax(index + 1, 24)}.jpg`,\n        title: blogpost.title,\n        content: blogpost.content,\n        createdAt: blogpost.createdAt,\n        public: blogpost.public,\n        author: {\n          name: blogpost.alias,\n          avatarUrl: `/assets/images/avatars/avatar_${mapNumberToMax(blogpost.userid, 25)}.jpg`,\n        },\n      }));\n\n      setBlogposts(allBlogposts);\n    },\n    [setBlogposts]\n  );\n\n  // --------------------- Websocket Implementation BEGIN----------------\n  /*\n    After creation of the page all blogposts are requested from the websocket server.\n    The useEffect is only triggered once and lives as long the page is mounted.\n  */\n  useEffect(() => {\n    if (!isBlogpostsLoaded.current)\n      request(\n        {\n          event: 'blogposts get all',\n          data: {\n            source: 'Blog View',\n            message: 'Blog View  needs the list of blogposts',\n          },\n        },\n        handleBlogpostsReceived\n      );\n  }, [handleBlogpostsReceived, request]);\n\n  // Open / Close the BlogpostCreate Dialog\n  const handleOpenCreate = () => {\n    setOpenCreate(true);\n  };\n  const handleCloseCreate = () => {\n    setOpenCreate(false);\n  };\n\n  /**\n    Called from the PostCard component when a post\n    must be deleted. Send a message to the server.\n    @param {number} id The id of the blogpost that must be deleted\n  */\n  const handleDeletePost = (id) => {\n    request(\n      {\n        event: 'blogpost delete',\n        data: {\n          source: 'Blog View',\n          message: 'Blog View wants to delete a post',\n          ids: [id],\n        },\n      },\n      handleBlogpostsReceived\n    );\n  };\n\n  return (\n    <Container>\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n        <Typography variant=\"h4\">Blog</Typography>\n        {user.roleid < 3 && (\n          <CreateBlogpost\n            openCreate={openCreate}\n            onOpenCreate={handleOpenCreate}\n            onCloseCreate={handleCloseCreate}\n            handleBlogpostsReceived={handleBlogpostsReceived}\n          />\n        )}\n      </Stack>\n\n      <Grid container spacing={3}>\n        {blogposts.map((blogpost, index) => (\n          <PostCard\n            key={createUUID()}\n            blogpost={blogpost}\n            index={index}\n            handleDeletePost={(event) => handleDeletePost(blogpost.id)}\n          />\n        ))}\n      </Grid>\n    </Container>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n\nimport { useShelly } from 'src/sccontext';\n\nimport { BlogView } from 'src/sections/blog/view';\n\n// ----------------------------------------------------------------------\n\nexport default function BlogPage() {\n  const { user } = useShelly();\n\n  return (\n    <>\n      <Helmet>\n        <title> Blog</title>\n      </Helmet>\n\n      {user ? <BlogView /> : null}\n    </>\n  );\n}\n","/*\r\n  Author: André Kreienbring\r\n  Presented as a Button in the user view. When clicked a Drawer is opened\r\n  that holds the form to create a new user.\r\n*/\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport Iconify from 'src/components/iconify';\r\n\r\nimport UserForm from './user-form';\r\n\r\n/**\r\n  Component the presents a dialog to create a new user\r\n  @param {boolean} openCreate To determine if the dialog is shown or not\r\n  @param {function} onOpenCreate Handles the open status\r\n  @param {function} onCloseCreate Handles the closed status\r\n  @param {function} handleUsersReceived Will be passed to the UserForm to update\r\n    the list of all users\r\n*/\r\nexport default function CreateUser({\r\n  openCreate,\r\n  onOpenCreate,\r\n  onCloseCreate,\r\n  handleUsersReceived,\r\n}) {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"inherit\"\r\n        startIcon={<Iconify icon=\"eva:plus-fill\" />}\r\n        onClick={onOpenCreate}\r\n      >\r\n        {t('_newuser_')}\r\n      </Button>\r\n      <Drawer\r\n        anchor=\"right\"\r\n        open={openCreate}\r\n        onClose={onCloseCreate}\r\n        slotProps={{\r\n          paper: {\r\n            sx: { width: 300, border: 'none', overflow: 'hidden' },\r\n          },\r\n        }}\r\n      >\r\n        <Stack\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n          sx={{ px: 1, py: 2 }}\r\n        >\r\n          <Typography variant=\"h6\" sx={{ ml: 1 }}>\r\n            {t('_newuser_')}\r\n          </Typography>\r\n          <IconButton onClick={onCloseCreate}>\r\n            <Iconify icon=\"eva:close-fill\" />\r\n          </IconButton>\r\n        </Stack>\r\n\r\n        <Divider />\r\n        <UserForm type=\"create\" handleUsersReceived={handleUsersReceived} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nCreateUser.propTypes = {\r\n  openCreate: PropTypes.bool.isRequired,\r\n  onOpenCreate: PropTypes.func.isRequired,\r\n  onCloseCreate: PropTypes.func.isRequired,\r\n  handleUsersReceived: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport Paper from '@mui/material/Paper';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport Typography from '@mui/material/Typography';\n\n// ----------------------------------------------------------------------\n\nexport default function TableNoData({ query }) {\n  const { t } = useTranslation();\n\n  return (\n    <TableRow>\n      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n        <Paper\n          sx={{\n            textAlign: 'center',\n          }}\n        >\n          <Typography variant=\"h6\" paragraph>\n            {t('_notfound_')}\n          </Typography>\n\n          <Typography variant=\"body2\">\n            {t('_noresultsfor_')} &nbsp;\n            <strong>&quot;{query}&quot;</strong>.\n          </Typography>\n        </Paper>\n      </TableCell>\n    </TableRow>\n  );\n}\n\nTableNoData.propTypes = {\n  query: PropTypes.string,\n};\n","/*\r\n  Author: André Kreienbring\r\n  Renders a form to add devices to a user\r\n*/\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useState, useEffect, useCallback } from 'react';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Typography from '@mui/material/Typography';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\nimport { useShelly } from 'src/sccontext';\r\n\r\nimport Iconify from 'src/components/iconify';\r\n\r\n/**\r\n  Presents a form to add devices to a user. Communicates with the \r\n  websocket server.\r\n  @param {object} updateuser The user that devices will be added to\r\n*/\r\nconst DevicesForm = ({ updateuser = { updateuser } }) => {\r\n  const { t } = useTranslation();\r\n  const { request, devices } = useShelly();\r\n  const [userDevices, setUserDevices] = useState([]);\r\n  const [requestResult, setRequestResult] = useState({ success: true, message: '' });\r\n\r\n  /**\r\n    Called when a 'user devices update' message was received upon a former\r\n    request that was send by 'handleSubmit'. \r\n    @param {object} msg The message that was passed with the answer from the server\r\n  */\r\n  const handleDevicesUpdate = (msg) => {\r\n    setRequestResult({\r\n      success: msg.data.success,\r\n      message: msg.data.message,\r\n    });\r\n  };\r\n\r\n  /**\r\n    Add the selected Devices to the user\r\n    Send the updated user devices to the websocket server\r\n    @param {object} e The event\r\n  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    request(\r\n      {\r\n        event: 'user devices update',\r\n        data: {\r\n          source: 'Devices Form',\r\n          message: `Updating the devices of user ${updateuser.alias}`,\r\n          userid: updateuser.id,\r\n          userdevices: userDevices,\r\n        },\r\n      },\r\n      handleDevicesUpdate\r\n    );\r\n  };\r\n\r\n  /**\r\n    Called when the requested list of devices \r\n    is received from the server.\r\n    @param {object} msg The received ws message with the list of devices\r\n  */\r\n  const handleUserDevicesReceived = useCallback((msg) => {\r\n    setUserDevices(msg.data.userdevices);\r\n  }, []);\r\n\r\n  /**\r\n   * Called when a device checkbox was clicked.\r\n   * The userDevices Array must be updated accordingly\r\n   * @param {string} device_id The id of the device that was clicked\r\n   */\r\n  const handleUserDeviceChange = (device_id) => {\r\n    const newUserDevices = [...userDevices];\r\n    if (newUserDevices.includes(device_id)) {\r\n      newUserDevices.splice(\r\n        newUserDevices.findIndex((id) => id === device_id),\r\n        1\r\n      );\r\n    } else {\r\n      newUserDevices.push(device_id);\r\n    }\r\n    setUserDevices(newUserDevices);\r\n  };\r\n\r\n  // --------------------- Websocket Implementation BEGIN----------------\r\n  /*\r\n    A request for all devices of a user is send to the server. The server answers and the response is\r\n    handled accordingly.\r\n */\r\n  useEffect(() => {\r\n    request(\r\n      {\r\n        event: 'user devices get all',\r\n        data: {\r\n          source: 'Devices Form',\r\n          message: 'Devices Form needs the list of devices of a user',\r\n          userid: updateuser.id,\r\n        },\r\n      },\r\n      handleUserDevicesReceived\r\n    );\r\n  }, [handleUserDevicesReceived, request, updateuser]);\r\n  // --------------------- Websocket Implementation END------------------\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ height: 1 }}>\r\n      <Stack\r\n        direction=\"column\"\r\n        sx={{\r\n          justifyContent: 'space-between',\r\n          m: 2,\r\n          height: 1,\r\n        }}\r\n      >\r\n        <FormControl fullWidth size=\"subtitle2\">\r\n          <Stack spacing={0.5} sx={{ maxHeight: '99%', overflowY: 'auto' }}>\r\n            {devices.map((device, index) => (\r\n              <FormControlLabel\r\n                key={device.id}\r\n                value={device.id}\r\n                control={<Checkbox checked={userDevices.includes(device.id)} />}\r\n                onChange={() => handleUserDeviceChange(device.id)}\r\n                label={device.cname}\r\n              />\r\n            ))}\r\n          </Stack>\r\n        </FormControl>\r\n        <Typography variant=\"subtitle2\" color={requestResult.success ? 'success' : 'error'}>\r\n          {t(requestResult.message)}\r\n        </Typography>\r\n        <Button\r\n          fullWidth\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          color=\"inherit\"\r\n          variant=\"outlined\"\r\n          startIcon={<Iconify icon=\"formkit:submit\" />}\r\n        >\r\n          {t('Save')}\r\n        </Button>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\nexport default DevicesForm;\r\n","/*\r\n  Author: André Kreienbring\r\n  Presented for adding devices from the user table row entry menue. \r\n  When clicked a dialog is opened that holds the form to add devices to a user.\r\n*/\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport Iconify from 'src/components/iconify';\r\n\r\nimport DevicesForm from './devices-form';\r\n\r\n/**\r\n  Component that allows to update an existing user\r\n  @param {string} title The title that is presented at the top\r\n  @param {object} updateuser The user that devices will be added to\r\n  @param {boolean} openDevices To determine if the dialog is shown or not\r\n  @param {function} onCloseDevices Handles the closed status in the UserTableRow\r\n*/\r\nexport default function AddDevices({ title, updateuser, openDevices, onCloseDevices }) {\r\n  return (\r\n    <Drawer\r\n      anchor=\"right\"\r\n      open={openDevices}\r\n      onClose={onCloseDevices}\r\n      slotProps={{\r\n        paper: {\r\n          sx: { width: 300, border: 'none', overflow: 'hidden' },\r\n        },\r\n      }}\r\n    >\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        sx={{ px: 1, py: 2 }}\r\n      >\r\n        <Typography variant=\"h6\" sx={{ ml: 1 }}>\r\n          {`${title}: ${updateuser.alias}`}\r\n        </Typography>\r\n        <IconButton onClick={onCloseDevices}>\r\n          <Iconify icon=\"eva:close-fill\" />\r\n        </IconButton>\r\n      </Stack>\r\n\r\n      <Divider />\r\n      <DevicesForm updateuser={updateuser} />\r\n    </Drawer>\r\n  );\r\n}\r\n","import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Stack from '@mui/material/Stack';\nimport Avatar from '@mui/material/Avatar';\nimport Popover from '@mui/material/Popover';\nimport TableRow from '@mui/material/TableRow';\nimport Checkbox from '@mui/material/Checkbox';\nimport MenuItem from '@mui/material/MenuItem';\nimport TableCell from '@mui/material/TableCell';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\n\nimport Iconify from 'src/components/iconify';\n\nimport UpdateUser from 'src/sections/user/update-user';\nimport AddDevices from 'src/sections/user/add-devices';\n\n// ----------------------------------------------------------------------\n\n/*\n  @param {function} handleClick Called when clicking the checkbox of an user entry\n  @param {function} handleDeleteUser Called when a user must be deleted\n  @param {function} handleUpdateUser Called when a user was updated\n*/\nexport default function UserTableRow({\n  id,\n  selected,\n  alias,\n  avatarUrl,\n  firstname,\n  lastname,\n  roleid,\n  role,\n  email,\n  home,\n  handleClick,\n  handleDeleteUser,\n  handleUpdateUser,\n}) {\n  const [openMenue, setOpenMenue] = useState(null);\n  const [showReallyDelete, setShowReallyDelete] = useState(false);\n  const { t } = useTranslation();\n  const [openUpdate, setOpenUpdate] = useState({ open: false, type: '' });\n\n  const [openDevices, setOpenDevices] = useState({ open: false });\n\n  /**\n    Open / Close the UserUpdate Dialog\n    with the type of update that is going to be made\n    @param {string} type is either 'profile' or 'security'\n  */\n  const handleOpenUpdate = (type) => {\n    handleCloseMenu();\n    setOpenUpdate({ open: true, type });\n  };\n  const handleCloseUpdate = () => {\n    setOpenUpdate({ open: false, type: '' });\n  };\n\n  /**\n    Open / Close the Menue\n    @param {object} event is the click event\n  */\n  const handleOpenMenu = (event) => {\n    setOpenMenue(event.currentTarget);\n    setShowReallyDelete(false);\n  };\n  const handleCloseMenu = () => {\n    setOpenMenue(null);\n  };\n\n  /**\n    Add Delete to the Mnue\n    @param {object} event is the click event\n  */\n  const handleShowReally = () => {\n    setShowReallyDelete(true);\n  };\n\n  /**\n    Open / Close the Devices Dialog\n    with the type of update that is going to be made\n  */\n  const handleOpenDevices = () => {\n    handleCloseMenu();\n    setOpenDevices({ open: true });\n  };\n  const handleCloseDevices = () => {\n    setOpenDevices({ open: false });\n  };\n\n  return (\n    <>\n      <TableRow hover tabIndex={-1} role=\"checkbox\" selected={selected}>\n        <TableCell padding=\"checkbox\">\n          {roleid !== 1 && <Checkbox disableRipple checked={selected} onChange={handleClick} />}\n        </TableCell>\n\n        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n            <Avatar alt={alias} src={avatarUrl} />\n            <Typography variant=\"subtitle2\" noWrap>\n              {alias}\n            </Typography>\n          </Stack>\n        </TableCell>\n\n        <TableCell>{firstname}</TableCell>\n        <TableCell>{lastname}</TableCell>\n\n        <TableCell>{role}</TableCell>\n\n        <TableCell>{email}</TableCell>\n        <TableCell>{home}</TableCell>\n\n        <TableCell align=\"right\">\n          <IconButton onClick={handleOpenMenu}>\n            <Iconify icon=\"eva:more-vertical-fill\" />\n          </IconButton>\n        </TableCell>\n      </TableRow>\n\n      <Popover\n        open={!!openMenue}\n        anchorEl={openMenue}\n        onClose={handleCloseMenu}\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        slotProps={{\n          paper: {\n            sx: { width: 200 },\n          },\n        }}\n      >\n        <MenuItem onClick={() => handleOpenUpdate('profile')}>\n          <Iconify icon=\"eva:edit-fill\" sx={{ mr: 2 }} />\n          {t('Edit')}\n        </MenuItem>\n\n        {roleid !== 1 && (\n          <MenuItem onClick={() => handleOpenDevices()}>\n            <Iconify icon=\"eva:edit-fill\" sx={{ mr: 2 }} />\n            {t('_assigndevices_')}\n          </MenuItem>\n        )}\n        {!showReallyDelete && roleid !== 1 && (\n          <MenuItem onClick={handleShowReally} sx={{ color: 'error.main' }}>\n            <Iconify icon=\"eva:trash-2-outline\" sx={{ mr: 2 }} />\n            {t('Delete')}\n          </MenuItem>\n        )}\n\n        {showReallyDelete && (\n          <MenuItem onClick={handleDeleteUser} sx={{ color: 'error.main' }}>\n            <Iconify icon=\"eva:question-mark-circle-outline\" sx={{ mr: 2 }} />\n            {t('_reallydelete_')}\n          </MenuItem>\n        )}\n      </Popover>\n      <UpdateUser\n        title={t('_edituserprofile_')}\n        openUpdate={openUpdate.open}\n        type={openUpdate.type}\n        updateuser={{ alias, email, firstname, lastname, home, id, roleid, role }}\n        onCloseUpdate={handleCloseUpdate}\n        handleUpdateUser={handleUpdateUser}\n      />\n      <AddDevices\n        title={t('_assigndevices_')}\n        updateuser={{ alias, firstname, lastname, id }}\n        openDevices={openDevices.open}\n        onCloseDevices={handleCloseDevices}\n      />\n    </>\n  );\n}\n","export const visuallyHidden = {\n  border: 0,\n  margin: -1,\n  padding: 0,\n  width: '1px',\n  height: '1px',\n  overflow: 'hidden',\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  clip: 'rect(0 0 0 0)',\n};\n\nexport function emptyRows(page, rowsPerPage, arrayLength) {\n  return page ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (a[orderBy] === null) {\n    return 1;\n  }\n  if (b[orderBy] === null) {\n    return -1;\n  }\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function applyFilter({ inputData, comparator, filterName, field }) {\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  inputData = stabilizedThis.map((el) => el[0]);\n\n  if (filterName) {\n    inputData = inputData.filter(\n      (user) => user[field].toLowerCase().indexOf(filterName.toLowerCase()) !== -1\n    );\n  }\n\n  return inputData;\n}\n","import PropTypes from 'prop-types';\n\nimport Box from '@mui/material/Box';\nimport TableRow from '@mui/material/TableRow';\nimport Checkbox from '@mui/material/Checkbox';\nimport TableHead from '@mui/material/TableHead';\nimport TableCell from '@mui/material/TableCell';\nimport TableSortLabel from '@mui/material/TableSortLabel';\n\nimport { visuallyHidden } from './utils';\n\n// ----------------------------------------------------------------------\n\nexport default function UserTableHead({\n  order,\n  orderBy,\n  rowCount,\n  headLabel,\n  numSelected,\n  onRequestSort,\n  onSelectAllClick,\n}) {\n  const onSort = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n          />\n        </TableCell>\n\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.align || 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n            sx={{ width: headCell.width, minWidth: headCell.minWidth }}\n          >\n            <TableSortLabel\n              hideSortIcon\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={onSort(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box sx={{ ...visuallyHidden }}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nUserTableHead.propTypes = {\n  order: PropTypes.oneOf(['asc', 'desc']),\n  orderBy: PropTypes.string,\n  rowCount: PropTypes.number,\n  headLabel: PropTypes.array,\n  numSelected: PropTypes.number,\n  onRequestSort: PropTypes.func,\n  onSelectAllClick: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\n\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\n\n// ----------------------------------------------------------------------\n\nexport default function TableEmptyRows({ emptyRows, height }) {\n  if (!emptyRows) {\n    return null;\n  }\n\n  return (\n    <TableRow\n      sx={{\n        ...(height && {\n          height: height * emptyRows,\n        }),\n      }}\n    >\n      <TableCell colSpan={9} />\n    </TableRow>\n  );\n}\n\nTableEmptyRows.propTypes = {\n  emptyRows: PropTypes.number,\n  height: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputAdornment from '@mui/material/InputAdornment';\n\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nexport default function UserTableToolbar({\n  selected,\n  filterName,\n  onFilterName,\n  placeholder,\n  handleDeleteSelected,\n  showReallyDelete,\n  handleShowReallyDelete,\n}) {\n  const { t } = useTranslation();\n\n  return (\n    <Toolbar\n      sx={{\n        height: 96,\n        display: 'flex',\n        justifyContent: 'space-between',\n        p: (theme) => theme.spacing(0, 1, 0, 3),\n        ...(selected.length > 0 && {\n          color: 'primary.main',\n          bgcolor: 'primary.lighter',\n        }),\n      }}\n    >\n      {selected.length > 0 ? (\n        <Typography component=\"div\" variant=\"subtitle1\">\n          {selected.length} {t('selected')}\n        </Typography>\n      ) : (\n        <OutlinedInput\n          value={filterName}\n          onChange={onFilterName}\n          placeholder={placeholder}\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <Iconify\n                icon=\"eva:search-fill\"\n                sx={{ color: 'text.disabled', width: 20, height: 20 }}\n              />\n            </InputAdornment>\n          }\n        />\n      )}\n\n      {selected.length > 0 && !showReallyDelete && (\n        <Tooltip title={t('Delete')}>\n          <IconButton onClick={() => handleShowReallyDelete(true)}>\n            <Iconify icon=\"eva:trash-2-fill\" />\n          </IconButton>\n        </Tooltip>\n      )}\n      {selected.length > 0 && showReallyDelete && (\n        <Button\n          color=\"error\"\n          variant=\"contained\"\n          startIcon={<Iconify icon=\"eva:question-mark-circle-outline\" />}\n          onClick={() => {\n            handleDeleteSelected();\n            handleShowReallyDelete(false);\n          }}\n        >\n          <Typography variant=\"subtitle1\">{t('_reallydelete_')}</Typography>\n        </Button>\n      )}\n    </Toolbar>\n  );\n}\n\nUserTableToolbar.propTypes = {\n  selected: PropTypes.array,\n  filterName: PropTypes.string,\n  onFilterName: PropTypes.func,\n  placeholder: PropTypes.string,\n  handleDeleteSelected: PropTypes.func,\n  showReallyDelete: PropTypes.bool,\n  handleShowReallyDelete: PropTypes.func,\n};\n","/*\n  Author: André Kreienbring\n  Main View for the user management\n*/\nimport { useTranslation } from 'react-i18next';\nimport { useRef, useState, useEffect, useCallback } from 'react';\n\nimport Card from '@mui/material/Card';\nimport Stack from '@mui/material/Stack';\nimport Table from '@mui/material/Table';\nimport Container from '@mui/material/Container';\nimport TableBody from '@mui/material/TableBody';\nimport Typography from '@mui/material/Typography';\nimport TableContainer from '@mui/material/TableContainer';\nimport TablePagination from '@mui/material/TablePagination';\n\nimport { mapNumberToMax } from 'src/utils/general';\n\nimport { useShelly } from 'src/sccontext';\n// eslint-disable-next-line no-unused-vars, unused-imports/no-unused-imports\nimport { subscribeEvent, unsubscribeEvent } from 'src/events/pubsub';\n\nimport Scrollbar from 'src/components/scrollbar';\n\nimport CreateUser from '../create-user';\nimport TableNoData from '../table-no-data';\nimport UserTableRow from '../user-table-row';\nimport UserTableHead from '../user-table-head';\nimport TableEmptyRows from '../table-empty-rows';\nimport UserTableToolbar from '../user-table-toolbar';\nimport { emptyRows, applyFilter, getComparator } from '../utils';\n\n// ----------------------------------------------------------------------\n\nexport default function UserView() {\n  const [page, setPage] = useState(0);\n  const [users, setUsers] = useState([]);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const { t } = useTranslation();\n  const { request } = useShelly();\n  const [openCreate, setOpenCreate] = useState(false);\n  const isUsersLoaded = useRef(false);\n  const [showReallyDelete, setShowReallyDelete] = useState(false);\n\n  /**\n    The received users will be mapped to the table values.\n    Called when users arrive due to a request send to the websocket server.\n    Also called when a user was deleted and the server sends an updated list.\n    Also passed to the CreateUser Component and called when a user was created.\n    @param {object} msg A ws message that contains the users sent by the servers\n  */\n  const handleUsersReceived = (msg) => {\n    const serverUsers = msg.data.users;\n    const clientUsers = serverUsers.map((serverUser, index) => ({\n      id: serverUser.userid,\n      avatarUrl: `/assets/images/avatars/avatar_${mapNumberToMax(serverUser.userid, 25)}.jpg`,\n      alias: serverUser.alias,\n      firstname: serverUser.firstname,\n      lastname: serverUser.lastname,\n      role: serverUser.rolename,\n      email: serverUser.email,\n      home: serverUser.home,\n      roleid: serverUser.roleid,\n    }));\n    isUsersLoaded.current = true;\n    setUsers(clientUsers);\n  };\n\n  /**\n    Called when a user was updated. Updates the\n    list of users.\n    @param {object} updateuser The user that was updated\n  */\n  const handleUpdateUser = useCallback(\n    (updateuser) => {\n      const updatedUsers = [...users];\n      const index = updatedUsers.findIndex((x) => x.id === updateuser.id);\n      updatedUsers[index] = updateuser;\n      updatedUsers[index].avatarUrl =\n        `/assets/images/avatars/avatar_${mapNumberToMax(updateuser.id, 25)}.jpg`;\n\n      setUsers(updatedUsers);\n    },\n    [users]\n  );\n\n  /*\n    If a user is updated from the Account popover, then an\n    event signals that this view must update the list of users.\n  */\n  const handleUpdateUserEvent = useCallback(\n    (e) => {\n      if (e !== null) handleUpdateUser(e.detail);\n    },\n    [handleUpdateUser]\n  );\n\n  // --------------------- Websocket Implementation BEGIN----------------\n  /*\n    Upon mounting the userView sends a request for all users to the server. \n    The server answers and the response is handled accordingly.\n  */\n  useEffect(() => {\n    subscribeEvent('userUpdated', handleUpdateUserEvent);\n    if (!isUsersLoaded.current)\n      request(\n        {\n          event: 'users get all',\n          data: {\n            source: 'Users View',\n            message: 'User View needs the list of users',\n          },\n        },\n        handleUsersReceived\n      );\n    /*\n    return () => {\n      // cleanup on unmount: unsubscribe from the event\n      unsubscribeEvent('userUpdated');\n    };\n    */\n  }, [request, handleUpdateUserEvent]);\n  // --------------------- Websocket Implementation END------------------\n\n  /*\n    Open / Close the UserCreate Dialog\n  */\n  const handleOpenCreate = () => {\n    setOpenCreate(true);\n  };\n  const handleCloseCreate = () => {\n    setOpenCreate(false);\n  };\n\n  /**\n    Controls the really delete button in the table toolbar\n    @param {boolean} show Show the 'really delete' menue item or not\n  */\n  const handleShowReallyDelete = (show) => {\n    setShowReallyDelete(show);\n  };\n\n  /**\n   * Sorts the table by a certain user property\n   * @param {object} e The event\n   * @param {string} id The user property to sort the table (e.g. name)\n   */\n  const handleSort = (e, id) => {\n    const isAsc = orderBy === id && order === 'asc';\n    if (id !== '') {\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(id);\n    }\n  };\n\n  /*\n    Add all users except the Admin to the selection. \n  */\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = users.filter((u) => u.id !== 1).map((u) => u.alias);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n    setShowReallyDelete(false);\n  };\n\n  /**\n    When a checkbox of the user table is clicked, \n    this function creates an array of selected aliases\n    @param {object} e The event\n    @param {string} alias The alias of a user that must be added to the selection\n  */\n  const handleClick = (e, alias) => {\n    const selectedIndex = selected.indexOf(alias);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, alias);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n    setShowReallyDelete(false);\n  };\n\n  /**\n    Called from within the table row popover, when a user\n    must be deleted. Send a delete request to the server.\n    @param {number} id The id of the user that must be deleted\n  */\n  const handleDeleteUser = (id) => {\n    request(\n      {\n        event: 'user delete',\n        data: {\n          source: 'Users View',\n          message: 'User View wants to delete a user',\n          ids: [id],\n        },\n      },\n      handleUsersReceived\n    );\n  };\n\n  /**\n    Delete all selected users. The Admin is excluded!\n  */\n  const handleDeleteSelected = () => {\n    const ids = users\n      .filter((user) => selected.includes(user.alias) && user.id !== 1)\n      .map((user) => user.id);\n    setSelected([]);\n    request(\n      {\n        event: 'user delete',\n        data: {\n          source: 'Users View',\n          message: 'User View wants to delete users',\n          ids,\n        },\n      },\n      handleUsersReceived\n    );\n  };\n\n  /*\n    The table supports paging of the users\n  */\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = (event) => {\n    setPage(0);\n    setRowsPerPage(parseInt(event.target.value, 10));\n  };\n\n  /**\n   * Applies a filter to the users if text is entered in the search bar\n   * @param {object} e The event triggered when text is entered\n   */\n  const handleFilterByName = (e) => {\n    setPage(0);\n    setFilterName(e.target.value);\n  };\n\n  /**\n    Applies a filter on the users array depending on the current search / filter input.\n    TODO: find a way to choose a different field.\n  */\n  const dataFiltered = applyFilter({\n    inputData: users,\n    comparator: getComparator(order, orderBy),\n    filterName,\n    field: 'alias',\n  });\n\n  const notFound = !dataFiltered.length && !!filterName;\n\n  return (\n    <Container>\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n        <Typography variant=\"h4\">{t('Users')}</Typography>\n        <CreateUser\n          openCreate={openCreate}\n          onOpenCreate={handleOpenCreate}\n          onCloseCreate={handleCloseCreate}\n          handleUsersReceived={handleUsersReceived}\n        />\n      </Stack>\n\n      <Card>\n        <UserTableToolbar\n          selected={selected}\n          filterName={filterName}\n          onFilterName={handleFilterByName}\n          placeholder={t('_searchuser_')}\n          handleDeleteSelected={handleDeleteSelected}\n          showReallyDelete={showReallyDelete}\n          handleShowReallyDelete={handleShowReallyDelete}\n        />\n\n        <Scrollbar>\n          <TableContainer sx={{ overflow: 'unset' }}>\n            <Table sx={{ minWidth: 800 }}>\n              <UserTableHead\n                order={order}\n                orderBy={orderBy}\n                rowCount={users.length}\n                numSelected={selected.length}\n                onRequestSort={handleSort}\n                onSelectAllClick={handleSelectAllClick}\n                headLabel={[\n                  { id: 'alias', label: t('Alias') },\n                  { id: 'firstname', label: t('Firstname') },\n                  { id: 'lastname', label: t('Lastname') }, // , align: 'center' },\n                  { id: 'role', label: t('Role') },\n                  { id: 'email', label: t('Email') },\n                  { id: 'home', label: t('Home') },\n                  { id: '' },\n                ]}\n              />\n              <TableBody>\n                {dataFiltered\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row) => (\n                    <UserTableRow\n                      key={row.id}\n                      id={row.id}\n                      alias={row.alias}\n                      firstname={row.firstname}\n                      lastname={row.lastname}\n                      role={row.role}\n                      email={row.email}\n                      home={row.home}\n                      roleid={row.roleid}\n                      avatarUrl={row.avatarUrl}\n                      selected={selected.indexOf(row.alias) !== -1}\n                      handleClick={(event) => handleClick(event, row.alias)}\n                      handleDeleteUser={(event) => handleDeleteUser(row.id)}\n                      handleUpdateUser={handleUpdateUser}\n                    />\n                  ))}\n\n                <TableEmptyRows\n                  height={77}\n                  emptyRows={emptyRows(page, rowsPerPage, users.length)}\n                />\n\n                {notFound && <TableNoData query={filterName} />}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Scrollbar>\n\n        <TablePagination\n          page={page}\n          component=\"div\"\n          count={users.length}\n          rowsPerPage={rowsPerPage}\n          onPageChange={handleChangePage}\n          rowsPerPageOptions={[5, 10, 25]}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n          labelRowsPerPage={t('_rowsperpage_')}\n          labelDisplayedRows={({ from, to, count }) =>\n            `${from}–${to} ${t('of')} ${count !== -1 ? count : `${t('_morethan_')} ${to}`}`\n          }\n        />\n      </Card>\n    </Container>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n\nimport { useShelly } from 'src/sccontext';\n\nimport { UserView } from 'src/sections/user/view';\n\n// ----------------------------------------------------------------------\n\nexport default function UserPage() {\n  const { user } = useShelly();\n\n  return (\n    <>\n      <Helmet>\n        <title> User</title>\n      </Helmet>\n\n      {user ? <UserView /> : null}\n    </>\n  );\n}\n","/*\r\n  Author: André Kreienbring\r\n  Presents a selection of Shelly devices in the LoginView\r\n*/\r\nimport { useState } from 'react';\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport Carousel from 'react-material-ui-carousel';\r\n\r\nimport Box from '@mui/material/Box';\r\n\r\nimport { createUUID } from 'src/utils/general';\r\n\r\nexport default function DeviceCarousel() {\r\n  const DEVICES = ['Plus1PM', 'Plus1PMMini', 'PlusI4', 'PlusRGBWPM', 'SHBDUO-1', 'SHPLG-S'];\r\n\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const handleChange = (cur, prev) => {\r\n    setIndex(cur);\r\n    // console.log(cur, prev);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Carousel\r\n        index={index}\r\n        onChange={handleChange}\r\n        interval={4000}\r\n        animation=\"fade\"\r\n        indicators\r\n        stopAutoPlayOnHover\r\n      >\r\n        {DEVICES.map((name, i) => (\r\n          <Box\r\n            component=\"img\"\r\n            src={`/assets/images/devices/${name}.png`}\r\n            sx={{\r\n              width: 200,\r\n              hight: 200,\r\n              objectFit: 'scale-down',\r\n            }}\r\n            key={createUUID()}\r\n          />\r\n        ))}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n}\r\n","import Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport Stack from '@mui/material/Stack';\nimport { alpha, useTheme } from '@mui/material/styles';\n\nimport { bgGradient } from 'src/theme/css';\n\nimport Logo from 'src/components/logo';\n\nimport UserForm from 'src/sections/user/user-form';\nimport DeviceCarousel from 'src/sections/login/device-carousel';\n\n// ----------------------------------------------------------------------\n\nexport default function LoginView() {\n  const theme = useTheme();\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      sx={{\n        ...bgGradient({\n          color: alpha(theme.palette.background.default, 0.9),\n          imgUrl: '/assets/background/overlay_4.jpg',\n        }),\n        height: 1,\n      }}\n    >\n      <Card\n        sx={{\n          p: 5,\n          width: 1,\n          maxWidth: 420,\n        }}\n      >\n        <Stack sx={{ alignItems: 'center', justifyContent: 'center', height: 1 }}>\n          <Logo sx={{ mt: 3 }} />\n\n          <DeviceCarousel />\n\n          <UserForm type=\"login\" />\n        </Stack>\n      </Card>\n    </Box>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n\nimport { LoginView } from 'src/sections/login';\n\n// ----------------------------------------------------------------------\n\nexport default function LoginPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Login</title>\n      </Helmet>\n\n      <LoginView />\n    </>\n  );\n}\n","/*\r\n  Author: André Kreienbring\r\n  If 'blogs' is configured as the landing page, then\r\n  this component presents public posts on the langing page.\r\n*/\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useRef, useState, useEffect, useCallback } from 'react';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\nimport Container from '@mui/material/Container';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { createUUID, mapNumberToMax } from 'src/utils/general';\r\n\r\nimport { useShelly } from 'src/sccontext';\r\n\r\nimport Logo from 'src/components/logo';\r\nimport Iconify from 'src/components/iconify';\r\n\r\nimport PostCard from 'src/sections/blog/post-card';\r\n\r\nexport default function LandingView() {\r\n  const [blogposts, setBlogposts] = useState([]);\r\n  const { request } = useShelly();\r\n  const isBlogpostsLoaded = useRef(false);\r\n  const navigate = useNavigate();\r\n\r\n  /**\r\n    Called when BlogView is mounted and all blogposts\r\n    are received from the server.\r\n    Presents existing blogposts. If there are not blogpost\r\n    the loging page is presented.\r\n    @param {object} msg with an array ob existing blog posts\r\n    the loging page is presented.\r\n  */\r\n  const handleBlogpostsReceived = useCallback(\r\n    (msg) => {\r\n      isBlogpostsLoaded.current = true;\r\n\r\n      if (msg.data.blogposts.length > 0) {\r\n        const allBlogposts = msg.data.blogposts.map((blogpost, index) =>\r\n          // add a chart color to the device that depends on its index in the array\r\n          ({\r\n            id: blogpost.blogpostid,\r\n            cover: `/assets/images/covers/cover_${mapNumberToMax(index + 1, 24)}.jpg`,\r\n            title: blogpost.title,\r\n            content: blogpost.content,\r\n            createdAt: blogpost.createdAt,\r\n            view: 23,\r\n            comment: 45,\r\n            share: 45,\r\n            favorite: 5,\r\n            author: {\r\n              name: blogpost.alias,\r\n              avatarUrl: `/assets/images/avatars/avatar_${mapNumberToMax(blogpost.userid, 25)}.jpg`,\r\n            },\r\n          })\r\n        );\r\n\r\n        setBlogposts(allBlogposts);\r\n      } else {\r\n        navigate(`/login`);\r\n      }\r\n    },\r\n    [setBlogposts, navigate]\r\n  );\r\n\r\n  // --------------------- Websocket Implementation BEGIN----------------\r\n  /*\r\n    After creation of the page all blogposts are requested from the websocket server.\r\n    The useEffect is only triggered once and lives as long the page is mounted.\r\n  */\r\n  useEffect(() => {\r\n    if (!isBlogpostsLoaded.current)\r\n      request(\r\n        {\r\n          event: 'blogposts get public',\r\n          data: {\r\n            name: 'LandingView',\r\n            message: 'LandingView  needs the list of public blogposts',\r\n          },\r\n        },\r\n        handleBlogpostsReceived\r\n      );\r\n  }, [handleBlogpostsReceived, request]);\r\n\r\n  const handleLogin = () => {\r\n    navigate(`/login`);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <Stack direction=\"row\" spacing={10} sx={{ justifyContent: 'space-between' }}>\r\n          <Logo sx={{ mt: 3 }} />\r\n          <Stack direction=\"row\" sx={{ alignItems: 'center' }}>\r\n            <IconButton onClick={handleLogin} sx={{ pt: 3 }} aria-label=\"Login\">\r\n              <Iconify icon=\"eva:lock-fill\" />\r\n              <Typography variant=\"h6\">Login</Typography>\r\n            </IconButton>\r\n          </Stack>\r\n        </Stack>\r\n      </Box>\r\n\r\n      <Grid container spacing={3} sx={{ pt: 5 }}>\r\n        {blogposts.map((blogpost, index) => (\r\n          <PostCard key={createUUID()} blogpost={blogpost} index={index} />\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","/*\r\n  Author: André Kreienbring\r\n  If configured in 'globals.js' with LANDING_PAGE: 'blogs' this page presents Blog entries\r\n  and a link to the LoginView.\r\n*/\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nimport { LandingView } from 'src/sections/landing/view';\r\n\r\nexport default function LandingPage() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> S-Central</title>\r\n      </Helmet>\r\n\r\n      <LandingView />\r\n    </>\r\n  );\r\n}\r\n","/*\r\n    Author: André Kreienbring\r\n    Functions that sort arrays\r\n*/\r\n\r\n/*\r\n    Sorts an array of objects by the given numric property.\r\n    @param: {array} array The array that will be sorted\r\n    @param: {string} prop The property of the object that will be used for sorting.\r\n    @return: {array} The sorted array\r\n*/\r\nexport function sortNumeric(array, prop) {\r\n  return array.sort((a, b) => a[prop] - b[prop]); // b - a for reverse sort\r\n}\r\n\r\n/*\r\n    Sorts an array of objects by the given string property.\r\n    @param: {array} array The array that will be sorted\r\n    @param: {string} prop The property of the object that will be used for sorting.\r\n    @return: {array} The sorted array\r\n*/\r\nexport function sortText(array, prop) {\r\n  return array.sort((a, b) => a[prop].localeCompare(b[prop]));\r\n}\r\n","/*\r\n  Author: André Kreienbring\r\n  Simple component that renders the online status\r\n  of the device.\r\n*/\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Iconify from 'src/components/iconify';\r\n\r\n/**\r\n  @param {bool} online Is the device online or not?\r\n*/\r\nconst ShellyStatus = ({ online }) => (\r\n  <Iconify\r\n    icon={online ? 'material-symbols:wifi' : 'material-symbols:wifi-off'}\r\n    sx={{ color: online ? 'green' : 'red' }}\r\n  />\r\n);\r\n\r\nexport default ShellyStatus;\r\nShellyStatus.propTypes = {\r\n  online: PropTypes.bool.isRequired,\r\n};\r\n","/*\r\n  Author: André Kreienbring\r\n  Builds the list of Switches of a device shown on a ShellyCard component\r\n*/\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\nimport { createUUID } from 'src/utils/general';\r\n\r\nimport Iconify from 'src/components/iconify';\r\n\r\n/**\r\n  If not undefined the switches of a device are shown on top of the ShellyCard.\r\n  There may be up to 4 switches in one device (as of now)\r\n  @param {string} ip The ip address of the device that owns the switches\r\n  @param {array} switches The switches of a device.\r\n  @param {function} handleClick (in ShellyCard) Will be called when the switch was clicked.\r\n*/\r\nfunction ShellySwitchList({ ip, switches, handleClick }) {\r\n  if (typeof switches === 'undefined') return null;\r\n\r\n  return switches.map((aSwitch, index) => {\r\n    /*\r\n      Add the device ip to the switch. This way the ws server can toggle the switch easily.\r\n      With the added index 'ShellyCard' can toggle the 'output' of the device switch in question.\r\n    */\r\n    aSwitch.ip = ip;\r\n    aSwitch.index = index;\r\n\r\n    return (\r\n      <Tooltip title={`Switch ${aSwitch.id}`} key={createUUID()}>\r\n        <Iconify\r\n          icon=\"icomoon-free:switch\"\r\n          sx={{ cursor: 'pointer', color: aSwitch.output ? 'green' : 'black' }}\r\n          onClick={() => handleClick(aSwitch)}\r\n          key={createUUID()}\r\n        />\r\n      </Tooltip>\r\n    );\r\n  });\r\n}\r\n\r\nexport default ShellySwitchList;\r\n\r\nShellySwitchList.propTypes = {\r\n  ip: PropTypes.string.isRequired,\r\n  switches: PropTypes.array,\r\n  handleClick: PropTypes.func.isRequired,\r\n};\r\n","/*\r\n  Author: André Kreienbring\r\n  Component that shows the image of a shelly device and available switches\r\n  and some additional information like name and generation.\r\n  Used by the shelly card on different tab panels.\r\n*/\r\nimport PropTypes from 'prop-types';\r\nimport { memo, useState } from 'react';\r\n\r\nimport Link from '@mui/material/Link';\r\nimport Stack from '@mui/material/Stack';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardHeader from '@mui/material/CardHeader';\r\n\r\nimport ShellyStatus from 'src/components/shellies/shelly-status';\r\nimport ShellySwitchList from 'src/components/shellies/shelly-switch-list';\r\n\r\n/**\r\n * Component to display the Shelly device\r\n * @param {object} device The device to display \r\n * @param {function} handleSwitchToggle handles the click / toggle of a switch \r\n */\r\nconst Shelly = ({ device, handleSwitchToggle }) => {\r\n  const [switches, setSwitches] = useState(device.switches);\r\n\r\n  /**\r\n    When a switch status changed, it must be changed in the device\r\n    switches array. Doing this here rerenders the switch list and\r\n    prevents a rerender of the whole Shelly component.\r\n    @param {object} aSwitch The switch that was clicked / toggled\r\n  */\r\n  const handleClick = (aSwitch) => {\r\n    aSwitch.output = !aSwitch.output;\r\n    device.switches[aSwitch.index] = aSwitch;\r\n    setSwitches([...device.switches]);\r\n\r\n    // call the function of ShellyCard component.\r\n    handleSwitchToggle(aSwitch);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        direction=\"row\"\r\n        sx={{\r\n          minHeight: 35,\r\n          maxHeight: 35,\r\n          pr: 1,\r\n          pl: 1,\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <ShellyStatus online={device.online} />\r\n        <ShellySwitchList ip={device.ip} switches={switches} handleClick={handleClick} />\r\n      </Stack>\r\n      <CardHeader\r\n        title={\r\n          <Link href={`http://${device.ip}`} target=\"_blank\" color=\"inherit\" underline=\"hover\">\r\n            {device.cname}\r\n          </Link>\r\n        }\r\n        subheader={`${device.name} ${device.gen > 0 ? `(Gen ${device.gen})` : ''}`}\r\n        sx={{ minWidth: 200, minHeight: 50, maxHeight: 50, pt: 1 }}\r\n      />\r\n      <CardMedia\r\n        sx={{\r\n          minWidth: 160,\r\n          maxWidth: 160,\r\n          minHeight: 120,\r\n          objectFit: 'scale-down',\r\n        }}\r\n        image={device.image}\r\n        title={device.name}\r\n        component=\"img\"\r\n        alt={device.name}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default memo(Shelly);\r\n\r\nShelly.propTypes = {\r\n  device: PropTypes.object.isRequired,\r\n  handleSwitchToggle: PropTypes.func.isRequired,\r\n};\r\n","/*\r\n  Author: André Kreienbring\r\n  Presents a list of log messages that were sent from scripts.\r\n  The debug messages were send by UDP to the Shellybroker and forwarded by websocket\r\n  as 'updates' to the devices.\r\n\r\n*/\r\nimport { memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { createUUID } from 'src/utils/general';\r\n\r\n/**\r\n  Display the logs of a device per script\r\n  @param {array} scripts The scripts of a device containing the logmessages for each script.\r\n*/\r\nconst LogList = ({ scripts }) => {\r\n  if (typeof scripts === 'undefined') return null;\r\n\r\n  return scripts.map((script) => {\r\n    if (script?.logmessages?.length > 0) {\r\n      return (\r\n        <Stack spacing={0} key={createUUID()}>\r\n          <Typography variant=\"subtitle2\" key={createUUID()}>\r\n            {script.name}\r\n          </Typography>\r\n          {script.logmessages.map((logmessage) => {\r\n            const time = new Date(logmessage.ts * 1000).toTimeString().substring(0, 8);\r\n            return (\r\n              <Stack direction=\"row\" spacing={1} sx={{ minWidth: 0 }} key={createUUID()}>\r\n                <Typography variant=\"caption\" key={createUUID()}>\r\n                  {time}\r\n                </Typography>\r\n                <Typography variant=\"caption\" noWrap key={createUUID()}>\r\n                  {logmessage.msg}\r\n                </Typography>\r\n              </Stack>\r\n            );\r\n          })}\r\n        </Stack>\r\n      );\r\n    }\r\n    return null;\r\n  });\r\n};\r\nexport default memo(LogList);\r\n\r\nLogList.propTypes = {\r\n  scripts: PropTypes.array.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\nimport { forwardRef, useCallback } from 'react';\n\nimport Stack from '@mui/material/Stack';\nimport { alpha } from '@mui/material/styles';\nimport ButtonBase from '@mui/material/ButtonBase';\n\nimport Iconify from '../iconify';\n\n// ----------------------------------------------------------------------\n\nconst ColorPicker = forwardRef(\n  ({ colors, selected, onSelectColor, limit = 'auto', sx, ...other }, ref) => {\n    const singleSelect = typeof selected === 'string';\n\n    const handleSelect = useCallback(\n      (color) => {\n        if (singleSelect) {\n          if (color !== selected) {\n            onSelectColor(color);\n          }\n        } else {\n          const newSelected = selected.includes(color)\n            ? selected.filter((value) => value !== color)\n            : [...selected, color];\n\n          onSelectColor(newSelected);\n        }\n      },\n      [onSelectColor, selected, singleSelect]\n    );\n\n    return (\n      <Stack\n        ref={ref}\n        direction=\"row\"\n        display=\"inline-flex\"\n        sx={{\n          flexWrap: 'wrap',\n          ...(limit !== 'auto' && {\n            width: limit * 36,\n            justifyContent: 'flex-end',\n          }),\n          ...sx,\n        }}\n        {...other}\n      >\n        {colors.map((color) => {\n          const hasSelected = singleSelect ? selected === color : selected.includes(color);\n\n          return (\n            <ButtonBase\n              key={color}\n              sx={{\n                width: 36,\n                height: 36,\n                borderRadius: '50%',\n              }}\n              onClick={() => {\n                handleSelect(color);\n              }}\n            >\n              <Stack\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                sx={{\n                  width: 20,\n                  height: 20,\n                  bgcolor: color,\n                  borderRadius: '50%',\n                  border: (theme) => `solid 1px ${alpha(theme.palette.grey[500], 0.16)}`,\n                  ...(hasSelected && {\n                    transform: 'scale(1.3)',\n                    boxShadow: `4px 4px 8px 0 ${alpha(color, 0.48)}`,\n                    outline: `solid 2px ${alpha(color, 0.08)}`,\n                    transition: (theme) =>\n                      theme.transitions.create('all', {\n                        duration: theme.transitions.duration.shortest,\n                      }),\n                  }),\n                }}\n              >\n                <Iconify\n                  width={hasSelected ? 12 : 0}\n                  icon=\"eva:checkmark-fill\"\n                  sx={{\n                    color: (theme) => theme.palette.getContrastText(color),\n                    transition: (theme) =>\n                      theme.transitions.create('all', {\n                        duration: theme.transitions.duration.shortest,\n                      }),\n                  }}\n                />\n              </Stack>\n            </ButtonBase>\n          );\n        })}\n      </Stack>\n    );\n  }\n);\n\nColorPicker.propTypes = {\n  colors: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  limit: PropTypes.number,\n  onSelectColor: PropTypes.func,\n  selected: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  sx: PropTypes.object,\n};\n\nexport default ColorPicker;\n","import PropTypes from 'prop-types';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport { alpha } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nexport default function ColorPreview({ colors, limit = 3, sx }) {\n  const renderColors = colors.slice(0, limit);\n\n  const remainingColor = colors.length - limit;\n\n  return (\n    <Stack component=\"span\" direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\" sx={sx}>\n      {renderColors.map((color, index) => (\n        <Box\n          key={color + index}\n          sx={{\n            ml: -0.75,\n            width: 16,\n            height: 16,\n            bgcolor: color,\n            borderRadius: '50%',\n            border: (theme) => `solid 2px ${theme.palette.background.paper}`,\n            boxShadow: (theme) => `inset -1px 1px 2px ${alpha(theme.palette.common.black, 0.24)}`,\n          }}\n        />\n      ))}\n\n      {colors.length > limit && (\n        <Box component=\"span\" sx={{ typography: 'subtitle2' }}>{`+${remainingColor}`}</Box>\n      )}\n    </Stack>\n  );\n}\n\nColorPreview.propTypes = {\n  colors: PropTypes.arrayOf(PropTypes.string),\n  limit: PropTypes.number,\n  sx: PropTypes.object,\n};\n","/*\r\n  Author: André Kreienbring\r\n  Builds the list of KVS entries of a device shown on a ShellyCard component\r\n*/\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { createUUID } from 'src/utils/general';\r\n\r\nimport { ColorPreview } from 'src/components/color-utils';\r\n\r\nconst COLORS = ['#00AB55', '#D22B2B', '#000000'];\r\n\r\n/**\r\n  If not undefined the diplay value of an entry is shown on the ShellyCard.\r\n  This value is configured on the Shellybroker and used to convert tecnical\r\n  values into readable ones.\r\n  The values are presented depending on their type (boolean, text, etc.)\r\n  @param {array} kvs The KVS entries of a device.\r\n*/\r\nfunction ShellyKVSList({ kvs }) {\r\n  return kvs.map((kvsentry, index) => {\r\n    const key = typeof kvsentry.display !== 'undefined' ? kvsentry.display : kvsentry.key;\r\n\r\n    // convert the value given on its style attribute\r\n    const convertValue = (value) => {\r\n      const style = typeof kvsentry.style !== 'undefined' ? kvsentry.style : kvsentry.value;\r\n      switch (style) {\r\n        case 'boolean':\r\n          return Number(kvsentry.value) === 1 ? 'true' : 'false';\r\n        case 'color':\r\n          return (\r\n            <ColorPreview\r\n              key={createUUID()}\r\n              colors={Number(kvsentry.value) === 1 ? COLORS.slice(0, 1) : COLORS.slice(1, 2)}\r\n              sx={{ pt: '5px' }}\r\n            />\r\n          );\r\n        default:\r\n          return kvsentry.value;\r\n      }\r\n    };\r\n\r\n    return (\r\n        <Stack\r\n          direction=\"row\"\r\n          justifyContent=\"space-between\"\r\n          style={{ gap: 20 }}\r\n          useFlexGap\r\n          flexWrap=\"wrap\"\r\n          key={createUUID()}\r\n        >\r\n          <Typography key={createUUID()} variant=\"caption\" sx={{ minWidth: 100 }}>\r\n            {key}\r\n          </Typography>\r\n          <Typography key={createUUID()} variant=\"caption\">\r\n            {convertValue()}\r\n          </Typography>\r\n        </Stack>\r\n    );\r\n  });\r\n}\r\n\r\nexport default ShellyKVSList;\r\n\r\nShellyKVSList.propTypes = {\r\n  kvs: PropTypes.array.isRequired,\r\n};\r\n","/*\r\n  Author: André Kreienbring\r\n  Presents components to control the switches of a Shelly. Like e.g.:\r\n  Brightness\r\n  White\r\n  RGBW\r\n  For documentation of the multi-color-input see https://viclafouch.github.io/mui-color-input/docs/api-reference/\r\n*/\r\nimport PropTypes from 'prop-types';\r\nimport debounce from 'lodash/debounce';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { MuiColorInput } from 'mui-color-input';\r\nimport { useMemo, useState, useEffect } from 'react';\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Slider from '@mui/material/Slider';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n/**\r\n  Offers controls to change brightness, white value and rgb of the\r\n  switch of a device.\r\n  @param {object} device The device with switches\r\n  @param {function} handleSwitchSet Called when values of a switch will \r\n    be transmitted to the websocket server\r\n*/\r\nconst ShellyControls = ({ device, handleSwitchSet }) => {\r\n  const [switches, setSwitches] = useState(device.switches);\r\n  const { t } = useTranslation();\r\n\r\n  const brightnessSwitch = switches.find((aSwitch) => typeof aSwitch.brightness !== 'undefined');\r\n  const whiteSwitch = switches.find((aSwitch) => typeof aSwitch.white !== 'undefined');\r\n  const rgbSwitch = switches.find((aSwitch) => typeof aSwitch.rgb !== 'undefined');\r\n\r\n  const [rgb, setRGB] = useState(\r\n    typeof rgbSwitch !== 'undefined'\r\n      ? `rgb (${rgbSwitch.rgb[0]}, ${rgbSwitch.rgb[1]}, ${rgbSwitch.rgb[2]})`\r\n      : 'rgb (255, 0, 0)'\r\n  );\r\n  const [brightness, setBrightness] = useState(\r\n    typeof brightnessSwitch !== 'undefined' ? brightnessSwitch.brightness : 0\r\n  );\r\n  const [white, setWhite] = useState(typeof whiteSwitch !== 'undefined' ? whiteSwitch.white : 0);\r\n\r\n  // debounce protects the sever of to many updates while moving the sliders\r\n  const debouncedSwitchSet = useMemo(\r\n    () => debounce(handleSwitchSet, 30, { leading: false, trailing: true }),\r\n    [handleSwitchSet]\r\n  );\r\n\r\n  /**\r\n    Called when the color input was changed.\r\n    @param {string} color The new color value stringified (depends on the 'format' of the input)\r\n    @param {object} colors an object of the color value in different formats stringified \r\n      (hex, hex8, hsl, hsv, rgb)\r\n  */\r\n  const handleRGBChange = (color, colors) => {\r\n    setRGB(color);\r\n    // add the ip for easy device identification on the server side\r\n    rgbSwitch.ip = device.ip;\r\n    rgbSwitch.rgb = colors.rgb;\r\n    debouncedSwitchSet(rgbSwitch);\r\n  };\r\n\r\n  const handleBrightnessChange = (e, newValue) => {\r\n    setBrightness(newValue);\r\n    brightnessSwitch.ip = device.ip;\r\n    brightnessSwitch.brightness = newValue;\r\n    debouncedSwitchSet(brightnessSwitch);\r\n  };\r\n\r\n  const handleWhiteChange = (e, newValue) => {\r\n    setWhite(newValue);\r\n    whiteSwitch.ip = device.ip;\r\n    whiteSwitch.white = newValue;\r\n    debouncedSwitchSet(whiteSwitch);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSwitches(device.switches);\r\n  }, [device, setSwitches]);\r\n\r\n  return (\r\n    <Stack alignItems=\"flex-start\">\r\n      {typeof brightnessSwitch !== 'undefined' && (\r\n        <>\r\n          <Typography variant=\"subtitle\">{t('Brightness')}</Typography>\r\n          <Slider\r\n            value={brightness}\r\n            min={0}\r\n            max={100}\r\n            step={10}\r\n            marks\r\n            valueLabelDisplay=\"auto\"\r\n            size=\"small\"\r\n            onChange={handleBrightnessChange}\r\n            aria-label=\"Brighness slider\"\r\n          />\r\n        </>\r\n      )}\r\n      {typeof whiteSwitch !== 'undefined' && (\r\n        <>\r\n          <Typography variant=\"subtitle\">{t('White')}</Typography>\r\n          <Slider\r\n            value={white}\r\n            min={0}\r\n            max={device.gen === 1 ? 100 : 255}\r\n            step={device.gen === 1 ? 10 : 25}\r\n            marks\r\n            valueLabelDisplay=\"auto\"\r\n            size=\"small\"\r\n            onChange={handleWhiteChange}\r\n            aria-label=\"White slider\"\r\n          />\r\n        </>\r\n      )}\r\n      {typeof rgbSwitch !== 'undefined' && (\r\n        <MuiColorInput\r\n          format=\"rgb\"\r\n          isAlphaHidden\r\n          value={rgb}\r\n          onChange={handleRGBChange}\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          aria-label=\"Color Selection\"\r\n          sx={{ pt: 1 }}\r\n        />\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ShellyControls;\r\n\r\nShellyControls.propTypes = {\r\n  device: PropTypes.object,\r\n  handleSwitchSet: PropTypes.func,\r\n};\r\n","/*\r\n  Author: André Kreienbring\r\n  Displays the white value sent with a 'NotifyFullStatus' websocket message.\r\n*/\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { createUUID } from 'src/utils/general';\r\n\r\nimport Iconify from 'src/components/iconify';\r\n\r\n/**\r\n  The values will be displayed in kb\r\n  @param {object} white The white property of a 'NotifyFullStatus' websocket message.\r\n*/\r\nconst White = ({ white }) => (\r\n  <Stack\r\n    direction=\"row\"\r\n    justifyContent=\"flex-start\"\r\n    alignItems=\"center\"\r\n    spacing={0.5}\r\n    key={createUUID()}\r\n  >\r\n    <Iconify icon=\"stash:circle-dot\" key={createUUID()} />\r\n    <Typography variant=\"caption\" key={createUUID()}>\r\n      {white}\r\n    </Typography>\r\n  </Stack>\r\n);\r\n\r\nexport default White;\r\n\r\nWhite.propTypes = {\r\n  white: PropTypes.number,\r\n};\r\n","/*\r\n  Author: André Kreienbring\r\n  A simple component that displays a BLE event\r\n  Example: motion or door/window events\r\n*/\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { createUUID } from 'src/utils/general';\r\n\r\nimport Iconify from 'src/components/iconify';\r\n\r\n/**\r\n  @param {object} data The data portion of an event property\r\n    of a 'NotifyEvent' websocket message.\r\n*/\r\nconst BLEEvent = ({ data }) => {\r\n  if (typeof data.motion !== 'undefined') {\r\n    // BLU motion event\r\n    return (\r\n      <Iconify\r\n        icon={Number(data.motion) === 1 ? 'material-symbols:directions-walk' : 'fa6-solid:person'}\r\n        sx={{ color: Number(data.motion) === 1 ? 'blue' : 'black' }}\r\n        key={createUUID()}\r\n      />\r\n    );\r\n  }\r\n\r\n  // BLU door / window event\r\n  if (typeof data.window !== 'undefined') {\r\n    if (Number(data.window) === 1) {\r\n      return (\r\n        <Iconify\r\n          icon=\"material-symbols:door-open-rounded\"\r\n          sx={{ color: 'black' }}\r\n          key={createUUID()}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <Iconify\r\n        icon=\"material-symbols:door-front-rounded\"\r\n        sx={{ color: 'black' }}\r\n        key={createUUID()}\r\n      />\r\n    );\r\n  }\r\n\r\n  //  BLU button event\r\n  if (typeof data.button !== 'undefined') {\r\n    switch (Number(data.button)) {\r\n      case 1:\r\n        return <Iconify icon=\"mdi:number-1-box\" sx={{ color: 'blue' }} key={createUUID()} />;\r\n      case 2:\r\n        return <Iconify icon=\"mdi:number-2-box\" sx={{ color: 'blue' }} key={createUUID()} />;\r\n      case 3:\r\n        return <Iconify icon=\"mdi:number-3-box\" sx={{ color: 'blue' }} key={createUUID()} />;\r\n      case 4:\r\n        return <Iconify icon=\"mdi:number-4-box\" sx={{ color: 'blue' }} key={createUUID()} />;\r\n      case 254:\r\n        return <Iconify icon=\"f7:hand-point-left-fill\" sx={{ color: 'blue' }} key={createUUID()} />;\r\n      default:\r\n        return <Iconify icon=\"f7:hand-point-left-fill\" sx={{ color: 'blue' }} key={createUUID()} />;\r\n    }\r\n  }\r\n\r\n  // unhandled BLU event\r\n  return <Iconify icon=\"material-symbols:event-busy\" sx={{ color: 'black' }} key={createUUID()} />;\r\n};\r\n\r\nexport default BLEEvent;\r\n\r\nBLEEvent.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n};\r\n","/*\r\n  Author: André Kreienbring\r\n  A simple component that display an (non-BLE) event.\r\n  Example: button press event\r\n*/\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Stack from '@mui/material/Stack';\r\n\r\nimport { createUUID } from 'src/utils/general';\r\n\r\nimport Iconify from 'src/components/iconify';\r\n\r\n/**\r\n  @param {object} event The event of a 'NotifyEvent' websocket message.\r\n*/\r\nconst ButtonEvent = ({ event }) => {\r\n  let degree;\r\n  switch (Number(event.id)) {\r\n    case 0:\r\n      degree = 180;\r\n      break;\r\n    case 1:\r\n      degree = 270;\r\n      break;\r\n    case 2:\r\n      degree = 90;\r\n      break;\r\n    default:\r\n      degree = 0;\r\n  }\r\n  return (\r\n    <Stack direction=\"row\" key={createUUID()}>\r\n      <Iconify\r\n        icon=\"system-uicons:grid-squares-add\"\r\n        sx={{ color: 'black' }}\r\n        className={`rotate${degree}`}\r\n        key={createUUID()}\r\n      />\r\n      {event.event === 'single_push' && (\r\n        <Iconify icon=\"mdi:number-1-box\" sx={{ color: 'blue' }} key={createUUID()} />\r\n      )}\r\n      {event.event === 'double_push' && (\r\n        <Iconify icon=\"mdi:number-2-box\" sx={{ color: 'blue' }} key={createUUID()} />\r\n      )}\r\n      {event.event === 'triple_push' && (\r\n        <Iconify icon=\"mdi:number-3-box\" sx={{ color: 'blue' }} key={createUUID()} />\r\n      )}\r\n      {(event.event === 'long_push' || event.event === 'btn_up') && (\r\n        <Iconify icon=\"f7:hand-point-left-fill\" sx={{ color: 'blue' }} key={createUUID()} />\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ButtonEvent;\r\n\r\nButtonEvent.propTypes = {\r\n  event: PropTypes.object.isRequired,\r\n};\r\n","import 'src/custom.css';\r\n\r\n/*\r\n  Author: André Kreienbring\r\n  Examines the 'events' property of a 'NotifyEvent' websocket message.\r\n  The message was originally sent by the shelly device to the Shellybroker.\r\n  The event can be a BLE event sent by a bluetooth gateway or\r\n  an other type of event like for example a button press...\r\n*/\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { createUUID } from 'src/utils/general';\r\n\r\nimport Iconify from 'src/components/iconify';\r\n\r\nimport BLEEvent from './ble-event';\r\nimport ButtonEvent from './button-event';\r\n\r\n/**\r\n  @param {array} events mandatory The events sent by on NotifyEvent websocket message\r\n*/\r\nconst NotifyEvents = ({ events }) => {\r\n  const elements = events.map((event) => {\r\n    // shelly-blue events\r\n    if (event.event === 'shelly-blu' && typeof event.data !== 'undefined') {\r\n      return <BLEEvent data={event.data} key={createUUID()} />;\r\n    }\r\n\r\n    // non BLE Button envents\r\n    const push = ['single_push', 'double_push', 'triple_push', 'long_push'];\r\n    if (push.includes(event.event)) {\r\n      return <ButtonEvent event={event} key={createUUID()} />;\r\n    }\r\n\r\n    if (event.event === 'btn_up' || event.event === 'btn_down') {\r\n      // ignore btn_up and btn_down\r\n      return null;\r\n    }\r\n\r\n    // restart event\r\n    if (event.event === 'scheduled_restart') {\r\n      return (\r\n        <Iconify icon=\"solar:restart-square-bold\" sx={{ color: 'black' }} key={createUUID()} />\r\n      );\r\n    }\r\n\r\n    // unknown type of event\r\n    return <Iconify icon=\"ic:sharp-help\" sx={{ color: 'black' }} key={createUUID()} />;\r\n  });\r\n\r\n  if (elements.length > 0) return elements;\r\n\r\n  // should not happen because at least 'help' is returned\r\n  return <Iconify icon=\"mdi:bug\" sx={{ color: 'red' }} key={createUUID()} />;\r\n};\r\n\r\nexport default NotifyEvents;\r\nNotifyEvents.propTypes = {\r\n  events: PropTypes.array.isRequired,\r\n};\r\n","/*\r\n  Author: André Kreienbring\r\n  Render the current consumption of a Shelly PM device.\r\n*/\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { fWh } from 'src/utils/format-number';\r\nimport { createUUID } from 'src/utils/general';\r\n\r\nimport Iconify from 'src/components/iconify';\r\n\r\n/**\r\n  The consumption will be displayed in 'w/h'.\r\n  @param {number} consume The current energy consumption of a device in mw/m.\r\n*/\r\nconst Energy = ({ consume }) => (\r\n  <Stack\r\n    direction=\"row\"\r\n    justifyContent=\"flex-start\"\r\n    alignItems=\"center\"\r\n    spacing={0.5}\r\n    key={createUUID()}\r\n  >\r\n    <Iconify\r\n      icon=\"material-symbols-light:bolt\"\r\n      sx={{ color: Number(consume > 0) ? 'blue' : 'black' }}\r\n      key={createUUID()}\r\n    />\r\n    <Typography variant=\"caption\" key={createUUID()}>\r\n      {fWh(consume)}\r\n    </Typography>\r\n  </Stack>\r\n);\r\nexport default Energy;\r\n\r\nEnergy.propTypes = {\r\n  consume: PropTypes.number.isRequired,\r\n};\r\n","/*\r\n  Author: André Kreienbring\r\n  Renders the scripts of a Shelly devices including their 'running' status.\r\n*/\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { createUUID } from 'src/utils/general';\r\n\r\n/**\r\n  The params property of a 'NotifyFullStatus' websocket message may contain\r\n  various script properties. \r\n  These are checked for the script status and displayed including their memory state\r\n  @param {object} params The params property of a 'NotifyFullStatus' websocket message\r\n*/\r\nconst Scripts = ({ params }) => {\r\n  const elements = [];\r\n\r\n  const paramKeys = Object.keys(params);\r\n  paramKeys.forEach((key) => {\r\n    if (key.startsWith('script')) {\r\n      const script = params[key];\r\n      elements.push(\r\n        <Stack\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"center\"\r\n          spacing={0.5}\r\n          direction=\"row\"\r\n          key={createUUID()}\r\n        >\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            color={script.running ? 'green' : 'red'}\r\n            key={createUUID()}\r\n          >\r\n            &#123;{script.id}&#125;\r\n          </Typography>\r\n          <Typography variant=\"caption\" key={createUUID()}>\r\n            {Math.round(Number(script.mem_free) / 1024)} kb free\r\n          </Typography>\r\n        </Stack>\r\n      );\r\n    }\r\n  });\r\n  return elements;\r\n};\r\n\r\nexport default Scripts;\r\n\r\nScripts.propTypes = {\r\n  params: PropTypes.object.isRequired,\r\n};\r\n","/*\r\n  Author: André Kreienbring\r\n  Renders the current available stable firmware update version of a Shelly device.\r\n*/\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { createUUID } from 'src/utils/general';\r\n\r\nimport Iconify from 'src/components/iconify';\r\n\r\n/**\r\n  @param {string} version The available stable Firmware version of a Shelly device\r\n*/\r\nconst Firmware = ({ version }) => (\r\n  <Stack\r\n    direction=\"row\"\r\n    justifyContent=\"flex-start\"\r\n    alignItems=\"center\"\r\n    spacing={0.5}\r\n    key={createUUID()}\r\n  >\r\n    <Iconify icon=\"material-symbols:system-update-alt\" sx={{ color: 'green' }} key={createUUID()} />\r\n    <Typography variant=\"caption\" key={createUUID()}>\r\n      {version}\r\n    </Typography>\r\n  </Stack>\r\n);\r\n\r\nexport default Firmware;\r\n\r\nFirmware.propTypes = {\r\n  version: PropTypes.string.isRequired,\r\n};\r\n","/*\r\n  Author: André Kreienbring\r\n  Displays the brightness value sent with a 'NotifyFullStatus' websocket message.\r\n*/\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { createUUID } from 'src/utils/general';\r\n\r\nimport Iconify from 'src/components/iconify';\r\n\r\n/**\r\n  Component that displays the brighness value in percentage\r\n  @param {object} brightness The brightness property of a 'NotifyFullStatus' websocket message.\r\n*/\r\nconst Brightness = ({ brightness }) => (\r\n  <Stack\r\n    direction=\"row\"\r\n    justifyContent=\"flex-start\"\r\n    alignItems=\"center\"\r\n    spacing={0.5}\r\n    key={createUUID()}\r\n  >\r\n    <Iconify icon=\"subway:black-white\" width={18} height={18} key={createUUID()} />\r\n    <Typography variant=\"caption\" key={createUUID()}>\r\n      {brightness}%\r\n    </Typography>\r\n  </Stack>\r\n);\r\n\r\nexport default Brightness;\r\n\r\nBrightness.propTypes = {\r\n  brightness: PropTypes.number,\r\n};\r\n","/*\r\n  Author: André Kreienbring\r\n  Displays system values sent with a 'NotifyFullStatus' websocket message.\r\n*/\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { createUUID } from 'src/utils/general';\r\n\r\nimport Iconify from 'src/components/iconify';\r\n\r\n/**\r\n  The values will be displayed in kb\r\n  @param {object} sys mandatory The sys property of a 'NotifyFullStatus' websocket message.\r\n*/\r\nconst SystemValues = ({ sys }) => (\r\n  <Stack\r\n    direction=\"row\"\r\n    justifyContent=\"flex-start\"\r\n    alignItems=\"center\"\r\n    spacing={0.5}\r\n    key={createUUID()}\r\n  >\r\n    <Iconify icon=\"material-symbols-light:sd\" sx={{ color: 'black' }} key={createUUID()} />\r\n    <Typography variant=\"caption\" key={createUUID()}>\r\n      {Math.round(Number(sys.ram_free) / 1024)} kb free\r\n    </Typography>\r\n    <Iconify icon=\"material-symbols:storage-rounded\" sx={{ color: 'black' }} key={createUUID()} />\r\n    <Typography variant=\"caption\" key={createUUID()}>\r\n      {Math.round(Number(sys.fs_free) / 1024)} kb free\r\n    </Typography>\r\n  </Stack>\r\n);\r\n\r\nexport default SystemValues;\r\n\r\nSystemValues.propTypes = {\r\n  sys: PropTypes.object.isRequired,\r\n};\r\n","/*\r\n  Author: André Kreienbring\r\n  Examines 'NotifyFullStatus', 'NotifyStatus' and 'NotifyEvent'\r\n  websocket messages on a device object.\r\n  The message was originally sent by a shelly device to the Shellybroker.\r\n  This component displays message properties that Shelly devicec promote as HTML\r\n  Example: System values or cloud status\r\n\r\n*/\r\n// see https://icon-sets.iconify.design/?category=General\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { createUUID } from 'src/utils/general';\r\nimport { getDeviceConsumption } from 'src/utils/device-consumption';\r\n\r\nimport Iconify from 'src/components/iconify';\r\n\r\nimport White from './display/white';\r\nimport Events from './display/events';\r\nimport Energy from './display/energy';\r\nimport Scripts from './display/scripts';\r\nimport Firmware from './display/firmware';\r\nimport Brightness from './display/brightness';\r\nimport SystemValues from './display/systemvalues';\r\n\r\n/**\r\n  Display the WS messages\r\n  @param {object} deviceName The name of the device that sent the message\r\n  @param {object} wsMessage A websocket message from the \r\n    wsmessages array of the device.\r\n*/\r\nconst Notifications = ({ deviceName, wsMessage }) => {\r\n  const { params } = wsMessage;\r\n  if (typeof params === 'undefined') return [];\r\n\r\n  const elements = [];\r\n  let deviceConsumption;\r\n\r\n  if (wsMessage.method !== 'NotifyEvent')\r\n    deviceConsumption = getDeviceConsumption(deviceName, params);\r\n\r\n  if (wsMessage.method === 'NotifyFullStatus') {\r\n    // Create HTML from NotifyFullStatus\r\n    if (typeof params?.sys !== 'undefined') {\r\n      elements.push(<SystemValues sys={params.sys} key={createUUID()} />);\r\n    }\r\n    if (typeof params?.cloud?.connected !== 'undefined') {\r\n      elements.push(\r\n        <Iconify\r\n          icon=\"material-symbols-light:cloud\"\r\n          sx={{ color: params.cloud.connected ? 'green' : 'black' }}\r\n          key={createUUID()}\r\n        />\r\n      );\r\n    }\r\n    if (typeof params?.sys?.available_updates?.stable?.version !== 'undefined') {\r\n      elements.push(\r\n        <Firmware version={params.sys.available_updates.stable.version} key={createUUID()} />\r\n      );\r\n    }\r\n    elements.push(<Scripts params={wsMessage.params} key={createUUID()} />);\r\n\r\n    if (deviceConsumption.hasSwitch)\r\n      elements.push(<Energy consume={deviceConsumption.totalPower} key={createUUID()} />);\r\n\r\n    if (typeof params['rgbw:0']?.brightness !== 'undefined') {\r\n      elements.push(<Brightness brightness={params['rgbw:0'].brightness} key={createUUID()} />);\r\n    }\r\n    if (typeof params['switch:0']?.brightness !== 'undefined') {\r\n      elements.push(<Brightness brightness={params['switch:0'].brightness} key={createUUID()} />);\r\n    }\r\n    if (typeof params['rgbw:0']?.white !== 'undefined') {\r\n      elements.push(<White white={params['rgbw:0'].white} key={createUUID()} />);\r\n    }\r\n    if (typeof params['switch:0']?.white !== 'undefined') {\r\n      elements.push(<White white={params['switch:0'].white} key={createUUID()} />);\r\n    }\r\n    if (typeof params['rgbw:0']?.rgb !== 'undefined') {\r\n      // rgb is an array with 3 values\r\n      const { rgb } = params['rgbw:0'];\r\n      const rgbcss = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\r\n      elements.push(\r\n        <Iconify icon=\"material-symbols:light-mode\" sx={{ color: rgbcss }} key={createUUID()} />\r\n      );\r\n    }\r\n  } else if (wsMessage.method === 'NotifyStatus') {\r\n    // Create HTML from NotifyStatus\r\n    if (deviceConsumption.hasSwitch)\r\n      elements.push(<Energy consume={deviceConsumption.totalPower} key={createUUID()} />);\r\n  } else if (wsMessage.method === 'NotifyEvent') {\r\n    // Create HTML from NotifyEvent\r\n    if (typeof params?.events !== 'undefined') {\r\n      elements.push(<Events events={params.events} key={createUUID()} />);\r\n    }\r\n  } else {\r\n    // method not supported\r\n    elements.push(<Iconify icon=\"ic:sharp-help\" sx={{ color: 'black' }} key={createUUID()} />);\r\n  }\r\n\r\n  return elements;\r\n};\r\n\r\nexport default Notifications;\r\n\r\nNotifications.propTypes = {\r\n  deviceName: PropTypes.string.isRequired,\r\n  wsMessage: PropTypes.object.isRequired,\r\n};\r\n","/*\r\n  Author: André Kreienbring\r\n  Displays the time of a websocket message.\r\n*/\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { createUUID } from 'src/utils/general';\r\nimport { fUnixTime } from 'src/utils/format-time';\r\n\r\n/**\r\n  @param {number} ts the unix time stamp send by a websocket message\r\n*/\r\nconst SystemTime = ({ ts }) => (\r\n  <Typography variant=\"subtitle2\" key={createUUID()}>\r\n    {fUnixTime(ts, 'HH:mm')}\r\n  </Typography>\r\n);\r\n\r\nexport default SystemTime;\r\n\r\nSystemTime.propTypes = {\r\n  ts: PropTypes.number.isRequired,\r\n};\r\n","/*\r\n  Author: André Kreienbring\r\n  Builds the list of wsmessages of a device shown besides a ShellyCard component.\r\n  \r\n*/\r\nimport PropTypes from 'prop-types';\r\nimport { memo, Fragment } from 'react';\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { createUUID } from 'src/utils/general';\r\n\r\nimport Notifications from './handler/notifcations';\r\nimport SystemTime from './handler/display/systemtime';\r\n\r\n/**\r\n  The 'wsmessages' object of a device has up to 3 keys (depends on the device)\r\n  - NotifyFullStatus\r\n  - NotifyStatus\r\n  - NotifyEvent\r\n  This components presents extracted values (with icons) from the raw JSON message that was received.\r\n\r\n  @param {string} deviceName mandatory The name of the device to \r\n    determine the handler of the wsmessages\r\n  @param {object} wsmessages mandatory The last websocket messages that were send from the shelly device\r\n    The key in the the object is the 'method' of the ws message. (NotifyFullStatus, NotifyStatus, NotifyEvent)\r\n*/\r\nconst WSMessageList = ({ deviceName, wsmessages }) => {\r\n  if (typeof wsmessages === 'undefined') return null;\r\n\r\n  const elements = Object.keys(wsmessages).map((key) => {\r\n    const wsMessage = wsmessages[key];\r\n\r\n    return (\r\n      <Fragment key={createUUID()}>\r\n        <Stack\r\n          direction=\"row\"\r\n          justifyContent=\"left\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n          key={createUUID()}\r\n        >\r\n          {typeof wsMessage?.params?.ts !== 'undefined' && (\r\n            <SystemTime ts={wsMessage.params.ts} key={createUUID()} />\r\n          )}\r\n          <Typography variant=\"subtitle2\" key={createUUID()}>\r\n            {key}\r\n          </Typography>\r\n          <Notifications deviceName={deviceName} wsMessage={wsMessage} key={createUUID()} />\r\n        </Stack>\r\n        <Typography variant=\"caption\" key={createUUID()}>\r\n          {JSON.stringify(wsMessage)}\r\n        </Typography>\r\n      </Fragment>\r\n    );\r\n  });\r\n\r\n  return elements;\r\n};\r\n\r\nexport default memo(WSMessageList);\r\n\r\nWSMessageList.propTypes = {\r\n  deviceName: PropTypes.string.isRequired,\r\n  wsmessages: PropTypes.object.isRequired,\r\n};\r\n","/*\r\n  Author: André Kreienbring\r\n  Builds the list of scripts of a device shown on a ShellyCard component.\r\n*/\r\nimport { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Link from '@mui/material/Link';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { createUUID } from 'src/utils/general';\r\n\r\nimport { ColorPreview } from 'src/components/color-utils';\r\n\r\nconst COLORS = ['#00AB55', '#D22B2B', '#000000'];\r\n\r\n/**\r\n  Before presenting the scripts of a device the array of scripts will be extented\r\n  to 3 scripts. Each indicating with colors if it's running, not running or not used (still available)\r\n  @param {string} deviceIP The IP of the device the scripts are existing on.\r\n  @param {boolean} deviceOnline True if the device in online\r\n  @param {array} scripts The scripts of the device\r\n*/\r\nconst ShellyScriptList = ({ deviceIP, deviceOnline, scripts }) => {\r\n  if (\r\n    typeof scripts === 'undefined' ||\r\n    scripts == null ||\r\n    typeof scripts[Symbol.iterator] !== 'function'\r\n  ) {\r\n    /*\r\n      if the device has no scripts at all, generate an array to\r\n      maintain the equal size of the cards\r\n    */\r\n    scripts = [\r\n      { name: 'n/a', colors: COLORS.slice(-1) },\r\n      { name: 'n/a', colors: COLORS.slice(-1) },\r\n      { name: 'n/a', colors: COLORS.slice(-1) },\r\n    ];\r\n  } else {\r\n    // extend to three scripts with colors indicating the status\r\n    scripts = [...scripts]; // new way to copy\r\n    for (let i = 0; i <= 2; i += 1) {\r\n      if (typeof scripts[i] === 'undefined') {\r\n        scripts.push({\r\n          name: 'n/a',\r\n          colors: COLORS.slice(-1),\r\n        });\r\n      } else {\r\n        scripts[i].colors =\r\n          scripts[i].running && deviceOnline ? COLORS.slice(0, 1) : COLORS.slice(1, 2);\r\n      }\r\n    }\r\n  }\r\n\r\n  return scripts.map((script, index) => (\r\n    <Fragment key={createUUID()}>\r\n      <Stack direction=\"row\" style={{ gap: 20 }} useFlexGap flexWrap=\"wrap\" key={createUUID()}>\r\n        <Link\r\n          href={\r\n            script.id !== 0\r\n              ? `http://${deviceIP}/#/script/${script.id}`\r\n              : `http://${deviceIP}/#/scripts`\r\n          }\r\n          target=\"_blank\"\r\n          color=\"inherit\"\r\n          underline=\"hover\"\r\n          variant=\"subtitle2\"\r\n          noWrap\r\n          sx={{ minWidth: 100 }}\r\n        >\r\n          <Typography key={createUUID()} noWrap variant=\"caption\">\r\n            {script.name}\r\n          </Typography>\r\n        </Link>\r\n        <ColorPreview key={createUUID()} colors={script.colors} sx={{ pt: '5px' }} />\r\n      </Stack>\r\n    </Fragment>\r\n  ));\r\n};\r\nexport default ShellyScriptList;\r\nShellyScriptList.propTypes = {\r\n  deviceIP: PropTypes.string.isRequired,\r\n  deviceOnline: PropTypes.bool.isRequired,\r\n  scripts: PropTypes.array.isRequired,\r\n};\r\n","/*\r\n  Author: André Kreienbring\r\n  Updates device values from a received websocket message\r\n*/\r\nimport isEqual from 'lodash/isEqual';\r\n\r\n/**\r\n  Checks a 'NotifyFullStatus' websocket message for changes that must be\r\n  applied to a device. (Script and Switch status);\r\n  @param {object} device That is evtl. changed by the data of the message.\r\n  @param {object} params The 'params' object of a 'NotifyFullStatus' message.\r\n  @return {object} The device if the device was changed. If it was not changed null is returned.\r\n*/\r\nexport default function updateDeviceValues(device, params) {\r\n  let isChanged = !device.online; // the device is obviosly online\r\n\r\n  if (typeof device.scripts !== 'undefined') {\r\n    /*\r\n      check the status of the scripts of the device.\r\n      Get the id from the device script and use the value\r\n      of the last NotifyFullStatus Event\r\n    */\r\n    let currentScript;\r\n    Object.values(device.scripts).forEach((script) => {\r\n      currentScript = params[`script:${script.id}`];\r\n\r\n      if (script.running !== currentScript.running) {\r\n        isChanged = true;\r\n        script.running = currentScript.running;\r\n      }\r\n    });\r\n  }\r\n\r\n  /*\r\n    check the status of the switches of the device.\r\n    Get the id from the device switch and use the value\r\n    of the last NotifyFullStatus Event ONLY if the timestamp is \r\n    younger than the last manual switching.\r\n  */\r\n  if (typeof device.switches !== 'undefined') {\r\n    let currentSwitch;\r\n    device.switches.forEach((aSwitch, index) => {\r\n      currentSwitch = params[`switch:${aSwitch.id}`] || params[`rgbw:${aSwitch.id}`];\r\n\r\n      // update the values of the switch if it was not altered before\r\n      const doUpdate = typeof aSwitch.ts === 'undefined' || params.ts * 1000 > aSwitch.ts;\r\n      if (typeof currentSwitch !== 'undefined' && doUpdate) {\r\n        if (aSwitch.output !== currentSwitch.output) {\r\n          isChanged = true;\r\n          aSwitch.output = currentSwitch.output;\r\n          console.log(\r\n            `Switch ${aSwitch.key} of device ${device.cname} output was set to ${aSwitch.output}`\r\n          );\r\n        }\r\n        if (aSwitch.brightness !== currentSwitch.brightness) {\r\n          isChanged = true;\r\n          aSwitch.brightness = currentSwitch.brightness;\r\n          console.log(\r\n            `Switch ${aSwitch.key} of device ${device.cname} brightness was set to ${aSwitch.brightness}`\r\n          );\r\n        }\r\n        if (aSwitch.white !== currentSwitch.white) {\r\n          isChanged = true;\r\n          aSwitch.white = currentSwitch.white;\r\n          console.log(\r\n            `Switch ${aSwitch.key} of device ${device.cname} white was set to ${aSwitch.white}`\r\n          );\r\n        }\r\n        if (!isEqual(aSwitch.rgb, currentSwitch.rgb)) {\r\n          isChanged = true;\r\n          aSwitch.rgb = currentSwitch.rgb;\r\n          console.log(\r\n            `Switch ${aSwitch.key} of device ${device.cname} rgb was set to ${aSwitch.rgb}`\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  return isChanged ? { ...device } : null;\r\n}\r\n","/*\r\n  Author: André Kreienbring\r\n  This component is shown on one of the tab panels of the shelly view.\r\n  Every device is presented in his own ShellyCard component.\r\n*/\r\nimport PropTypes from 'prop-types';\r\nimport { memo, useState, useEffect, useCallback } from 'react';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport { styled } from '@mui/material/styles';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\n\r\nimport { createUUID } from 'src/utils/general';\r\n\r\nimport { useShelly } from 'src/sccontext';\r\n\r\nimport Iconify from 'src/components/iconify';\r\nimport Shelly from 'src/components/shellies/shelly';\r\nimport LogList from 'src/components/shellies/loglist';\r\nimport ShellyKVSList from 'src/components/shellies/shelly-kvs-list';\r\nimport ShellyControls from 'src/components/shellies/shelly-controls';\r\nimport WSMessageList from 'src/components/shellies/shelly-wsmessagelist';\r\nimport ShellyScriptList from 'src/components/shellies/shelly-script-list';\r\n\r\nimport updateDeviceValues from 'src/sections/shellies/view/update-device-values';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ExpandKVS = styled((props) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n  marginLeft: 'auto',\r\n  transition: theme.transitions.create('transform', {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\n/**\r\n  ShellyCard shows an image of a Shelly device. Device, script, KVS, WS and Log information is presented on a Card\r\n  and Boxes for the device.\r\n  The type of the selected tab panel is indicated by the type prop.\r\n  @param shelly The shelly device that will be rendered on the different tab panels\r\n  @param {string) type The current tab panel to show. Can be:\r\n   'sk': script/kvs \r\n   'ws': websocket messages from a shelly device\r\n   'log': log messages\r\n   'ctrl': controls of a shelly device\r\n*/\r\nconst ShellyCard = ({ shelly, type }) => {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [device, setDevice] = useState(shelly);\r\n  const [scripts, setScripts] = useState(shelly.scripts);\r\n  const [wsmessages, setWSmessages] = useState(shelly.wsmessages);\r\n  const [kvs, setKVS] = useState(shelly.kvs);\r\n  const { subscribe, unsubscribe, send } = useShelly();\r\n\r\n  /**\r\n    Will be called when an updated device was received via websocket from shellybroker.\r\n    Depending on the type of the update, some state will be set.\r\n    @param {object} msg The message with a 'ShellyUpdate' event.\r\n   */\r\n  const handleDeviceUpdate = useCallback(\r\n    (msg) => {\r\n      const updateType = msg.type;\r\n      const wsDevice = msg.data.device;\r\n\r\n      switch (updateType) {\r\n        case 'script':\r\n          /*\r\n            If a script is updated then it it either running or not\r\n            This is indicated by a shelly sript sending the information to the SetScript entpoint\r\n            of the shelly broker.\r\n          */\r\n          setScripts((prevScripts) => wsDevice.scripts);\r\n          break;\r\n        case 'kvs':\r\n          /*\r\n            If a KVS value is updated then a shelly script has send the information \r\n            to the SetKVS entpoint of the shelly broker.\r\n          */\r\n          setKVS((prevKVS) => wsDevice.kvs);\r\n          break;\r\n        case 'log':\r\n          /*\r\n            If a scripts log is updated then the log was received via UDP and forwarded\r\n            by the shelly broker.\r\n          */\r\n          setScripts((prevScripts) => wsDevice.scripts);\r\n          // setDevice(wsDevice);\r\n          break;\r\n        case 'ws': {\r\n          /*\r\n            If the wsmessages were updated then the message was send by the shelly device.\r\n            (received via outbound websocket and forwarded by the shelly broker.\r\n            The 'NotifiyFullStatus message also has information over scripts running or not\r\n            and switches with their outputs on or not.\r\n            So it can (additional to the type=script update) also be used to update the script status\r\n            and to determine the switch status.\r\n          */\r\n          const params = wsDevice?.wsmessages?.NotifyFullStatus?.params;\r\n          /*\r\n            Get script and switch values from the 'NotifyFullStatus. When the wsDevice was\r\n            altered setDevice is called.\r\n          */\r\n          if (typeof params !== 'undefined') {\r\n            const updatedDevice = updateDeviceValues(device, params);\r\n            if (updatedDevice !== null) {\r\n              setDevice((prevDevice) => updatedDevice);\r\n            }\r\n          }\r\n          setWSmessages((prevWSmessages) => wsDevice.wsmessages);\r\n          break;\r\n        }\r\n        default:\r\n          /*\r\n            type = device  \r\n            If a device is updated then the shelly is online or not\r\n            This is triggered by a shelly script sending the information to the SetDevice entpoint\r\n            of the shelly broker or if wshandler has reloaded a device\r\n          */\r\n          setDevice((prevDevice) => wsDevice);\r\n      }\r\n    },\r\n    [device]\r\n  );\r\n\r\n  // --------------------- Websocket Implementation BEGIN----------------\r\n  /*\r\n    After creation of the page the websocket clients 'subscribes' to the shellybroker websocket server\r\n    Further updates on single devices are received and handled accordingly.\r\n  */\r\n  useEffect(() => {\r\n    // don't subcribe to the ws server, if the device is not capable of sending updates\r\n    if (shelly.gen === 0) return;\r\n\r\n    subscribe(\r\n      {\r\n        subscriptionID: shelly.id,\r\n        callback: handleDeviceUpdate,\r\n        all: false,\r\n      },\r\n      ['ShellyUpdate']\r\n    );\r\n\r\n    /*\r\n      Clean up the websocket subscription when unmounting the component.\r\n     */\r\n    // eslint-disable-next-line consistent-return\r\n    return () => {\r\n      unsubscribe(shelly.id, ['ShellyUpdate']);\r\n    };\r\n  }, [shelly, subscribe, unsubscribe, handleDeviceUpdate]);\r\n  // --------------------- Websocket Implementation END------------------\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  /**\r\n    When a switch was clicked, this functions sends a message to\r\n    the WS server. The server will then call the rpc method / websocket to \r\n    switch the switch.\r\n    @param {object} aSwitch The switch that was clicked on.\r\n  */\r\n  const handleSwitchToggle = (aSwitch) => {\r\n    // add a timestamp to prevent sync problems with 'NotifyFullStatus'\r\n    aSwitch.ts = Date.now();\r\n\r\n    send({\r\n      event: `toggleSwitch`,\r\n      data: {\r\n        name: 'Shelly Device',\r\n        message: `${shelly.cname} wants to toggle a switch`,\r\n        switch: aSwitch,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n    When a switch was altered, this functions sends a message to\r\n    the WS server. The server will then call the rpc method / websocket to \r\n    set the switch.\r\n    @param {object} aSwitch The switch that was clicked on.\r\n  */\r\n  const handleSwitchSet = (aSwitch) => {\r\n    // add a timestamp to prevent sync problems with 'NotifyFullStatus'\r\n    aSwitch.ts = Date.now();\r\n\r\n    if (typeof aSwitch.rgb !== 'undefined' && !(aSwitch.rgb instanceof Array)) {\r\n      // convert the current rgb value to an array\r\n      let arrRGB = aSwitch.rgb\r\n        .substring(aSwitch.rgb.indexOf('(') + 1, aSwitch.rgb.indexOf(')'))\r\n        .split(',');\r\n      arrRGB = arrRGB.map((val) => Number(val));\r\n      aSwitch.rgb = arrRGB;\r\n    }\r\n\r\n    send({\r\n      event: `setSwitch`,\r\n      data: {\r\n        name: 'Shelly Device',\r\n        message: `${shelly.cname} wants to toggle a switch`,\r\n        switch: aSwitch,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card raised>\r\n      <Stack direction={type === 'ctrl' ? 'column' : 'row'}>\r\n        <Stack>\r\n          <Shelly device={device} handleSwitchToggle={handleSwitchToggle} />\r\n\r\n          {type === 'sk' && (\r\n            <>\r\n              <CardContent sx={{ minWidth: 200, pt: 0 }}>\r\n                <Stack justifyContent=\"left\" alignItems=\"flex-start\">\r\n                  <ShellyScriptList\r\n                    deviceIP={device.ip}\r\n                    deviceOnline={device.online}\r\n                    scripts={scripts}\r\n                  />\r\n                </Stack>\r\n              </CardContent>\r\n              <CardActions disableSpacing>\r\n                <IconButton\r\n                  href={`http://${device.ip}/#/key-value-store`}\r\n                  target=\"_blank\"\r\n                  aria-label=\"show KVS entries\"\r\n                >\r\n                  <Iconify\r\n                    icon=\"material-symbols:storage-rounded\"\r\n                    sx={{ color: device?.kvs?.length === 0 ? 'grey' : 'green' }}\r\n                    key={createUUID()}\r\n                  />\r\n                </IconButton>\r\n                <ExpandKVS\r\n                  disabled={device?.kvs?.length === 0}\r\n                  onClick={handleExpandClick}\r\n                  expand={expanded}\r\n                  aria-expanded={expanded}\r\n                  aria-label=\"show KVS entries\"\r\n                >\r\n                  <Iconify icon=\"mdi:expand-more\" sx={{ color: 'gray' }} key={createUUID()} />\r\n                </ExpandKVS>\r\n              </CardActions>\r\n              <Collapse in={expanded} timeout=\"auto\" mountOnEnter unmountOnExit>\r\n                <CardContent sx={{ pt: 0 }}>\r\n                  <Stack justifyContent=\"left\" alignItems=\"flex-start\">\r\n                    <ShellyKVSList kvs={kvs} />\r\n                  </Stack>\r\n                </CardContent>\r\n              </Collapse>\r\n            </>\r\n          )}\r\n        </Stack>\r\n\r\n        {type === 'ws' && (\r\n          <CardContent\r\n            sx={{\r\n              display: 'flex',\r\n              width: 1,\r\n              overflowX: 'auto',\r\n              overflowY: 'auto',\r\n            }}\r\n          >\r\n            <Stack>\r\n              <WSMessageList deviceName={device.name} wsmessages={wsmessages} />\r\n            </Stack>\r\n          </CardContent>\r\n        )}\r\n\r\n        {type === 'log' && (\r\n          <CardContent\r\n            sx={{\r\n              display: 'flex',\r\n              width: 1,\r\n              overflowX: 'auto',\r\n              overflowY: 'auto',\r\n            }}\r\n          >\r\n            <Stack>\r\n              <LogList scripts={scripts} />\r\n            </Stack>\r\n          </CardContent>\r\n        )}\r\n\r\n        {type === 'ctrl' && (\r\n          <Box\r\n            bgcolor=\"white\"\r\n            sx={{\r\n              minWidth: 220,\r\n              maxWidth: 220,\r\n              maxHeight: 180,\r\n              minHeight: 180,\r\n              mb: 2,\r\n              pl: 2,\r\n              pr: 2,\r\n            }}\r\n          >\r\n            <ShellyControls device={device} handleSwitchSet={handleSwitchSet} />\r\n          </Box>\r\n        )}\r\n      </Stack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default memo(ShellyCard);\r\n\r\nShellyCard.propTypes = {\r\n  shelly: PropTypes.object.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n};\r\n","/*\r\n  Author: André Kreienbring\r\n  When the selected Tab changes, this component rerenders the panels\r\n  and generates ShellyCard components.\r\n  Every device is presented in his own ShellyCard component.\r\n*/\r\nimport { memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport { createUUID } from 'src/utils/general';\r\n\r\nimport ShellyCard from 'src/components/shellies/shelly-card';\r\n\r\n/**\r\n  @param {integer} index The value of the selected Tab\r\n  @param {array} The array with the devices that will be shown on the TabPanel\r\n*/\r\nconst TabPanel = ({ index, devices }) => {\r\n  const types = ['sk', 'ctrl', 'log', 'ws'];\r\n  const type = types[index];\r\n\r\n  /*\r\n  xs - default\r\n  sm - min width 600px\r\n  md - min width 960px\r\n  lg - min width 1280px\r\n  xl - min width 1920px\r\n  */\r\n\r\n  const xs = type === 'sk' || type === 'ctrl' ? 12 : 12; // only 1 item in a row\r\n  const sm = type === 'sk' || type === 'ctrl' ? 4 : 12; // 3 items in a row for sk\r\n  const md = type === 'sk' || type === 'ctrl' ? 2 : 12; // 6 items in a row for sk\r\n  const lg = type === 'sk' || type === 'ctrl' ? 2 : 12; // 6 items in a row for sk\r\n  const xl = type === 'sk' || type === 'ctrl' ? 2 : 12;\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      size={{ xs: { xs }, sm: { sm }, md: { md }, lg: { lg }, xl: { xl } }}\r\n    >\r\n      {devices.map((device) => {\r\n        /*\r\n          Check for existing switch controls\r\n        */\r\n        const brightnessSwitch = device.switches.find(\r\n          (aSwitch) => typeof aSwitch.brightness !== 'undefined'\r\n        );\r\n        const whiteSwitch = device.switches.find((aSwitch) => typeof aSwitch.white !== 'undefined');\r\n        const rgbSwitch = device.switches.find((aSwitch) => typeof aSwitch.rgb !== 'undefined');\r\n\r\n        /*\r\n        don't show ws and logs if the device gen is 0\r\n        don't show logs if device gen < 2\r\n        assumption: devices with a gen of 0 don't have scripts, kvs, logs and outbound websockets\r\n        don't show controls if there are none\r\n       */\r\n        const showDevice = !!(\r\n          type === 'sk' ||\r\n          (type === 'ws' && device.gen > 0) ||\r\n          (type === 'log' && device.gen > 1) ||\r\n          (type === 'ctrl' && (brightnessSwitch || whiteSwitch || rgbSwitch))\r\n        );\r\n\r\n        if (showDevice)\r\n          return (\r\n            <Grid key={createUUID()} sx={{ minWidth: type === 'sk' || type === 'ctrl' ? 0 : 1 }}>\r\n              <ShellyCard shelly={device} key={device.id} type={type} />\r\n            </Grid>\r\n          );\r\n        return null;\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default memo(TabPanel);\r\n\r\nTabPanel.propTypes = {\r\n  // devices: PropTypes.array.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  devices: PropTypes.array,\r\n};\r\n","/*\n  Author: André Kreienbring\n  Component that represents the sort dialog\n*/\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport Menu from '@mui/material/Menu';\nimport Button from '@mui/material/Button';\nimport MenuItem from '@mui/material/MenuItem';\nimport { listClasses } from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\n\nimport Iconify from 'src/components/iconify';\n\n// ----------------------------------------------------------------------\n\nconst SORT_OPTIONS = [\n  { value: 'config', label: 'Config' },\n  { value: 'cname', label: 'Name' },\n  { value: 'name', label: 'Model' },\n  { value: 'gen', label: 'Gen' },\n];\n\n/**\n * Component that presents several options for sorting\n * the list of devices\n * @param {function} handleSort Called when the list must be sorted\n*/\nexport default function ShellySort({ handleSort }) {\n  const [open, setOpen] = useState(null);\n  const [selected, setSelected] = useState(0);\n  const { t } = useTranslation();\n\n  /*\n    Openening / Closing the sort dialog\n  */\n  const handleOpen = (e) => {\n    setOpen(e.currentTarget);\n  };\n  const handleClose = () => {\n    setOpen(null);\n  };\n\n  /**\n   * Called when a sort option was selected\n   * @param {object} e The event\n   * @param {number} index The index of the selected sort option\n   * @param {function} handleSort Used to handle the selected sort option\n   */\n  const onMenuItemClick = (e, index) => {\n    setOpen(null);\n    setSelected(index);\n    handleSort(SORT_OPTIONS[index]);\n  };\n\n  return (\n    <>\n      <Button\n        disableRipple\n        color=\"inherit\"\n        onClick={handleOpen}\n        endIcon={<Iconify icon={open ? 'eva:chevron-up-fill' : 'eva:chevron-down-fill'} />}\n      >\n        {t('_sortby_')}:&nbsp;\n        <Typography component=\"span\" variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n          {t(SORT_OPTIONS[selected].label)}\n        </Typography>\n      </Button>\n\n      <Menu\n        open={!!open}\n        anchorEl={open}\n        onClose={handleClose}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        slotProps={{\n          paper: {\n            sx: {\n              [`& .${listClasses.root}`]: {\n                p: 0,\n              },\n            },\n          },\n        }}\n      >\n        {SORT_OPTIONS.map((option, index) => (\n          <MenuItem\n            key={option.value}\n            onClick={(event) => onMenuItemClick(event, index)}\n            selected={index === selected}\n          >\n            {t(option.label)}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n}\n\nShellySort.propTypes = {\n  handleSort: PropTypes.func.isRequired,\n};\n","/*\n  Author: André Kreienbring\n  The components implements the filter dialog. After selecting divers filters\n  a function is called that resides in the ShellyView component and applies the filter.\n*/\nimport { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Drawer from '@mui/material/Drawer';\nimport Divider from '@mui/material/Divider';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormGroup from '@mui/material/FormGroup';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n\nimport Iconify from 'src/components/iconify';\nimport Scrollbar from 'src/components/scrollbar';\n\n/**\n  The component receives the following props:\n  @param {boolean} openFilter To determine if the dialog is shown or not\n  @param {function} onOpenFilter This will be called when the dialog was \n    opened to maintain the state in the parent component (ShellyView)\n  @param {function} onCloseFilter This will be called when the dialog was \n    closed to maintain the state in the parent component (ShellyView)\n  @param {object} filter An object that contains filter options and current states about their settings (checked or not)\n  @param {function} handleDeviceFilter Will be called when a filter was selected and must be committed to the parent.\n*/\nexport default function ShellyFilters({\n  openFilter,\n  onOpenFilter,\n  onCloseFilter,\n  filter,\n  handleDeviceFilter,\n}) {\n  const [mChecked, setMChecked] = useState([]);\n  const [gChecked, setGChecked] = useState([]);\n  const { t } = useTranslation();\n\n  // init the state of checked states for the filter options\n  useEffect(() => {\n    setMChecked(Array.from(filter.mChecked));\n    setGChecked(Array.from(filter.gChecked));\n  }, [filter]);\n\n  if (typeof filter === 'undefined') return null;\n\n  // if a model option is checked or unchecked this must be reflected in the state\n  const handleModelFilterChange = (position) => {\n    const updatedCheckedState = mChecked.map((checked, index) =>\n      index === position ? !checked : checked\n    );\n    setMChecked(updatedCheckedState);\n  };\n\n  // if a generation option is checked or unchecked this must be reflected in the state\n  const handleGenFilterChange = (position) => {\n    const updatedCheckedState = gChecked.map((checked, index) =>\n      index === position ? !checked : checked\n    );\n    setGChecked(updatedCheckedState);\n  };\n\n  // render the filter options for the available models\n  const renderModel = (\n    <Stack spacing={1}>\n      <Typography variant=\"subtitle2\">{t('Model')}</Typography>\n      <FormGroup>\n        {filter.models.map((model, index) => (\n          <FormControlLabel\n            key={model}\n            control={\n              <Checkbox\n                checked={!!mChecked[index]}\n                onChange={() => handleModelFilterChange(index)}\n              />\n            }\n            label={model}\n          />\n        ))}\n      </FormGroup>\n    </Stack>\n  );\n\n  // render the filter options for the available gererations\n  const renderGen = (\n    <Stack spacing={1}>\n      <Typography variant=\"subtitle2\">{t('Generation')}</Typography>\n      <FormGroup>\n        {filter.generations.map((gen, index) => (\n          <FormControlLabel\n            key={gen}\n            value={gen}\n            control={\n              <Checkbox checked={!!gChecked[index]} onChange={() => handleGenFilterChange(index)} />\n            }\n            label={gen !== '' ? `Gen ${gen}` : 'no Gen'}\n          />\n        ))}\n      </FormGroup>\n    </Stack>\n  );\n\n  // sets all checkboxes to unchecked\n  const clearAll = () => {\n    setMChecked(new Array(filter.mChecked.length).fill(false));\n    setGChecked(new Array(filter.gChecked.length).fill(false));\n  };\n\n  return (\n    <>\n      <Button\n        disableRipple\n        color={filter.isFilter ? 'success' : 'inherit'}\n        endIcon={<Iconify icon=\"ic:round-filter-list\" />}\n        onClick={onOpenFilter}\n      >\n        {t('Filters')}&nbsp;\n      </Button>\n\n      <Drawer\n        anchor=\"right\"\n        open={openFilter}\n        onClose={onCloseFilter}\n        slotProps={{\n          paper: {\n            sx: { width: 300, border: 'none', overflow: 'hidden' },\n          },\n        }}\n      >\n        <Stack\n          direction=\"row\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          sx={{ px: 1, py: 2 }}\n        >\n          <Typography variant=\"h6\" sx={{ ml: 1 }}>\n            {t('Filters')}\n          </Typography>\n          <IconButton onClick={onCloseFilter}>\n            <Iconify icon=\"eva:close-fill\" />\n          </IconButton>\n        </Stack>\n\n        <Divider />\n\n        <Scrollbar>\n          <Stack spacing={3} sx={{ p: 3 }}>\n            {renderModel}\n            {renderGen}\n          </Stack>\n        </Scrollbar>\n\n        <Box sx={{ p: 3 }}>\n          <Stack direction=\"row\" spacing={2}>\n            <Button\n              fullWidth\n              size=\"large\"\n              color=\"inherit\"\n              variant=\"outlined\"\n              startIcon={<Iconify icon=\"formkit:submit\" />}\n              onClick={(e) => handleDeviceFilter(mChecked, gChecked)}\n            >\n              {t('Submit')}\n            </Button>\n            <Button\n              fullWidth\n              size=\"large\"\n              color=\"inherit\"\n              variant=\"outlined\"\n              startIcon={<Iconify icon=\"ic:round-clear-all\" />}\n              onClick={(e) => clearAll()}\n            >\n              {t('Clear')}\n            </Button>\n          </Stack>\n        </Box>\n      </Drawer>\n    </>\n  );\n}\n","/*\n  Author: André Kreienbring\n  ShellyView is the view that presents all (in shellybroker) configured devices.\n  For every configured shelly device several values are presented on different tab panels.\n  It uses a Websocket client that receives either an array of devices or a single device (update)\n  As the filter and sort components are direct childs of this component, they will be maintained by this view.\n*/\nimport { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Box from '@mui/material/Box';\nimport Tab from '@mui/material/Tab';\nimport Tabs from '@mui/material/Tabs';\nimport Stack from '@mui/material/Stack';\nimport Container from '@mui/material/Container';\n\nimport { sortText, sortNumeric } from 'src/utils/sort-array';\n\nimport { useShelly } from 'src/sccontext';\n\nimport TabPanel from 'src/components/shellies/tabpanel';\nimport ViewTitle from 'src/components/shellies/view-title';\n\nimport ShellySort from '../shelly-sort';\nimport ShellyFilters from '../shelly-filters';\n\nexport default function ShelliesView() {\n  const { devices } = useShelly();\n  const [userDevices, setUserDevices] = useState(devices);\n  const [openFilter, setOpenFilter] = useState(false);\n  const [currentTabIndex, setCurrentTabIndex] = useState(0);\n  const [filter, setFilter] = useState({\n    models: [],\n    generations: [],\n    mChecked: [],\n    gChecked: [],\n    isFilter: false,\n  });\n  // const origDevices = useRef([]);\n  const { t } = useTranslation();\n\n  // --------------------- Websocket Implementation BEGIN----------------\n  /*\n    Updates the state and generates arrays for models and generation that will be used by \n    the filter function.\n  */\n  useEffect(() => {\n    if (devices.length !== 0) {\n      // Get available models and gens from the devices array\n      // these will be used for the checkboxes in the filter\n      const models = [];\n      const generations = [];\n\n      devices.forEach((device) => {\n        if (!models.includes(device.name)) models.push(device.name);\n        if (!generations.includes(device.gen)) generations.push(device.gen);\n      });\n\n      // init the filter checkboxes with false\n      const newFilter = {\n        models,\n        generations,\n        mChecked: new Array(models.length).fill(false),\n        gChecked: new Array(generations.length).fill(false),\n        isFilter: false,\n      };\n      setFilter(() => newFilter);\n    }\n  }, [devices]);\n  // --------------------- Websocket Implementation END------------------\n\n  /**\n   * Called when a tab panel was selected\n   * @param {object} e The event\n   * @param {number} tabIndex The index of the selected tab\n   */\n  const handleTabChange = (e, tabIndex) => {\n    setCurrentTabIndex(tabIndex);\n  };\n\n  /**\n   * Opens / closes the filter dialog\n   */\n  const handleOpenFilter = () => {\n    setOpenFilter(true);\n  };\n  const handleCloseFilter = () => {\n    setOpenFilter(false);\n  };\n\n  /**\n    This function is passed as a prop to the sort component and will be called\n    after a sort option was selected.\n    Dependent on the option the array of the devices will be sorted by the correct \n    comparison. If the selected option is 'config' then the original array will be restored.\n    This means that the devices are sorted in the order they were configured in Shellybroker.\n    @param {object} option The selected sort option\n  */\n  const handleSort = (option) => {\n    let sortedDevices;\n    switch (option.value) {\n      case 'config':\n        // restore the original array\n        setUserDevices((prevDevices) => devices);\n        break;\n      case 'gen':\n        // numeric sort\n        sortedDevices = [...userDevices];\n        sortedDevices = sortNumeric(sortedDevices, 'gen');\n        setUserDevices(() => sortedDevices);\n        break;\n      default:\n        sortedDevices = [...userDevices];\n        sortedDevices = sortText(sortedDevices, option.value);\n        setUserDevices(() => sortedDevices);\n    }\n  };\n\n  /**\n    Apply a filter to the original devices array.\n    @param {array} deviceFilters  An array that contains the filters to apply.\n    @returns {array} The filtered array of devices.\n  */\n  const filterDevices = (deviceFilters) => {\n    const filteredDevices = devices.filter((device) => {\n      for (const key in deviceFilters) {\n        if (device[key] === undefined || !deviceFilters[key].includes(device[key])) {\n          return false;\n        }\n      }\n      return true;\n    });\n    return filteredDevices;\n  };\n\n  /**\n    This function is passed as a prop to the filter component and will be called\n    after a filter options are selected and submitted.\n    Dependent on the checked filter options the array of the devices will be filtered. \n    For this purpose a filter object is created and the passed to the function that\n    finally filters the array.\n    After filtering (or resetting) the array of devices the state is changed to\n    rerender the view.\n    @param {array} mChecked Contains selected / unselected filter options for models\n    @param {array} gChecked Contains selected / unselected filter options for generation\n  */\n  const handleDeviceFilter = (mChecked, gChecked) => {\n    let isFilter = false;\n    const deviceFilters = {};\n    filter.models.forEach((model, index) => {\n      if (mChecked[index]) {\n        isFilter = true;\n        if (typeof deviceFilters.name === 'undefined') deviceFilters.name = [];\n        deviceFilters.name.push(model);\n      }\n    });\n\n    filter.generations.forEach((generation, index) => {\n      if (gChecked[index]) {\n        isFilter = true;\n        if (typeof deviceFilters.gen === 'undefined') deviceFilters.gen = [];\n        deviceFilters.gen.push(generation);\n      }\n    });\n\n    if (isFilter) {\n      setUserDevices(() => filterDevices(deviceFilters));\n    } else {\n      setUserDevices(() => devices);\n    }\n\n    // the following is necessary to show that a filter is active\n    // probably it would be enough to use another state for 'isFilter'\n    setFilter({\n      models: filter.models,\n      generations: filter.generations,\n      mChecked,\n      gChecked,\n      isFilter,\n    });\n\n    // close the filter window when the filter is applied\n    setOpenFilter(false);\n  };\n\n  return (\n    <Container>\n      <ViewTitle title=\"Shellies\" />\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        flexWrap=\"wrap-reverse\"\n        justifyContent=\"flex-end\"\n        sx={{ mb: 5 }}\n      >\n        <Stack direction=\"row\" spacing={1} flexShrink={0} sx={{ my: 1 }}>\n          <ShellyFilters\n            openFilter={openFilter}\n            onOpenFilter={handleOpenFilter}\n            onCloseFilter={handleCloseFilter}\n            filter={filter}\n            handleDeviceFilter={handleDeviceFilter}\n          />\n\n          <ShellySort handleSort={handleSort} />\n        </Stack>\n      </Stack>\n\n      <Box sx={{ pb: 2, borderBottom: 1, borderColor: 'divider' }}>\n        <Tabs\n          value={currentTabIndex}\n          onChange={handleTabChange}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"shelly tabs\"\n        >\n          <Tab label=\"Script / KVS\" />\n          <Tab label={t('Control')} />\n          <Tab label=\"Logs\" />\n          <Tab label=\"WS Inspector\" />\n        </Tabs>\n      </Box>\n      <TabPanel\n        index={currentTabIndex}\n        devices={typeof userDevices === 'undefined' ? devices : userDevices}\n        key=\"shelliesTab\"\n      />\n    </Container>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n\nimport { useShelly } from 'src/sccontext';\n\nimport { ShelliesView } from 'src/sections/shellies/view';\n\n// ----------------------------------------------------------------------\n\nexport default function ShelliesPage() {\n  const { user } = useShelly();\n\n  return (\n    <>\n      <Helmet>\n        <title> Shellies</title>\n      </Helmet>\n      {user ? <ShelliesView /> : null}\n    </>\n  );\n}\n","import Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n\nimport { RouterLink } from 'src/routes/components';\n\nimport Logo from 'src/components/logo';\n\n// ----------------------------------------------------------------------\n\nexport default function NotFoundView() {\n  const renderHeader = (\n    <Box\n      component=\"header\"\n      sx={{\n        top: 0,\n        left: 0,\n        width: 1,\n        lineHeight: 0,\n        position: 'fixed',\n        p: (theme) => ({ xs: theme.spacing(3, 3, 0), sm: theme.spacing(5, 5, 0) }),\n      }}\n    >\n      <Logo sx={{ mt: 3, ml: 4 }} />\n    </Box>\n  );\n\n  return (\n    <>\n      {renderHeader}\n\n      <Container>\n        <Box\n          sx={{\n            py: 12,\n            maxWidth: 480,\n            mx: 'auto',\n            display: 'flex',\n            minHeight: '100vh',\n            textAlign: 'center',\n            alignItems: 'center',\n            flexDirection: 'column',\n            justifyContent: 'center',\n          }}\n        >\n          <Typography variant=\"h3\" sx={{ mb: 3 }}>\n            Sorry, page not found!\n          </Typography>\n\n          <Typography sx={{ color: 'text.secondary' }}>\n            Sorry, we couldn’t find the page you’re looking for. Perhaps you’ve mistyped the URL? Be\n            sure to check your spelling.\n          </Typography>\n\n          <Box\n            component=\"img\"\n            src=\"/assets/illustrations/illustration_404.svg\"\n            sx={{\n              mx: 'auto',\n              height: 260,\n              my: { xs: 5, sm: 10 },\n            }}\n          />\n\n          <Button href=\"/\" size=\"large\" variant=\"contained\" component={RouterLink}>\n            Go to Home\n          </Button>\n        </Box>\n      </Container>\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n\nimport { NotFoundView } from 'src/sections/error';\n\n// ----------------------------------------------------------------------\n\nexport default function NotFoundPage() {\n  return (\n    <>\n      <Helmet>\n        <title> 404 Page Not Found </title>\n      </Helmet>\n\n      <NotFoundView />\n    </>\n  );\n}\n"],"file":"assets/index-CaX2bsxT.js"}