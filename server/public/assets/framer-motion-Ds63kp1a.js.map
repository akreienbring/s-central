{"version":3,"file":"framer-motion-Ds63kp1a.js","sources":["../../node_modules/framer-motion/node_modules/@emotion/memoize/dist/memoize.browser.esm.js","../../node_modules/framer-motion/node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js","../../node_modules/framer-motion/dist/framer-motion.cjs.js"],"sourcesContent":["function memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n","import memoize from '@emotion/memoize';\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar index = memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\nexport default index;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = require('tslib');\nvar React = require('react');\nvar heyListen = require('hey-listen');\nvar styleValueTypes = require('style-value-types');\nvar popmotion = require('popmotion');\nvar sync = require('framesync');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () {\n                        return e[k];\n                    }\n                });\n            }\n        });\n    }\n    n['default'] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nvar sync__default = /*#__PURE__*/_interopDefaultLegacy(sync);\n\nvar createDefinition = function (propNames) { return ({\n    isEnabled: function (props) { return propNames.some(function (name) { return !!props[name]; }); },\n}); };\nvar featureDefinitions = {\n    measureLayout: createDefinition([\n        \"layout\",\n        \"layoutId\",\n        \"drag\",\n        \"_layoutResetTransform\",\n    ]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    layoutAnimation: createDefinition([\"layout\", \"layoutId\"]),\n};\nfunction loadFeatures(features) {\n    for (var key in features) {\n        var Component = features[key];\n        if (Component !== null)\n            featureDefinitions[key].Component = Component;\n    }\n}\n\nvar LazyContext = React.createContext({ strict: false });\n\nvar featureNames = Object.keys(featureDefinitions);\nvar numFeatures = featureNames.length;\n/**\n * Load features via renderless components based on the provided MotionProps.\n */\nfunction useFeatures(props, visualElement, preloadedFeatures) {\n    var features = [];\n    var lazyContext = React.useContext(LazyContext);\n    if (!visualElement)\n        return null;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        lazyContext.strict) {\n        heyListen.invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n    }\n    for (var i = 0; i < numFeatures; i++) {\n        var name_1 = featureNames[i];\n        var _a = featureDefinitions[name_1], isEnabled = _a.isEnabled, Component = _a.Component;\n        /**\n         * It might be possible in the future to use this moment to\n         * dynamically request functionality. In initial tests this\n         * was producing a lot of duplication amongst bundles.\n         */\n        if (isEnabled(props) && Component) {\n            features.push(React__namespace.createElement(Component, tslib.__assign({ key: name_1 }, props, { visualElement: visualElement })));\n        }\n    }\n    return features;\n}\n\n/**\n * @public\n */\nvar MotionConfigContext = React.createContext({\n    transformPagePoint: function (p) { return p; },\n    isStatic: false,\n});\n\nvar MotionContext = React.createContext({});\nfunction useVisualElementContext() {\n    return React.useContext(MotionContext).visualElement;\n}\n\n/**\n * @public\n */\nvar PresenceContext = React.createContext(null);\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    var ref = React.useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    var context = React.useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    var isPresent = context.isPresent, onExitComplete = context.onExitComplete, register = context.register;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useOpaqueId when released in React\n    var id = useUniqueId();\n    React.useEffect(function () { return register(id); }, []);\n    var safeToRemove = function () { return onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete(id); };\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(React.useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\nvar counter = 0;\nvar incrementId = function () { return counter++; };\nvar useUniqueId = function () { return useConstant(incrementId); };\n\n/**\n * @internal\n */\nvar LayoutGroupContext = React.createContext(null);\n\nvar isBrowser = typeof window !== \"undefined\";\n\nvar useIsomorphicLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n\nfunction useLayoutId(_a) {\n    var layoutId = _a.layoutId;\n    var layoutGroupId = React.useContext(LayoutGroupContext);\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    var config = React.useContext(MotionConfigContext);\n    var lazyContext = React.useContext(LazyContext);\n    var parent = useVisualElementContext();\n    var presenceContext = React.useContext(PresenceContext);\n    var layoutId = useLayoutId(props);\n    var visualElementRef = React.useRef(undefined);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    if (!createVisualElement)\n        createVisualElement = lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState: visualState,\n            parent: parent,\n            props: tslib.__assign(tslib.__assign({}, props), { layoutId: layoutId }),\n            presenceId: presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id,\n            blockInitialAnimation: (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false,\n        });\n    }\n    var visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(function () {\n        if (!visualElement)\n            return;\n        visualElement.setProps(tslib.__assign(tslib.__assign(tslib.__assign({}, config), props), { layoutId: layoutId }));\n        visualElement.isPresent = isPresent(presenceContext);\n        visualElement.isPresenceRoot =\n            !parent || parent.presenceId !== (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id);\n        /**\n         * Fire a render to ensure the latest state is reflected on-screen.\n         */\n        visualElement.syncRender();\n    });\n    React.useEffect(function () {\n        var _a;\n        if (!visualElement)\n            return;\n        /**\n         * In a future refactor we can replace the features-as-components and\n         * have this loop through them all firing \"effect\" listeners\n         */\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.animateChanges();\n    });\n    useIsomorphicLayoutEffect(function () { return function () { return visualElement === null || visualElement === void 0 ? void 0 : visualElement.notifyUnmount(); }; }, []);\n    return visualElement;\n}\n\nfunction isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return React.useCallback(function (instance) {\n        var _a;\n        instance && ((_a = visualState.mount) === null || _a === void 0 ? void 0 : _a.call(visualState, instance));\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\n/**\n * Decides if the supplied variable is an array of variant labels\n */\nfunction isVariantLabels(v) {\n    return Array.isArray(v);\n}\n/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || isVariantLabels(v);\n}\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    var current = {};\n    visualElement.forEachValue(function (value, key) { return (current[key] = value.get()); });\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity$1(visualElement) {\n    var velocity = {};\n    visualElement.forEachValue(function (value, key) { return (velocity[key] = value.getVelocity()); });\n    return velocity;\n}\nfunction resolveVariantFromProps(props, definition, custom, currentValues, currentVelocity) {\n    var _a;\n    if (currentValues === void 0) { currentValues = {}; }\n    if (currentVelocity === void 0) { currentVelocity = {}; }\n    if (typeof definition === \"string\") {\n        definition = (_a = props.variants) === null || _a === void 0 ? void 0 : _a[definition];\n    }\n    return typeof definition === \"function\"\n        ? definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity)\n        : definition;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    var props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== null && custom !== void 0 ? custom : props.custom, getCurrent(visualElement), getVelocity$1(visualElement));\n}\nfunction checkIfControllingVariants(props) {\n    var _a;\n    return (typeof ((_a = props.animate) === null || _a === void 0 ? void 0 : _a.start) === \"function\" ||\n        isVariantLabel(props.initial) ||\n        isVariantLabel(props.animate) ||\n        isVariantLabel(props.whileHover) ||\n        isVariantLabel(props.whileDrag) ||\n        isVariantLabel(props.whileTap) ||\n        isVariantLabel(props.whileFocus) ||\n        isVariantLabel(props.exit));\n}\nfunction checkIfVariantNode(props) {\n    return Boolean(checkIfControllingVariants(props) || props.variants);\n}\n\nfunction getCurrentTreeVariants(props, context) {\n    if (checkIfControllingVariants(props)) {\n        var initial = props.initial, animate = props.animate;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nfunction useCreateMotionContext(props, isStatic) {\n    var _a = getCurrentTreeVariants(props, React.useContext(MotionContext)), initial = _a.initial, animate = _a.animate;\n    return React.useMemo(function () { return ({ initial: initial, animate: animate }); }, \n    /**\n     * Only break memoisation in static mode\n     */\n    isStatic\n        ? [\n            variantLabelsAsDependency(initial),\n            variantLabelsAsDependency(animate),\n        ]\n        : []);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n *\n * @internal\n */\nfunction createMotionComponent(_a) {\n    var preloadedFeatures = _a.preloadedFeatures, createVisualElement = _a.createVisualElement, useRender = _a.useRender, useVisualState = _a.useVisualState, Component = _a.Component;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we're rendering in a static environment, we only visually update the component\n         * as a result of a React-rerender rather than interactions or animations. This\n         * means we don't need to load additional memory structures like VisualElement,\n         * or any gesture/animation features.\n         */\n        var isStatic = React.useContext(MotionConfigContext).isStatic;\n        var features = null;\n        /**\n         * Create the tree context. This is memoized and will only trigger renders\n         * when the current tree variant changes in static mode.\n         */\n        var context = useCreateMotionContext(props, isStatic);\n        /**\n         *\n         */\n        var visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, props, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             *\n             * TODO: The intention is to move these away from a React-centric to a\n             * VisualElement-centric lifecycle scheme.\n             */\n            features = useFeatures(props, context.visualElement, preloadedFeatures);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React__namespace.createElement(React__namespace.Fragment, null,\n            React__namespace.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic)),\n            features));\n    }\n    return React.forwardRef(MotionComponent);\n}\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig) {\n        if (customMotionComponentConfig === void 0) { customMotionComponentConfig = {}; }\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    var componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: function (_target, key) {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\n/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nvar lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"svg\",\n    \"switch\",\n    \"symbol\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nvar valueScaleCorrection = {};\n/**\n * @internal\n */\nfunction addScaleCorrection(correctors) {\n    for (var key in correctors) {\n        valueScaleCorrection[key] = correctors[key];\n    }\n}\n\n/**\n * A list of all transformable axes. We'll use this list to generated a version\n * of each axes for each transform.\n */\nvar transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * An ordered array of each transformable value. By default, transform values\n * will be sorted to this order.\n */\nvar order = [\"translate\", \"scale\", \"rotate\", \"skew\"];\n/**\n * Generate a list of every possible transform key.\n */\nvar transformProps = [\"transformPerspective\", \"x\", \"y\", \"z\"];\norder.forEach(function (operationKey) {\n    return transformAxes.forEach(function (axesKey) {\n        return transformProps.push(operationKey + axesKey);\n    });\n});\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nfunction sortTransformProps(a, b) {\n    return transformProps.indexOf(a) - transformProps.indexOf(b);\n}\n/**\n * A quick lookup for transform props.\n */\nvar transformPropSet = new Set(transformProps);\nfunction isTransformProp(key) {\n    return transformPropSet.has(key);\n}\n/**\n * A quick lookup for transform origin props\n */\nvar transformOriginProps = new Set([\"originX\", \"originY\", \"originZ\"]);\nfunction isTransformOriginProp(key) {\n    return transformOriginProps.has(key);\n}\n\nfunction isForcedMotionValue(key, _a) {\n    var layout = _a.layout, layoutId = _a.layoutId;\n    return (isTransformProp(key) ||\n        isTransformOriginProp(key) ||\n        ((layout || layoutId !== undefined) &&\n            (!!valueScaleCorrection[key] || key === \"opacity\")));\n}\n\nvar isMotionValue = function (value) {\n    return value !== null && typeof value === \"object\" && value.getVelocity;\n};\n\nvar translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(_a, _b, transformIsDefault, transformTemplate) {\n    var transform = _a.transform, transformKeys = _a.transformKeys;\n    var _c = _b.enableHardwareAcceleration, enableHardwareAcceleration = _c === void 0 ? true : _c, _d = _b.allowTransformNone, allowTransformNone = _d === void 0 ? true : _d;\n    // The transform string we're going to build into.\n    var transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Track whether the defined transform has a defined z so we don't add a\n    // second to enable hardware acceleration\n    var transformHasZ = false;\n    // Loop over each transform and build them into transformString\n    var numTransformKeys = transformKeys.length;\n    for (var i = 0; i < numTransformKeys; i++) {\n        var key = transformKeys[i];\n        transformString += (translateAlias[key] || key) + \"(\" + transform[key] + \") \";\n        if (key === \"z\")\n            transformHasZ = true;\n    }\n    if (!transformHasZ && enableHardwareAcceleration) {\n        transformString += \"translateZ(0)\";\n    }\n    else {\n        transformString = transformString.trim();\n    }\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n/**\n * Build a transformOrigin style. Uses the same defaults as the browser for\n * undefined origins.\n */\nfunction buildTransformOrigin(_a) {\n    var _b = _a.originX, originX = _b === void 0 ? \"50%\" : _b, _c = _a.originY, originY = _c === void 0 ? \"50%\" : _c, _d = _a.originZ, originZ = _d === void 0 ? 0 : _d;\n    return originX + \" \" + originY + \" \" + originZ;\n}\n\n/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable$1(key) {\n    return key.startsWith(\"--\");\n}\n\n/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nvar getValueAsType = function (value, type) {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nvar int = tslib.__assign(tslib.__assign({}, styleValueTypes.number), { transform: Math.round });\n\nvar numberValueTypes = {\n    // Border props\n    borderWidth: styleValueTypes.px,\n    borderTopWidth: styleValueTypes.px,\n    borderRightWidth: styleValueTypes.px,\n    borderBottomWidth: styleValueTypes.px,\n    borderLeftWidth: styleValueTypes.px,\n    borderRadius: styleValueTypes.px,\n    radius: styleValueTypes.px,\n    borderTopLeftRadius: styleValueTypes.px,\n    borderTopRightRadius: styleValueTypes.px,\n    borderBottomRightRadius: styleValueTypes.px,\n    borderBottomLeftRadius: styleValueTypes.px,\n    // Positioning props\n    width: styleValueTypes.px,\n    maxWidth: styleValueTypes.px,\n    height: styleValueTypes.px,\n    maxHeight: styleValueTypes.px,\n    size: styleValueTypes.px,\n    top: styleValueTypes.px,\n    right: styleValueTypes.px,\n    bottom: styleValueTypes.px,\n    left: styleValueTypes.px,\n    // Spacing props\n    padding: styleValueTypes.px,\n    paddingTop: styleValueTypes.px,\n    paddingRight: styleValueTypes.px,\n    paddingBottom: styleValueTypes.px,\n    paddingLeft: styleValueTypes.px,\n    margin: styleValueTypes.px,\n    marginTop: styleValueTypes.px,\n    marginRight: styleValueTypes.px,\n    marginBottom: styleValueTypes.px,\n    marginLeft: styleValueTypes.px,\n    // Transform props\n    rotate: styleValueTypes.degrees,\n    rotateX: styleValueTypes.degrees,\n    rotateY: styleValueTypes.degrees,\n    rotateZ: styleValueTypes.degrees,\n    scale: styleValueTypes.scale,\n    scaleX: styleValueTypes.scale,\n    scaleY: styleValueTypes.scale,\n    scaleZ: styleValueTypes.scale,\n    skew: styleValueTypes.degrees,\n    skewX: styleValueTypes.degrees,\n    skewY: styleValueTypes.degrees,\n    distance: styleValueTypes.px,\n    translateX: styleValueTypes.px,\n    translateY: styleValueTypes.px,\n    translateZ: styleValueTypes.px,\n    x: styleValueTypes.px,\n    y: styleValueTypes.px,\n    z: styleValueTypes.px,\n    perspective: styleValueTypes.px,\n    transformPerspective: styleValueTypes.px,\n    opacity: styleValueTypes.alpha,\n    originX: styleValueTypes.progressPercentage,\n    originY: styleValueTypes.progressPercentage,\n    originZ: styleValueTypes.px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: styleValueTypes.alpha,\n    strokeOpacity: styleValueTypes.alpha,\n    numOctaves: int,\n};\n\nfunction buildHTMLStyles(state, latestValues, projection, layoutState, options, transformTemplate, buildProjectionTransform, buildProjectionTransformOrigin) {\n    var _a;\n    var style = state.style, vars = state.vars, transform = state.transform, transformKeys = state.transformKeys, transformOrigin = state.transformOrigin;\n    // Empty the transformKeys array. As we're throwing out refs to its items\n    // this might not be as cheap as suspected. Maybe using the array as a buffer\n    // with a manual incrementation would be better.\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    var hasTransform = false;\n    var hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    var transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (var key in latestValues) {\n        var value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable$1(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        var valueType = numberValueTypes[key];\n        var valueAsType = getValueAsType(value, valueType);\n        if (isTransformProp(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0))\n                transformIsNone = false;\n        }\n        else if (isTransformOriginProp(key)) {\n            transformOrigin[key] = valueAsType;\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n        }\n        else {\n            /**\n             * If layout projection is on, and we need to perform scale correction for this\n             * value type, perform it.\n             */\n            if ((projection === null || projection === void 0 ? void 0 : projection.isHydrated) &&\n                (layoutState === null || layoutState === void 0 ? void 0 : layoutState.isHydrated) &&\n                valueScaleCorrection[key]) {\n                var correctedValue = valueScaleCorrection[key].process(value, layoutState, projection);\n                /**\n                 * Scale-correctable values can define a number of other values to break\n                 * down into. For instance borderRadius needs applying to borderBottomLeftRadius etc\n                 */\n                var applyTo = valueScaleCorrection[key].applyTo;\n                if (applyTo) {\n                    var num = applyTo.length;\n                    for (var i = 0; i < num; i++) {\n                        style[applyTo[i]] = correctedValue;\n                    }\n                }\n                else {\n                    style[key] = correctedValue;\n                }\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (layoutState &&\n        projection &&\n        buildProjectionTransform &&\n        buildProjectionTransformOrigin) {\n        style.transform = buildProjectionTransform(layoutState.deltaFinal, layoutState.treeScale, hasTransform ? transform : undefined);\n        if (transformTemplate) {\n            style.transform = transformTemplate(transform, style.transform);\n        }\n        style.transformOrigin = buildProjectionTransformOrigin(layoutState);\n    }\n    else {\n        if (hasTransform) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        if (hasTransformOrigin) {\n            style.transformOrigin = buildTransformOrigin(transformOrigin);\n        }\n    }\n}\n\nvar createHtmlRenderState = function () { return ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n}); };\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (var key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues(_a, visualState, isStatic) {\n    var transformTemplate = _a.transformTemplate;\n    return React.useMemo(function () {\n        var state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, undefined, undefined, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        var vars = state.vars, style = state.style;\n        return tslib.__assign(tslib.__assign({}, vars), style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    var styleProp = props.style || {};\n    var style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    if (props.transformValues) {\n        style = props.transformValues(style);\n    }\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    var htmlProps = {};\n    var style = useStyle(props, visualState, isStatic);\n    if (Boolean(props.drag)) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect = style.WebkitUserSelect = style.WebkitTouchCallout =\n            \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : \"pan-\" + (props.drag === \"x\" ? \"y\" : \"x\");\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\n/**\n * A list of all valid MotionProps.\n *\n * @internalremarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nvar validMotionProps = new Set([\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"style\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"_layoutResetTransform\",\n    \"onLayoutAnimationComplete\",\n    \"onViewportBoxUpdate\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"whileDrag\",\n    \"onPan\",\n    \"onPanStart\",\n    \"onPanEnd\",\n    \"onPanSessionStart\",\n    \"onTap\",\n    \"onTapStart\",\n    \"onTapCancel\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"whileFocus\",\n    \"whileTap\",\n    \"whileHover\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nvar shouldForward = function (key) { return !isValidMotionProp(key); };\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    var emotionIsPropValid_1 = require(\"@emotion/is-prop-valid\").default;\n    shouldForward = function (key) {\n        // Handle events explicitly as Emotion validates them all as true\n        if (key.startsWith(\"on\")) {\n            return !isValidMotionProp(key);\n        }\n        else {\n            return emotionIsPropValid_1(key);\n        }\n    };\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    var filteredProps = {};\n    for (var key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nfunction calcOrigin$1(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : styleValueTypes.px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    var pxOriginX = calcOrigin$1(originX, dimensions.x, dimensions.width);\n    var pxOriginY = calcOrigin$1(originY, dimensions.y, dimensions.height);\n    return pxOriginX + \" \" + pxOriginY;\n}\n\n// Convert a progress 0-1 to a pixels value based on the provided length\nvar progressToPixels = function (progress, length) {\n    return styleValueTypes.px.transform(progress * length);\n};\nvar dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nvar camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, totalLength, length, spacing, offset, useDashCase) {\n    if (spacing === void 0) { spacing = 1; }\n    if (offset === void 0) { offset = 0; }\n    if (useDashCase === void 0) { useDashCase = true; }\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    var keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = progressToPixels(-offset, totalLength);\n    // Build the dash array\n    var pathLength = progressToPixels(length, totalLength);\n    var pathSpacing = progressToPixels(spacing, totalLength);\n    attrs[keys.array] = pathLength + \" \" + pathSpacing;\n}\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, _a, projection, layoutState, options, transformTemplate, buildProjectionTransform, buildProjectionTransformOrigin) {\n    var attrX = _a.attrX, attrY = _a.attrY, originX = _a.originX, originY = _a.originY, pathLength = _a.pathLength, _b = _a.pathSpacing, pathSpacing = _b === void 0 ? 1 : _b, _c = _a.pathOffset, pathOffset = _c === void 0 ? 0 : _c, \n    // This is object creation, which we try to avoid per-frame.\n    latest = tslib.__rest(_a, [\"attrX\", \"attrY\", \"originX\", \"originY\", \"pathLength\", \"pathSpacing\", \"pathOffset\"]);\n    buildHTMLStyles(state, latest, projection, layoutState, options, transformTemplate, buildProjectionTransform, buildProjectionTransformOrigin);\n    state.attrs = state.style;\n    state.style = {};\n    var attrs = state.attrs, style = state.style, dimensions = state.dimensions, totalPathLength = state.totalPathLength;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been measured\n    if (totalPathLength !== undefined && pathLength !== undefined) {\n        buildSVGPath(attrs, totalPathLength, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nvar createSvgRenderState = function () { return (tslib.__assign(tslib.__assign({}, createHtmlRenderState()), { attrs: {} })); };\n\nfunction useSVGProps(props, visualState) {\n    var visualProps = React.useMemo(function () {\n        var state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, undefined, undefined, { enableHardwareAcceleration: false }, props.transformTemplate);\n        return tslib.__assign(tslib.__assign({}, state.attrs), { style: tslib.__assign({}, state.style) });\n    }, [visualState]);\n    if (props.style) {\n        var rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = tslib.__assign(tslib.__assign({}, rawStyles), visualProps.style);\n    }\n    return visualProps;\n}\n\nfunction createUseRender(forwardMotionProps) {\n    if (forwardMotionProps === void 0) { forwardMotionProps = false; }\n    var useRender = function (Component, props, ref, _a, isStatic) {\n        var latestValues = _a.latestValues;\n        var useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        var visualProps = useVisualProps(props, latestValues, isStatic);\n        var filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        var elementProps = tslib.__assign(tslib.__assign(tslib.__assign({}, filteredProps), visualProps), { ref: ref });\n        return React.createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nvar CAMEL_CASE_PATTERN = /([a-z])([A-Z])/g;\nvar REPLACE_TEMPLATE = \"$1-$2\";\n/**\n * Convert camelCase to dash-case properties.\n */\nvar camelToDash = function (str) {\n    return str.replace(CAMEL_CASE_PATTERN, REPLACE_TEMPLATE).toLowerCase();\n};\n\nfunction renderHTML(element, _a) {\n    var style = _a.style, vars = _a.vars;\n    // Directly assign style into the Element's style prop. In tests Object.assign is the\n    // fastest way to assign styles.\n    Object.assign(element.style, style);\n    // Loop over any CSS variables and assign those.\n    for (var key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\n/**\n * A set of attribute names that are always read/written as camel case.\n */\nvar camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n]);\n\nfunction renderSVG(element, renderState) {\n    renderHTML(element, renderState);\n    for (var key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nfunction scrapeMotionValuesFromProps$1(props) {\n    var style = props.style;\n    var newValues = {};\n    for (var key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nfunction scrapeMotionValuesFromProps(props) {\n    var newValues = scrapeMotionValuesFromProps$1(props);\n    for (var key in props) {\n        if (isMotionValue(props[key])) {\n            var targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nfunction isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nvar isKeyframesTarget = function (v) {\n    return Array.isArray(v);\n};\n\nvar isCustomValue = function (v) {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nvar resolveFinalValueInKeyframes = function (v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n *\n * @internal\n */\nfunction resolveMotionValue(value) {\n    var unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nfunction makeState(_a, props, context, presenceContext) {\n    var scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps, createRenderState = _a.createRenderState, onMount = _a.onMount;\n    var state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = function (instance) { return onMount(props, instance, state); };\n    }\n    return state;\n}\nvar makeUseVisualState = function (config) { return function (props, isStatic) {\n    var context = React.useContext(MotionContext);\n    var presenceContext = React.useContext(PresenceContext);\n    return isStatic\n        ? makeState(config, props, context, presenceContext)\n        : useConstant(function () { return makeState(config, props, context, presenceContext); });\n}; };\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    var values = {};\n    var blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;\n    var motionValues = scrapeMotionValues(props);\n    for (var key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    var initial = props.initial, animate = props.animate;\n    var isControllingVariants = checkIfControllingVariants(props);\n    var isVariantNode = checkIfVariantNode(props);\n    if (context &&\n        isVariantNode &&\n        !isControllingVariants &&\n        props.inherit !== false) {\n        initial !== null && initial !== void 0 ? initial : (initial = context.initial);\n        animate !== null && animate !== void 0 ? animate : (animate = context.animate);\n    }\n    var variantToSet = blockInitialAnimation || initial === false ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        var list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach(function (definition) {\n            var resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            var transitionEnd = resolved.transitionEnd; resolved.transition; var target = tslib.__rest(resolved, [\"transitionEnd\", \"transition\"]);\n            for (var key in target)\n                values[key] = target[key];\n            for (var key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nvar svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: function (props, instance, _a) {\n            var renderState = _a.renderState, latestValues = _a.latestValues;\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            if (isPath(instance)) {\n                renderState.totalPathLength = instance.getTotalLength();\n            }\n            buildSVGAttrs(renderState, latestValues, undefined, undefined, { enableHardwareAcceleration: false }, props.transformTemplate);\n            // TODO: Replace with direct assignment\n            renderSVG(instance, renderState);\n        },\n    }),\n};\nfunction isPath(element) {\n    return element.tagName === \"path\";\n}\n\nvar htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nfunction createDomMotionConfig(Component, _a, preloadedFeatures, createVisualElement) {\n    var _b = _a.forwardMotionProps, forwardMotionProps = _b === void 0 ? false : _b;\n    var baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return tslib.__assign(tslib.__assign({}, baseConfig), { preloadedFeatures: preloadedFeatures, useRender: createUseRender(forwardMotionProps), createVisualElement: createVisualElement,\n        Component: Component });\n}\n\nvar AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nfunction addDomEvent(target, eventName, handler, options) {\n    target.addEventListener(eventName, handler, options);\n    return function () { return target.removeEventListener(eventName, handler, options); };\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    React.useEffect(function () {\n        var element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture(_a) {\n    var whileFocus = _a.whileFocus, visualElement = _a.visualElement;\n    var onFocus = function () {\n        var _a;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Focus, true);\n    };\n    var onBlur = function () {\n        var _a;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nfunction isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    var hasTouches = !!event.touches;\n    return hasTouches;\n}\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return function (event) {\n        var isMouseEvent = event instanceof MouseEvent;\n        var isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nvar defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    var primaryTouch = e.touches[0] || e.changedTouches[0];\n    var point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nfunction getViewportPointFromEvent(event) {\n    return extractEventInfo(event, \"client\");\n}\nvar wrapHandler = function (handler, shouldFilterPrimaryPointer) {\n    if (shouldFilterPrimaryPointer === void 0) { shouldFilterPrimaryPointer = false; }\n    var listener = function (event) {\n        return handler(event, extractEventInfo(event));\n    };\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nvar supportsPointerEvents = function () {\n    return isBrowser && window.onpointerdown === null;\n};\nvar supportsTouchEvents = function () {\n    return isBrowser && window.ontouchstart === null;\n};\nvar supportsMouseEvents = function () {\n    return isBrowser && window.onmousedown === null;\n};\n\nvar mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nvar touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nfunction createLock(name) {\n    var lock = null;\n    return function () {\n        var openLock = function () {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nvar globalHorizontalLock = createLock(\"dragHorizontal\");\nvar globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    var lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        var openHorizontal_1 = globalHorizontalLock();\n        var openVertical_1 = globalVerticalLock();\n        if (openHorizontal_1 && openVertical_1) {\n            lock = function () {\n                openHorizontal_1();\n                openVertical_1();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal_1)\n                openHorizontal_1();\n            if (openVertical_1)\n                openVertical_1();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    var openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return function (event, info) {\n        var _a;\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        callback === null || callback === void 0 ? void 0 : callback(event, info);\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Hover, isActive);\n    };\n}\nfunction useHoverGesture(_a) {\n    var onHoverStart = _a.onHoverStart, onHoverEnd = _a.onHoverEnd, whileHover = _a.whileHover, visualElement = _a.visualElement;\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined);\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined);\n}\n\n/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nvar isNodeOrChild = function (parent, child) {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nfunction useUnmountEffect(callback) {\n    return React.useEffect(function () { return function () { return callback(); }; }, []);\n}\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture(_a) {\n    var onTap = _a.onTap, onTapStart = _a.onTapStart, onTapCancel = _a.onTapCancel, whileTap = _a.whileTap, visualElement = _a.visualElement;\n    var hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    var isPressing = React.useRef(false);\n    var cancelPointerEndListeners = React.useRef(null);\n    function removePointerEndListener() {\n        var _a;\n        (_a = cancelPointerEndListeners.current) === null || _a === void 0 ? void 0 : _a.call(cancelPointerEndListeners);\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        var _a;\n        removePointerEndListener();\n        isPressing.current = false;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.getInstance(), event.target)\n            ? onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info)\n            : onTap === null || onTap === void 0 ? void 0 : onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = popmotion.pipe(addPointerEvent(window, \"pointerup\", onPointerUp), addPointerEvent(window, \"pointercancel\", onPointerCancel));\n        onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, true);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined);\n    useUnmountEffect(removePointerEndListener);\n}\n\nvar makeRenderlessComponent = function (hook) { return function (props) {\n    hook(props);\n    return null;\n}; };\n\nvar gestureAnimations = {\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nfunction shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    var prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (var i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\n/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nvar secondsToMilliseconds = function (seconds) { return seconds * 1000; };\n\nvar easingLookup = {\n    linear: popmotion.linear,\n    easeIn: popmotion.easeIn,\n    easeInOut: popmotion.easeInOut,\n    easeOut: popmotion.easeOut,\n    circIn: popmotion.circIn,\n    circInOut: popmotion.circInOut,\n    circOut: popmotion.circOut,\n    backIn: popmotion.backIn,\n    backInOut: popmotion.backInOut,\n    backOut: popmotion.backOut,\n    anticipate: popmotion.anticipate,\n    bounceIn: popmotion.bounceIn,\n    bounceInOut: popmotion.bounceInOut,\n    bounceOut: popmotion.bounceOut,\n};\nvar easingDefinitionToFunction = function (definition) {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        heyListen.invariant(definition.length === 4, \"Cubic bezier arrays must contain four numerical values.\");\n        var _a = tslib.__read(definition, 4), x1 = _a[0], y1 = _a[1], x2 = _a[2], y2 = _a[3];\n        return popmotion.cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        heyListen.invariant(easingLookup[definition] !== undefined, \"Invalid easing type '\" + definition + \"'\");\n        return easingLookup[definition];\n    }\n    return definition;\n};\nvar isEasingArray = function (ease) {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nvar isAnimatable = function (key, value) {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        styleValueTypes.complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nvar underDampedSpring = function () { return ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restDelta: 0.5,\n    restSpeed: 10,\n}); };\nvar criticallyDampedSpring = function (to) { return ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restDelta: 0.01,\n    restSpeed: 10,\n}); };\nvar linearTween = function () { return ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n}); };\nvar keyframes = function (values) { return ({\n    type: \"keyframes\",\n    duration: 0.8,\n    values: values,\n}); };\nvar defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nvar getDefaultTransition = function (valueKey, to) {\n    var transitionFactory;\n    if (isKeyframesTarget(to)) {\n        transitionFactory = keyframes;\n    }\n    else {\n        transitionFactory =\n            defaultTransitions[valueKey] || defaultTransitions.default;\n    }\n    return tslib.__assign({ to: to }, transitionFactory(to));\n};\n\n/**\n * A map of default value types for common values\n */\nvar defaultValueTypes = tslib.__assign(tslib.__assign({}, numberValueTypes), { \n    // Color props\n    color: styleValueTypes.color, backgroundColor: styleValueTypes.color, outlineColor: styleValueTypes.color, fill: styleValueTypes.color, stroke: styleValueTypes.color, \n    // Border props\n    borderColor: styleValueTypes.color, borderTopColor: styleValueTypes.color, borderRightColor: styleValueTypes.color, borderBottomColor: styleValueTypes.color, borderLeftColor: styleValueTypes.color, filter: styleValueTypes.filter, WebkitFilter: styleValueTypes.filter });\n/**\n * Gets the default ValueType for the provided value key\n */\nvar getDefaultValueType = function (key) { return defaultValueTypes[key]; };\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    var defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== styleValueTypes.filter)\n        defaultValueType = styleValueTypes.complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined(_a) {\n    _a.when; _a.delay; _a.delayChildren; _a.staggerChildren; _a.staggerDirection; _a.repeat; _a.repeatType; _a.repeatDelay; _a.from; var transition = tslib.__rest(_a, [\"when\", \"delay\", \"delayChildren\", \"staggerChildren\", \"staggerDirection\", \"repeat\", \"repeatType\", \"repeatDelay\", \"from\"]);\n    return !!Object.keys(transition).length;\n}\nvar legacyRepeatWarning = false;\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\nfunction convertTransitionToAnimationOptions(_a) {\n    var ease = _a.ease, times = _a.times, yoyo = _a.yoyo, flip = _a.flip, loop = _a.loop, transition = tslib.__rest(_a, [\"ease\", \"times\", \"yoyo\", \"flip\", \"loop\"]);\n    var options = tslib.__assign({}, transition);\n    if (times)\n        options[\"offset\"] = times;\n    /**\n     * Convert any existing durations from seconds to milliseconds\n     */\n    if (transition.duration)\n        options[\"duration\"] = secondsToMilliseconds(transition.duration);\n    if (transition.repeatDelay)\n        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n    /**\n     * Map easing names to Popmotion's easing functions\n     */\n    if (ease) {\n        options[\"ease\"] = isEasingArray(ease)\n            ? ease.map(easingDefinitionToFunction)\n            : easingDefinitionToFunction(ease);\n    }\n    /**\n     * Support legacy transition API\n     */\n    if (transition.type === \"tween\")\n        options.type = \"keyframes\";\n    /**\n     * TODO: These options are officially removed from the API.\n     */\n    if (yoyo || loop || flip) {\n        heyListen.warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n        legacyRepeatWarning = true;\n        if (yoyo) {\n            options.repeatType = \"reverse\";\n        }\n        else if (loop) {\n            options.repeatType = \"loop\";\n        }\n        else if (flip) {\n            options.repeatType = \"mirror\";\n        }\n        options.repeat = loop || yoyo || flip || transition.repeat;\n    }\n    /**\n     * TODO: Popmotion 9 has the ability to automatically detect whether to use\n     * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n     * It'd be good to introduce a similar thing here.\n     */\n    if (transition.type !== \"spring\")\n        options.type = \"keyframes\";\n    return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\nfunction getDelayFromTransition(transition, key) {\n    var _a;\n    var valueTransition = getValueTransition(transition, key) || {};\n    return (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : 0;\n}\nfunction hydrateKeyframes(options) {\n    if (Array.isArray(options.to) && options.to[0] === null) {\n        options.to = tslib.__spreadArray([], tslib.__read(options.to));\n        options.to[0] = options.from;\n    }\n    return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n    var _a;\n    if (Array.isArray(options.to)) {\n        (_a = transition.duration) !== null && _a !== void 0 ? _a : (transition.duration = 0.8);\n    }\n    hydrateKeyframes(options);\n    /**\n     * Get a default transition if none is determined to be defined.\n     */\n    if (!isTransitionDefined(transition)) {\n        transition = tslib.__assign(tslib.__assign({}, transition), getDefaultTransition(key, options.to));\n    }\n    return tslib.__assign(tslib.__assign({}, options), convertTransitionToAnimationOptions(transition));\n}\n/**\n *\n */\nfunction getAnimation(key, value, target, transition, onComplete) {\n    var _a;\n    var valueTransition = getValueTransition(transition, key);\n    var origin = (_a = valueTransition.from) !== null && _a !== void 0 ? _a : value.get();\n    var isTargetAnimatable = isAnimatable(key, target);\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(key, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    var isOriginAnimatable = isAnimatable(key, origin);\n    heyListen.warning(isOriginAnimatable === isTargetAnimatable, \"You are trying to animate \" + key + \" from \\\"\" + origin + \"\\\" to \\\"\" + target + \"\\\". \" + origin + \" is not an animatable value - to enable this animation set \" + origin + \" to a value animatable to \" + target + \" via the `style` property.\");\n    function start() {\n        var options = {\n            from: origin,\n            to: target,\n            velocity: value.getVelocity(),\n            onComplete: onComplete,\n            onUpdate: function (v) { return value.set(v); },\n        };\n        return valueTransition.type === \"inertia\" ||\n            valueTransition.type === \"decay\"\n            ? popmotion.inertia(tslib.__assign(tslib.__assign({}, options), valueTransition))\n            : popmotion.animate(tslib.__assign(tslib.__assign({}, getPopmotionAnimationOptions(valueTransition, options, key)), { onUpdate: function (v) {\n                    var _a;\n                    options.onUpdate(v);\n                    (_a = valueTransition.onUpdate) === null || _a === void 0 ? void 0 : _a.call(valueTransition, v);\n                }, onComplete: function () {\n                    var _a;\n                    options.onComplete();\n                    (_a = valueTransition.onComplete) === null || _a === void 0 ? void 0 : _a.call(valueTransition);\n                } }));\n    }\n    function set() {\n        var _a;\n        value.set(target);\n        onComplete();\n        (_a = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onComplete) === null || _a === void 0 ? void 0 : _a.call(valueTransition);\n        return { stop: function () { } };\n    }\n    return !isOriginAnimatable ||\n        !isTargetAnimatable ||\n        valueTransition.type === false\n        ? set\n        : start;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n *\n * @internal\n */\nfunction startAnimation(key, value, target, transition) {\n    if (transition === void 0) { transition = {}; }\n    return value.start(function (onComplete) {\n        var delayTimer;\n        var controls;\n        var animation = getAnimation(key, value, target, transition, onComplete);\n        var delay = getDelayFromTransition(transition, key);\n        var start = function () { return (controls = animation()); };\n        if (delay) {\n            delayTimer = setTimeout(start, secondsToMilliseconds(delay));\n        }\n        else {\n            start();\n        }\n        return function () {\n            clearTimeout(delayTimer);\n            controls === null || controls === void 0 ? void 0 : controls.stop();\n        };\n    });\n}\n\n/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nvar isNumericalString = function (v) { return /^\\-?\\d*\\.?\\d+$/.test(v); };\n\nfunction addUniqueItem(arr, item) {\n    arr.indexOf(item) === -1 && arr.push(item);\n}\nfunction removeItem(arr, item) {\n    var index = arr.indexOf(item);\n    index > -1 && arr.splice(index, 1);\n}\n\nvar SubscriptionManager = /** @class */ (function () {\n    function SubscriptionManager() {\n        this.subscriptions = [];\n    }\n    SubscriptionManager.prototype.add = function (handler) {\n        var _this = this;\n        addUniqueItem(this.subscriptions, handler);\n        return function () { return removeItem(_this.subscriptions, handler); };\n    };\n    SubscriptionManager.prototype.notify = function (a, b, c) {\n        var numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (var i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                var handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    };\n    SubscriptionManager.prototype.getSize = function () {\n        return this.subscriptions.length;\n    };\n    SubscriptionManager.prototype.clear = function () {\n        this.subscriptions.length = 0;\n    };\n    return SubscriptionManager;\n}());\n\nvar isFloat = function (value) {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nvar MotionValue = /** @class */ (function () {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    function MotionValue(init) {\n        var _this = this;\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Functions to notify when the `MotionValue` updates.\n         *\n         * @internal\n         */\n        this.updateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the velocity updates.\n         *\n         * @internal\n         */\n        this.velocityUpdateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n         *\n         * @internal\n         */\n        this.renderSubscribers = new SubscriptionManager();\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        this.updateAndNotify = function (v, render) {\n            if (render === void 0) { render = true; }\n            _this.prev = _this.current;\n            _this.current = v;\n            // Update timestamp\n            var _a = sync.getFrameData(), delta = _a.delta, timestamp = _a.timestamp;\n            if (_this.lastUpdated !== timestamp) {\n                _this.timeDelta = delta;\n                _this.lastUpdated = timestamp;\n                sync__default['default'].postRender(_this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (_this.prev !== _this.current) {\n                _this.updateSubscribers.notify(_this.current);\n            }\n            // Update velocity subscribers\n            if (_this.velocityUpdateSubscribers.getSize()) {\n                _this.velocityUpdateSubscribers.notify(_this.getVelocity());\n            }\n            // Update render subscribers\n            if (render) {\n                _this.renderSubscribers.notify(_this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = function () { return sync__default['default'].postRender(_this.velocityCheck); };\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = function (_a) {\n            var timestamp = _a.timestamp;\n            if (timestamp !== _this.lastUpdated) {\n                _this.prev = _this.current;\n                _this.velocityUpdateSubscribers.notify(_this.getVelocity());\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * @library\n     *\n     * ```jsx\n     * function MyComponent() {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <Frame x={x} />\n     * }\n     * ```\n     *\n     * @motion\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @internalremarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @public\n     */\n    MotionValue.prototype.onChange = function (subscription) {\n        return this.updateSubscribers.add(subscription);\n    };\n    MotionValue.prototype.clearListeners = function () {\n        this.updateSubscribers.clear();\n    };\n    /**\n     * Adds a function that will be notified when the `MotionValue` requests a render.\n     *\n     * @param subscriber - A function that's provided the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @internal\n     */\n    MotionValue.prototype.onRenderRequest = function (subscription) {\n        // Render immediately\n        subscription(this.get());\n        return this.renderSubscribers.add(subscription);\n    };\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    MotionValue.prototype.attach = function (passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    };\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    MotionValue.prototype.set = function (v, render) {\n        if (render === void 0) { render = true; }\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    };\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    MotionValue.prototype.get = function () {\n        return this.current;\n    };\n    /**\n     * @public\n     */\n    MotionValue.prototype.getPrevious = function () {\n        return this.prev;\n    };\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    MotionValue.prototype.getVelocity = function () {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                popmotion.velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    };\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    MotionValue.prototype.start = function (animation) {\n        var _this = this;\n        this.stop();\n        return new Promise(function (resolve) {\n            _this.hasAnimated = true;\n            _this.stopAnimation = animation(resolve);\n        }).then(function () { return _this.clearAnimation(); });\n    };\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    MotionValue.prototype.stop = function () {\n        if (this.stopAnimation)\n            this.stopAnimation();\n        this.clearAnimation();\n    };\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    MotionValue.prototype.isAnimating = function () {\n        return !!this.stopAnimation;\n    };\n    MotionValue.prototype.clearAnimation = function () {\n        this.stopAnimation = null;\n    };\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    MotionValue.prototype.destroy = function () {\n        this.updateSubscribers.clear();\n        this.renderSubscribers.clear();\n        this.stop();\n    };\n    return MotionValue;\n}());\n/**\n * @internal\n */\nfunction motionValue(init) {\n    return new MotionValue(init);\n}\n\n/**\n * Tests a provided value against a ValueType\n */\nvar testValueType = function (v) { return function (type) { return type.test(v); }; };\n\n/**\n * ValueType for \"auto\"\n */\nvar auto = {\n    test: function (v) { return v === \"auto\"; },\n    parse: function (v) { return v; },\n};\n\n/**\n * A list of value types commonly used for dimensions\n */\nvar dimensionValueTypes = [styleValueTypes.number, styleValueTypes.px, styleValueTypes.percent, styleValueTypes.degrees, styleValueTypes.vw, styleValueTypes.vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nvar findDimensionValueType = function (v) {\n    return dimensionValueTypes.find(testValueType(v));\n};\n\n/**\n * A list of all ValueTypes\n */\nvar valueTypes = tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(dimensionValueTypes)), [styleValueTypes.color, styleValueTypes.complex]);\n/**\n * Tests a value against the list of ValueTypes\n */\nvar findValueType = function (v) { return valueTypes.find(testValueType(v)); };\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    var resolved = resolveVariant(visualElement, definition);\n    var _a = resolved\n        ? visualElement.makeTargetAnimatable(resolved, false)\n        : {}, _b = _a.transitionEnd, transitionEnd = _b === void 0 ? {} : _b; _a.transition; var target = tslib.__rest(_a, [\"transitionEnd\", \"transition\"]);\n    target = tslib.__assign(tslib.__assign({}, target), transitionEnd);\n    for (var key in target) {\n        var value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    var reversedLabels = tslib.__spreadArray([], tslib.__read(variantLabels)).reverse();\n    reversedLabels.forEach(function (key) {\n        var _a;\n        var variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b, _c;\n    var _d;\n    var newValueKeys = Object.keys(target).filter(function (key) { return !visualElement.hasValue(key); });\n    var numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (var i = 0; i < numNewValues; i++) {\n        var key = newValueKeys[i];\n        var targetValue = target[key];\n        var value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" && isNumericalString(value)) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && styleValueTypes.complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : (_d[key] = value);\n        visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    var valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a, _b;\n    var origin = {};\n    for (var key in target) {\n        origin[key] =\n            (_a = getOriginFromTransition(key, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();\n    }\n    return origin;\n}\n\n/**\n * @internal\n */\nfunction animateVisualElement(visualElement, definition, options) {\n    if (options === void 0) { options = {}; }\n    visualElement.notifyAnimationStart();\n    var animation;\n    if (Array.isArray(definition)) {\n        var animations = definition.map(function (variant) {\n            return animateVariant(visualElement, variant, options);\n        });\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        var resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(function () {\n        return visualElement.notifyAnimationComplete(definition);\n    });\n}\nfunction animateVariant(visualElement, variant, options) {\n    var _a;\n    if (options === void 0) { options = {}; }\n    var resolved = resolveVariant(visualElement, variant, options.custom);\n    var _b = (resolved || {}).transition, transition = _b === void 0 ? visualElement.getDefaultTransition() || {} : _b;\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    var getAnimation = resolved\n        ? function () { return animateTarget(visualElement, resolved, options); }\n        : function () { return Promise.resolve(); };\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    var getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? function (forwardDelay) {\n            if (forwardDelay === void 0) { forwardDelay = 0; }\n            var _a = transition.delayChildren, delayChildren = _a === void 0 ? 0 : _a, staggerChildren = transition.staggerChildren, staggerDirection = transition.staggerDirection;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : function () { return Promise.resolve(); };\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    var when = transition.when;\n    if (when) {\n        var _c = tslib.__read(when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation], 2), first = _c[0], last = _c[1];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, _a) {\n    var _b;\n    var _c = _a === void 0 ? {} : _a, _d = _c.delay, delay = _d === void 0 ? 0 : _d, transitionOverride = _c.transitionOverride, type = _c.type;\n    var _e = visualElement.makeTargetAnimatable(definition), _f = _e.transition, transition = _f === void 0 ? visualElement.getDefaultTransition() : _f, transitionEnd = _e.transitionEnd, target = tslib.__rest(_e, [\"transition\", \"transitionEnd\"]);\n    if (transitionOverride)\n        transition = transitionOverride;\n    var animations = [];\n    var animationTypeState = type && ((_b = visualElement.animationState) === null || _b === void 0 ? void 0 : _b.getState()[type]);\n    for (var key in target) {\n        var value = visualElement.getValue(key);\n        var valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        var animation = startAnimation(key, value, valueTarget, tslib.__assign({ delay: delay }, transition));\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(function () {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren, staggerChildren, staggerDirection, options) {\n    if (delayChildren === void 0) { delayChildren = 0; }\n    if (staggerChildren === void 0) { staggerChildren = 0; }\n    if (staggerDirection === void 0) { staggerDirection = 1; }\n    var animations = [];\n    var maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    var generateStaggerDuration = staggerDirection === 1\n        ? function (i) {\n            if (i === void 0) { i = 0; }\n            return i * staggerChildren;\n        }\n        : function (i) {\n            if (i === void 0) { i = 0; }\n            return maxStaggerDuration - i * staggerChildren;\n        };\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach(function (child, i) {\n        animations.push(animateVariant(child, variant, tslib.__assign(tslib.__assign({}, options), { delay: delayChildren + generateStaggerDuration(i) })).then(function () { return child.notifyAnimationComplete(variant); }));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.forEachValue(function (value) { return value.stop(); });\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation(_a, key) {\n    var protectedKeys = _a.protectedKeys, needsAnimating = _a.needsAnimating;\n    var shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nvar variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Focus,\n    AnimationType.Exit,\n];\nvar reversePriorityOrder = tslib.__spreadArray([], tslib.__read(variantPriorityOrder)).reverse();\nvar numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return function (animations) {\n        return Promise.all(animations.map(function (_a) {\n            var animation = _a.animation, options = _a.options;\n            return animateVisualElement(visualElement, animation, options);\n        }));\n    };\n}\nfunction createAnimationState(visualElement) {\n    var animate = animateList(visualElement);\n    var state = createState();\n    var allAnimatedKeys = {};\n    var isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    var buildResolvedTypeValues = function (acc, definition) {\n        var resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            resolved.transition; var transitionEnd = resolved.transitionEnd, target = tslib.__rest(resolved, [\"transition\", \"transitionEnd\"]);\n            acc = tslib.__assign(tslib.__assign(tslib.__assign({}, acc), target), transitionEnd);\n        }\n        return acc;\n    };\n    function isAnimated(key) {\n        return allAnimatedKeys[key] !== undefined;\n    }\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        var props = visualElement.getProps();\n        var context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        var animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        var removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        var encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        var removedVariantIndex = Infinity;\n        var _loop_1 = function (i) {\n            var type = reversePriorityOrder[i];\n            var typeState = state[type];\n            var prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            var propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            var activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            var isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = tslib.__assign({}, encounteredKeys);\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                return \"continue\";\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            var shouldAnimateType = variantsHaveChanged(typeState.prevProp, prop) ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            var definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            var resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            var _b = typeState.prevResolvedValues, prevResolvedValues = _b === void 0 ? {} : _b;\n            var allKeys = tslib.__assign(tslib.__assign({}, prevResolvedValues), resolvedValues);\n            var markToAnimate = function (key) {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (var key in allKeys) {\n                var next = resolvedValues[key];\n                var prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev)) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = tslib.__assign(tslib.__assign({}, encounteredKeys), resolvedValues);\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push.apply(animations, tslib.__spreadArray([], tslib.__read(definitionList.map(function (animation) { return ({\n                    animation: animation,\n                    options: tslib.__assign({ type: type }, options),\n                }); }))));\n            }\n        };\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (var i = 0; i < numAnimationTypes; i++) {\n            _loop_1(i);\n        }\n        allAnimatedKeys = tslib.__assign({}, encounteredKeys);\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            var fallbackAnimation_1 = {};\n            removedKeys.forEach(function (key) {\n                var fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation_1[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation_1 });\n        }\n        var shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        return animateChanges(options, type);\n    }\n    return {\n        isAnimated: isAnimated,\n        animateChanges: animateChanges,\n        setActive: setActive,\n        setAnimateFunction: setAnimateFunction,\n        getState: function () { return state; },\n    };\n}\nfunction variantsHaveChanged(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (isVariantLabels(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive) {\n    if (isActive === void 0) { isActive = false; }\n    return {\n        isActive: isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    var _a;\n    return _a = {},\n        _a[AnimationType.Animate] = createTypeState(true),\n        _a[AnimationType.Hover] = createTypeState(),\n        _a[AnimationType.Tap] = createTypeState(),\n        _a[AnimationType.Drag] = createTypeState(),\n        _a[AnimationType.Focus] = createTypeState(),\n        _a[AnimationType.Exit] = createTypeState(),\n        _a;\n}\n\nvar animations = {\n    animation: makeRenderlessComponent(function (_a) {\n        var visualElement = _a.visualElement, animate = _a.animate;\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            React.useEffect(function () { return animate.subscribe(visualElement); }, [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent(function (props) {\n        var custom = props.custom, visualElement = props.visualElement;\n        var _a = tslib.__read(usePresence(), 2), isPresent = _a[0], onExitComplete = _a[1];\n        var presenceContext = React.useContext(PresenceContext);\n        React.useEffect(function () {\n            var _a, _b;\n            var animation = (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Exit, !isPresent, { custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom });\n            !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(onExitComplete));\n        }, [isPresent]);\n    }),\n};\n\n/**\n * @internal\n */\nvar PanSession = /** @class */ (function () {\n    function PanSession(event, handlers, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, transformPagePoint = _b.transformPagePoint;\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = function () {\n            if (!(_this.lastMoveEvent && _this.lastMoveEventInfo))\n                return;\n            var info = getPanInfo(_this.lastMoveEventInfo, _this.history);\n            var isPanStarted = _this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            var isDistancePastThreshold = popmotion.distance(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            var point = info.point;\n            var timestamp = sync.getFrameData().timestamp;\n            _this.history.push(tslib.__assign(tslib.__assign({}, point), { timestamp: timestamp }));\n            var _a = _this.handlers, onStart = _a.onStart, onMove = _a.onMove;\n            if (!isPanStarted) {\n                onStart && onStart(_this.lastMoveEvent, info);\n                _this.startEvent = _this.lastMoveEvent;\n            }\n            onMove && onMove(_this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = function (event, info) {\n            _this.lastMoveEvent = event;\n            _this.lastMoveEventInfo = transformPoint(info, _this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                _this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync__default['default'].update(_this.updatePoint, true);\n        };\n        this.handlePointerUp = function (event, info) {\n            _this.end();\n            var _a = _this.handlers, onEnd = _a.onEnd, onSessionEnd = _a.onSessionEnd;\n            var panInfo = getPanInfo(transformPoint(info, _this.transformPagePoint), _this.history);\n            if (_this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        var info = extractEventInfo(event);\n        var initialInfo = transformPoint(info, this.transformPagePoint);\n        var point = initialInfo.point;\n        var timestamp = sync.getFrameData().timestamp;\n        this.history = [tslib.__assign(tslib.__assign({}, point), { timestamp: timestamp })];\n        var onSessionStart = handlers.onSessionStart;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = popmotion.pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    PanSession.prototype.updateHandlers = function (handlers) {\n        this.handlers = handlers;\n    };\n    PanSession.prototype.end = function () {\n        this.removeListeners && this.removeListeners();\n        sync.cancelSync.update(this.updatePoint);\n    };\n    return PanSession;\n}());\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo(_a, history) {\n    var point = _a.point;\n    return {\n        point: point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    var i = history.length - 1;\n    var timestampedPoint = null;\n    var lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    var currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nfunction noop(any) {\n    return any;\n}\n\n/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToAxisBox(_a) {\n    var top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertAxisBoxToBoundingBox(_a) {\n    var x = _a.x, y = _a.y;\n    return {\n        top: y.min,\n        bottom: y.max,\n        left: x.min,\n        right: x.max,\n    };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoundingBox(_a, transformPoint) {\n    var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n    if (transformPoint === void 0) { transformPoint = noop; }\n    var topLeft = transformPoint({ x: left, y: top });\n    var bottomRight = transformPoint({ x: right, y: bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n/**\n * Create an empty axis box of zero size\n */\nfunction axisBox() {\n    return { x: { min: 0, max: 1 }, y: { min: 0, max: 1 } };\n}\nfunction copyAxisBox(box) {\n    return {\n        x: tslib.__assign({}, box.x),\n        y: tslib.__assign({}, box.y),\n    };\n}\n/**\n * Create an empty box delta\n */\nvar zeroDelta = {\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n};\nfunction delta() {\n    return {\n        x: tslib.__assign({}, zeroDelta),\n        y: tslib.__assign({}, zeroDelta),\n    };\n}\n\n// Call a handler once for each axis\nfunction eachAxis(handler) {\n    return [handler(\"x\"), handler(\"y\")];\n}\n\nvar clampProgress = function (v) { return popmotion.clamp(0, 1, v); };\n/**\n * Returns true if the provided value is within maxDistance of the provided target\n */\nfunction isNear(value, target, maxDistance) {\n    if (target === void 0) { target = 0; }\n    if (maxDistance === void 0) { maxDistance = 0.01; }\n    return popmotion.distance(value, target) < maxDistance;\n}\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    var origin = 0.5;\n    var sourceLength = calcLength(source);\n    var targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = popmotion.progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = popmotion.progress(source.min, source.max - targetLength, target.min);\n    }\n    return clampProgress(origin);\n}\n/**\n * Update the AxisDelta with a transform that projects source into target.\n *\n * The transform `origin` is optional. If not provided, it'll be automatically\n * calculated based on the relative positions of the two bounding boxes.\n */\nfunction updateAxisDelta(delta, source, target, origin) {\n    if (origin === void 0) { origin = 0.5; }\n    delta.origin = origin;\n    delta.originPoint = popmotion.mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001))\n        delta.scale = 1;\n    delta.translate =\n        popmotion.mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate))\n        delta.translate = 0;\n}\n/**\n * Update the BoxDelta with a transform that projects the source into the target.\n *\n * The transform `origin` is optional. If not provided, it'll be automatically\n * calculated based on the relative positions of the two bounding boxes.\n */\nfunction updateBoxDelta(delta, source, target, origin) {\n    updateAxisDelta(delta.x, source.x, target.x, defaultOrigin(origin.originX));\n    updateAxisDelta(delta.y, source.y, target.y, defaultOrigin(origin.originY));\n}\n/**\n * Currently this only accepts numerical origins, measured as 0-1, but could\n * accept pixel values by comparing to the target axis.\n */\nfunction defaultOrigin(origin) {\n    return typeof origin === \"number\" ? origin : 0.5;\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(projection, parentProjection) {\n    calcRelativeAxis(projection.target.x, projection.relativeTarget.x, parentProjection.target.x);\n    calcRelativeAxis(projection.target.y, projection.relativeTarget.y, parentProjection.target.y);\n}\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, _a, elastic) {\n    var min = _a.min, max = _a.max;\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? popmotion.mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? popmotion.mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculates a min projection point based on a pointer, pointer progress\n * within the drag target, and constraints.\n *\n * For instance if an element was 100px width, we were dragging from 0.25\n * along this axis, the pointer is at 200px, and there were no constraints,\n * we would calculate a min projection point of 175px.\n */\nfunction calcConstrainedMinPoint(point, length, progress, constraints, elastic) {\n    // Calculate a min point for this axis and apply it to the current pointer\n    var min = point - length * progress;\n    return constraints ? applyConstraints(min, constraints, elastic) : min;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, _a) {\n    var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    var _a;\n    var min = constraintsAxis.min - layoutAxis.min;\n    var max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        _a = tslib.__read([max, min], 2), min = _a[0], max = _a[1];\n    }\n    return {\n        min: layoutAxis.min + min,\n        max: layoutAxis.min + max,\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate the an axis position based on two axes and a progress value.\n */\nfunction calcPositionFromProgress(axis, constraints, progress) {\n    var axisLength = axis.max - axis.min;\n    var min = popmotion.mix(constraints.min, constraints.max - axisLength, progress);\n    return { min: min, max: min + axisLength };\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    var relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nvar defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\n/**\n * Measure and return the element bounding box.\n *\n * We convert the box into an AxisBox2D to make it easier to work with each axis\n * individually and programmatically.\n *\n * This function optionally accepts a transformPagePoint function which allows us to compensate\n * for, for instance, measuring the element within a scaled plane like a Framer devivce preview component.\n */\nfunction getBoundingBox(element, transformPagePoint) {\n    var box = element.getBoundingClientRect();\n    return convertBoundingBoxToAxisBox(transformBoundingBox(box, transformPagePoint));\n}\n\nvar compareByDepth = function (a, b) {\n    return a.depth - b.depth;\n};\n\nfunction isProjecting(visualElement) {\n    var isEnabled = visualElement.projection.isEnabled;\n    return isEnabled || visualElement.shouldResetTransform();\n}\nfunction collectProjectingAncestors(visualElement, ancestors) {\n    if (ancestors === void 0) { ancestors = []; }\n    var parent = visualElement.parent;\n    if (parent)\n        collectProjectingAncestors(parent, ancestors);\n    if (isProjecting(visualElement))\n        ancestors.push(visualElement);\n    return ancestors;\n}\nfunction collectProjectingChildren(visualElement) {\n    var children = [];\n    var addChild = function (child) {\n        if (isProjecting(child))\n            children.push(child);\n        child.children.forEach(addChild);\n    };\n    visualElement.children.forEach(addChild);\n    return children.sort(compareByDepth);\n}\n/**\n * Update the layoutState by measuring the DOM layout. This\n * should be called after resetting any layout-affecting transforms.\n */\nfunction updateLayoutMeasurement(visualElement) {\n    if (visualElement.shouldResetTransform())\n        return;\n    var layoutState = visualElement.getLayoutState();\n    visualElement.notifyBeforeLayoutMeasure(layoutState.layout);\n    layoutState.isHydrated = true;\n    layoutState.layout = visualElement.measureViewportBox();\n    layoutState.layoutCorrected = copyAxisBox(layoutState.layout);\n    visualElement.notifyLayoutMeasure(layoutState.layout, visualElement.prevViewportBox || layoutState.layout);\n    sync__default['default'].update(function () { return visualElement.rebaseProjectionTarget(); });\n}\n/**\n * Record the viewport box as it was before an expected mutation/re-render\n */\nfunction snapshotViewportBox(visualElement) {\n    if (visualElement.shouldResetTransform())\n        return;\n    visualElement.prevViewportBox = visualElement.measureViewportBox(false);\n    /**\n     * Update targetBox to match the prevViewportBox. This is just to ensure\n     * that targetBox is affected by scroll in the same way as the measured box\n     */\n    visualElement.rebaseProjectionTarget(false, visualElement.prevViewportBox);\n}\n\nfunction tweenAxis(target, prev, next, p) {\n    target.min = popmotion.mix(prev.min, next.min, p);\n    target.max = popmotion.mix(prev.max, next.max, p);\n}\nfunction calcRelativeOffsetAxis(parent, child) {\n    return {\n        min: child.min - parent.min,\n        max: child.max - parent.min,\n    };\n}\nfunction calcRelativeOffset(parent, child) {\n    return {\n        x: calcRelativeOffsetAxis(parent.x, child.x),\n        y: calcRelativeOffsetAxis(parent.y, child.y),\n    };\n}\nfunction checkIfParentHasChanged(prev, next) {\n    var prevId = prev.getLayoutId();\n    var nextId = next.getLayoutId();\n    return prevId !== nextId || (nextId === undefined && prev !== next);\n}\n\nfunction isDraggable(visualElement) {\n    var _a = visualElement.getProps(), drag = _a.drag, _dragX = _a._dragX;\n    return drag && !_dragX;\n}\n\n/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction resetAxis(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction resetBox(box, originBox) {\n    resetAxis(box.x, originBox.x);\n    resetAxis(box.y, originBox.y);\n}\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    var distanceFromOrigin = point - originPoint;\n    var scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate, scale, originPoint, boxScale) {\n    if (translate === void 0) { translate = 0; }\n    if (scale === void 0) { scale = 1; }\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, _a) {\n    var x = _a.x, y = _a.y;\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction applyAxisTransforms(final, axis, transforms, _a) {\n    var _b = tslib.__read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];\n    // Copy the current axis to the final axis before mutation\n    final.min = axis.min;\n    final.max = axis.max;\n    var axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    var originPoint = popmotion.mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(final, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nvar xKeys = [\"x\", \"scaleX\", \"originX\"];\nvar yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction applyBoxTransforms(finalBox, box, transforms) {\n    applyAxisTransforms(finalBox.x, box.x, transforms, xKeys);\n    applyAxisTransforms(finalBox.y, box.y, transforms, yKeys);\n}\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate, scale, origin, boxScale) {\n    if (translate === void 0) { translate = 0; }\n    if (scale === void 0) { scale = 1; }\n    if (origin === void 0) { origin = 0.5; }\n    var originPoint = popmotion.mix(axis.min, axis.max, origin) - translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, _a) {\n    var _b = tslib.__read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale);\n}\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms) {\n    removeAxisTransforms(box.x, transforms, xKeys);\n    removeAxisTransforms(box.y, transforms, yKeys);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath) {\n    var treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    var node;\n    var delta;\n    for (var i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.getLayoutState().delta;\n        // Incoporate each ancestor's scale into a culmulative treeScale for this component\n        treeScale.x *= delta.x.scale;\n        treeScale.y *= delta.y.scale;\n        // Apply each ancestor's calculated delta into this component's recorded layout box\n        applyBoxDelta(box, delta);\n        // If this is a draggable ancestor, also incorporate the node's transform to the layout box\n        if (isDraggable(node)) {\n            applyBoxTransforms(box, box, node.getLatestValues());\n        }\n    }\n}\n\n/**\n * Returns a boolean stating whether or not we converted the projection\n * to relative projection.\n */\nfunction convertToRelativeProjection(visualElement, isLayoutDrag) {\n    if (isLayoutDrag === void 0) { isLayoutDrag = true; }\n    var projectionParent = visualElement.getProjectionParent();\n    if (!projectionParent)\n        return false;\n    var offset;\n    if (isLayoutDrag) {\n        offset = calcRelativeOffset(projectionParent.projection.target, visualElement.projection.target);\n        removeBoxTransforms(offset, projectionParent.getLatestValues());\n    }\n    else {\n        offset = calcRelativeOffset(projectionParent.getLayoutState().layout, visualElement.getLayoutState().layout);\n    }\n    eachAxis(function (axis) {\n        return visualElement.setProjectionTargetAxis(axis, offset[axis].min, offset[axis].max, true);\n    });\n    return true;\n}\n\nvar unresolvedJobs = new Set();\nfunction pushJob(stack, job, pointer) {\n    if (!stack[pointer])\n        stack[pointer] = [];\n    stack[pointer].push(job);\n}\nfunction batchLayout(callback) {\n    unresolvedJobs.add(callback);\n    return function () { return unresolvedJobs.delete(callback); };\n}\nfunction flushLayout() {\n    if (!unresolvedJobs.size)\n        return;\n    var pointer = 0;\n    var reads = [[]];\n    var writes = [];\n    var setRead = function (job) { return pushJob(reads, job, pointer); };\n    var setWrite = function (job) {\n        pushJob(writes, job, pointer);\n        pointer++;\n    };\n    /**\n     * Resolve jobs into their array stacks\n     */\n    unresolvedJobs.forEach(function (callback) {\n        callback(setRead, setWrite);\n        pointer = 0;\n    });\n    unresolvedJobs.clear();\n    /**\n     * Execute jobs\n     */\n    var numStacks = writes.length;\n    for (var i = 0; i <= numStacks; i++) {\n        reads[i] && reads[i].forEach(executeJob);\n        writes[i] && writes[i].forEach(executeJob);\n    }\n}\nvar executeJob = function (job) { return job(); };\n\nvar elementDragControls = new WeakMap();\n/**\n *\n */\nvar lastPointerEvent;\nvar VisualElementDragControls = /** @class */ (function () {\n    function VisualElementDragControls(_a) {\n        var visualElement = _a.visualElement;\n        /**\n         * Track whether we're currently dragging.\n         *\n         * @internal\n         */\n        this.isDragging = false;\n        /**\n         * The current direction of drag, or `null` if both.\n         *\n         * @internal\n         */\n        this.currentDirection = null;\n        /**\n         * The permitted boundaries of travel, in pixels.\n         *\n         * @internal\n         */\n        this.constraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         *\n         * @internal\n         */\n        this.elastic = axisBox();\n        /**\n         * A reference to the host component's latest props.\n         *\n         * @internal\n         */\n        this.props = {};\n        /**\n         * @internal\n         */\n        this.hasMutatedConstraints = false;\n        /**\n         * Track the initial position of the cursor relative to the dragging element\n         * when dragging starts as a value of 0-1 on each axis. We then use this to calculate\n         * an ideal bounding box for the VisualElement renderer to project into every frame.\n         *\n         * @internal\n         */\n        this.cursorProgress = {\n            x: 0.5,\n            y: 0.5,\n        };\n        // When updating _dragX, or _dragY instead of the VisualElement,\n        // persist their values between drag gestures.\n        this.originPoint = {};\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        /**\n         * @internal\n         */\n        this.panSession = null;\n        this.visualElement = visualElement;\n        this.visualElement.enableLayoutProjection();\n        elementDragControls.set(visualElement, this);\n    }\n    /**\n     * Instantiate a PanSession for the drag gesture\n     *\n     * @public\n     */\n    VisualElementDragControls.prototype.start = function (originEvent, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, _c = _b.snapToCursor, snapToCursor = _c === void 0 ? false : _c, cursorProgress = _b.cursorProgress;\n        var onSessionStart = function (event) {\n            var _a;\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            _this.stopMotion();\n            /**\n             * Save the initial point. We'll use this to calculate the pointer's position rather\n             * than the one we receive when the gesture actually starts. By then, the pointer will\n             * have already moved, and the perception will be of the pointer \"slipping\" across the element\n             */\n            var initialPoint = getViewportPointFromEvent(event).point;\n            (_a = _this.cancelLayout) === null || _a === void 0 ? void 0 : _a.call(_this);\n            _this.cancelLayout = batchLayout(function (read, write) {\n                var ancestors = collectProjectingAncestors(_this.visualElement);\n                var children = collectProjectingChildren(_this.visualElement);\n                var tree = tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(ancestors)), tslib.__read(children));\n                var hasManuallySetCursorOrigin = false;\n                /**\n                 * Apply a simple lock to the projection target. This ensures no animations\n                 * can run on the projection box while this lock is active.\n                 */\n                _this.isLayoutDrag() && _this.visualElement.lockProjectionTarget();\n                write(function () {\n                    tree.forEach(function (element) { return element.resetTransform(); });\n                });\n                read(function () {\n                    updateLayoutMeasurement(_this.visualElement);\n                    children.forEach(updateLayoutMeasurement);\n                });\n                write(function () {\n                    tree.forEach(function (element) { return element.restoreTransform(); });\n                    if (snapToCursor) {\n                        hasManuallySetCursorOrigin = _this.snapToCursor(initialPoint);\n                    }\n                });\n                read(function () {\n                    var isRelativeDrag = Boolean(_this.getAxisMotionValue(\"x\") && !_this.isExternalDrag());\n                    if (!isRelativeDrag) {\n                        _this.visualElement.rebaseProjectionTarget(true, _this.visualElement.measureViewportBox(false));\n                    }\n                    _this.visualElement.scheduleUpdateLayoutProjection();\n                    /**\n                     * When dragging starts, we want to find where the cursor is relative to the bounding box\n                     * of the element. Every frame, we calculate a new bounding box using this relative position\n                     * and let the visualElement renderer figure out how to reproject the element into this bounding\n                     * box.\n                     *\n                     * By doing it this way, rather than applying an x/y transform directly to the element,\n                     * we can ensure the component always visually sticks to the cursor as we'd expect, even\n                     * if the DOM element itself changes layout as a result of React updates the user might\n                     * make based on the drag position.\n                     */\n                    var projection = _this.visualElement.projection;\n                    eachAxis(function (axis) {\n                        if (!hasManuallySetCursorOrigin) {\n                            var _a = projection.target[axis], min = _a.min, max = _a.max;\n                            _this.cursorProgress[axis] = cursorProgress\n                                ? cursorProgress[axis]\n                                : popmotion.progress(min, max, initialPoint[axis]);\n                        }\n                        /**\n                         * If we have external drag MotionValues, record their origin point. On pointermove\n                         * we'll apply the pan gesture offset directly to this value.\n                         */\n                        var axisValue = _this.getAxisMotionValue(axis);\n                        if (axisValue) {\n                            _this.originPoint[axis] = axisValue.get();\n                        }\n                    });\n                });\n                write(function () {\n                    sync.flushSync.update();\n                    sync.flushSync.preRender();\n                    sync.flushSync.render();\n                    sync.flushSync.postRender();\n                });\n                read(function () { return _this.resolveDragConstraints(); });\n            });\n        };\n        var onStart = function (event, info) {\n            var _a, _b, _c;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            var _d = _this.props, drag = _d.drag, dragPropagation = _d.dragPropagation;\n            if (drag && !dragPropagation) {\n                if (_this.openGlobalLock)\n                    _this.openGlobalLock();\n                _this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!_this.openGlobalLock)\n                    return;\n            }\n            flushLayout();\n            // Set current drag status\n            _this.isDragging = true;\n            _this.currentDirection = null;\n            // Fire onDragStart event\n            (_b = (_a = _this.props).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n            (_c = _this.visualElement.animationState) === null || _c === void 0 ? void 0 : _c.setActive(AnimationType.Drag, true);\n        };\n        var onMove = function (event, info) {\n            var _a, _b, _c, _d;\n            var _e = _this.props, dragPropagation = _e.dragPropagation, dragDirectionLock = _e.dragDirectionLock;\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !_this.openGlobalLock)\n                return;\n            var offset = info.offset;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && _this.currentDirection === null) {\n                _this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (_this.currentDirection !== null) {\n                    (_b = (_a = _this.props).onDirectionLock) === null || _b === void 0 ? void 0 : _b.call(_a, _this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            _this.updateAxis(\"x\", info.point, offset);\n            _this.updateAxis(\"y\", info.point, offset);\n            // Fire onDrag event\n            (_d = (_c = _this.props).onDrag) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n            // Update the last pointer event\n            lastPointerEvent = event;\n        };\n        var onSessionEnd = function (event, info) {\n            return _this.stop(event, info);\n        };\n        var transformPagePoint = this.props.transformPagePoint;\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart: onSessionStart,\n            onStart: onStart,\n            onMove: onMove,\n            onSessionEnd: onSessionEnd,\n        }, { transformPagePoint: transformPagePoint });\n    };\n    VisualElementDragControls.prototype.resolveDragConstraints = function () {\n        var _this = this;\n        var _a = this.props, dragConstraints = _a.dragConstraints, dragElastic = _a.dragElastic;\n        var layout = this.visualElement.getLayoutState().layoutCorrected;\n        if (dragConstraints) {\n            this.constraints = isRefObject(dragConstraints)\n                ? this.resolveRefConstraints(layout, dragConstraints)\n                : calcRelativeConstraints(layout, dragConstraints);\n        }\n        else {\n            this.constraints = false;\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (this.constraints && !this.hasMutatedConstraints) {\n            eachAxis(function (axis) {\n                if (_this.getAxisMotionValue(axis)) {\n                    _this.constraints[axis] = rebaseAxisConstraints(layout[axis], _this.constraints[axis]);\n                }\n            });\n        }\n    };\n    VisualElementDragControls.prototype.resolveRefConstraints = function (layoutBox, constraints) {\n        var _a = this.props, onMeasureDragConstraints = _a.onMeasureDragConstraints, transformPagePoint = _a.transformPagePoint;\n        var constraintsElement = constraints.current;\n        heyListen.invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        this.constraintsBox = getBoundingBox(constraintsElement, transformPagePoint);\n        var measuredConstraints = calcViewportConstraints(layoutBox, this.constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            var userConstraints = onMeasureDragConstraints(convertAxisBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToAxisBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    };\n    VisualElementDragControls.prototype.cancelDrag = function () {\n        var _a, _b;\n        this.visualElement.unlockProjectionTarget();\n        (_a = this.cancelLayout) === null || _a === void 0 ? void 0 : _a.call(this);\n        this.isDragging = false;\n        this.panSession && this.panSession.end();\n        this.panSession = null;\n        if (!this.props.dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    };\n    VisualElementDragControls.prototype.stop = function (event, info) {\n        var _a, _b, _c;\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = null;\n        var isDragging = this.isDragging;\n        this.cancelDrag();\n        if (!isDragging)\n            return;\n        var velocity = info.velocity;\n        this.animateDragEnd(velocity);\n        (_c = (_b = this.props).onDragEnd) === null || _c === void 0 ? void 0 : _c.call(_b, event, info);\n    };\n    VisualElementDragControls.prototype.snapToCursor = function (point) {\n        var _this = this;\n        return eachAxis(function (axis) {\n            var drag = _this.props.drag;\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, _this.currentDirection))\n                return;\n            var axisValue = _this.getAxisMotionValue(axis);\n            if (axisValue) {\n                var box = _this.visualElement.getLayoutState().layout;\n                var length_1 = box[axis].max - box[axis].min;\n                var center = box[axis].min + length_1 / 2;\n                var offset = point[axis] - center;\n                _this.originPoint[axis] = point[axis];\n                axisValue.set(offset);\n            }\n            else {\n                _this.cursorProgress[axis] = 0.5;\n                return true;\n            }\n        }).includes(true);\n    };\n    /**\n     * Update the specified axis with the latest pointer information.\n     */\n    VisualElementDragControls.prototype.updateAxis = function (axis, point, offset) {\n        var drag = this.props.drag;\n        // If we're not dragging this axis, do an early return.\n        if (!shouldDrag(axis, drag, this.currentDirection))\n            return;\n        return this.getAxisMotionValue(axis)\n            ? this.updateAxisMotionValue(axis, offset)\n            : this.updateVisualElementAxis(axis, point);\n    };\n    VisualElementDragControls.prototype.updateAxisMotionValue = function (axis, offset) {\n        var axisValue = this.getAxisMotionValue(axis);\n        if (!offset || !axisValue)\n            return;\n        var nextValue = this.originPoint[axis] + offset[axis];\n        var update = this.constraints\n            ? applyConstraints(nextValue, this.constraints[axis], this.elastic[axis])\n            : nextValue;\n        axisValue.set(update);\n    };\n    VisualElementDragControls.prototype.updateVisualElementAxis = function (axis, point) {\n        var _a;\n        // Get the actual layout bounding box of the element\n        var axisLayout = this.visualElement.getLayoutState().layout[axis];\n        // Calculate its current length. In the future we might want to lerp this to animate\n        // between lengths if the layout changes as we change the DOM\n        var axisLength = axisLayout.max - axisLayout.min;\n        // Get the initial progress that the pointer sat on this axis on gesture start.\n        var axisProgress = this.cursorProgress[axis];\n        // Calculate a new min point based on the latest pointer position, constraints and elastic\n        var min = calcConstrainedMinPoint(point[axis], axisLength, axisProgress, (_a = this.constraints) === null || _a === void 0 ? void 0 : _a[axis], this.elastic[axis]);\n        // Update the axis viewport target with this new min and the length\n        this.visualElement.setProjectionTargetAxis(axis, min, min + axisLength);\n    };\n    VisualElementDragControls.prototype.setProps = function (_a) {\n        var _b = _a.drag, drag = _b === void 0 ? false : _b, _c = _a.dragDirectionLock, dragDirectionLock = _c === void 0 ? false : _c, _d = _a.dragPropagation, dragPropagation = _d === void 0 ? false : _d, _e = _a.dragConstraints, dragConstraints = _e === void 0 ? false : _e, _f = _a.dragElastic, dragElastic = _f === void 0 ? defaultElastic : _f, _g = _a.dragMomentum, dragMomentum = _g === void 0 ? true : _g, remainingProps = tslib.__rest(_a, [\"drag\", \"dragDirectionLock\", \"dragPropagation\", \"dragConstraints\", \"dragElastic\", \"dragMomentum\"]);\n        this.props = tslib.__assign({ drag: drag,\n            dragDirectionLock: dragDirectionLock,\n            dragPropagation: dragPropagation,\n            dragConstraints: dragConstraints,\n            dragElastic: dragElastic,\n            dragMomentum: dragMomentum }, remainingProps);\n    };\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - If the component will perform layout animations, we output the gesture to the component's\n     *      visual bounding box\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    VisualElementDragControls.prototype.getAxisMotionValue = function (axis) {\n        var _a = this.props, layout = _a.layout, layoutId = _a.layoutId;\n        var dragKey = \"_drag\" + axis.toUpperCase();\n        if (this.props[dragKey]) {\n            return this.props[dragKey];\n        }\n        else if (!layout && layoutId === undefined) {\n            return this.visualElement.getValue(axis, 0);\n        }\n    };\n    VisualElementDragControls.prototype.isLayoutDrag = function () {\n        return !this.getAxisMotionValue(\"x\");\n    };\n    VisualElementDragControls.prototype.isExternalDrag = function () {\n        var _a = this.props, _dragX = _a._dragX, _dragY = _a._dragY;\n        return _dragX || _dragY;\n    };\n    VisualElementDragControls.prototype.animateDragEnd = function (velocity) {\n        var _this = this;\n        var _a = this.props, drag = _a.drag, dragMomentum = _a.dragMomentum, dragElastic = _a.dragElastic, dragTransition = _a.dragTransition;\n        /**\n         * Everything beyond the drag gesture should be performed with\n         * relative projection so children stay in sync with their parent element.\n         */\n        var isRelative = convertToRelativeProjection(this.visualElement, this.isLayoutDrag() && !this.isExternalDrag());\n        /**\n         * If we had previously resolved constraints relative to the viewport,\n         * we need to also convert those to a relative coordinate space for the animation\n         */\n        var constraints = this.constraints || {};\n        if (isRelative &&\n            Object.keys(constraints).length &&\n            this.isLayoutDrag()) {\n            var projectionParent = this.visualElement.getProjectionParent();\n            if (projectionParent) {\n                var relativeConstraints_1 = calcRelativeOffset(projectionParent.projection.targetFinal, constraints);\n                eachAxis(function (axis) {\n                    var _a = relativeConstraints_1[axis], min = _a.min, max = _a.max;\n                    constraints[axis] = {\n                        min: isNaN(min) ? undefined : min,\n                        max: isNaN(max) ? undefined : max,\n                    };\n                });\n            }\n        }\n        var momentumAnimations = eachAxis(function (axis) {\n            var _a;\n            if (!shouldDrag(axis, drag, _this.currentDirection)) {\n                return;\n            }\n            var transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            var bounceStiffness = dragElastic ? 200 : 1000000;\n            var bounceDamping = dragElastic ? 40 : 10000000;\n            var inertia = tslib.__assign(tslib.__assign({ type: \"inertia\", velocity: dragMomentum ? velocity[axis] : 0, bounceStiffness: bounceStiffness,\n                bounceDamping: bounceDamping, timeConstant: 750, restDelta: 1, restSpeed: 10 }, dragTransition), transition);\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return _this.getAxisMotionValue(axis)\n                ? _this.startAxisValueAnimation(axis, inertia)\n                : _this.visualElement.startLayoutAnimation(axis, inertia, isRelative);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(function () {\n            var _a, _b;\n            (_b = (_a = _this.props).onDragTransitionEnd) === null || _b === void 0 ? void 0 : _b.call(_a);\n        });\n    };\n    VisualElementDragControls.prototype.stopMotion = function () {\n        var _this = this;\n        eachAxis(function (axis) {\n            var axisValue = _this.getAxisMotionValue(axis);\n            axisValue\n                ? axisValue.stop()\n                : _this.visualElement.stopLayoutAnimation();\n        });\n    };\n    VisualElementDragControls.prototype.startAxisValueAnimation = function (axis, transition) {\n        var axisValue = this.getAxisMotionValue(axis);\n        if (!axisValue)\n            return;\n        var currentValue = axisValue.get();\n        axisValue.set(currentValue);\n        axisValue.set(currentValue); // Set twice to hard-reset velocity\n        return startAnimation(axis, axisValue, 0, transition);\n    };\n    VisualElementDragControls.prototype.scalePoint = function () {\n        var _this = this;\n        var _a = this.props, drag = _a.drag, dragConstraints = _a.dragConstraints;\n        if (!isRefObject(dragConstraints) || !this.constraintsBox)\n            return;\n        // Stop any current animations as there can be some visual glitching if we resize mid animation\n        this.stopMotion();\n        // Record the relative progress of the targetBox relative to the constraintsBox\n        var boxProgress = { x: 0, y: 0 };\n        eachAxis(function (axis) {\n            boxProgress[axis] = calcOrigin(_this.visualElement.projection.target[axis], _this.constraintsBox[axis]);\n        });\n        /**\n         * For each axis, calculate the current progress of the layout axis within the constraints.\n         * Then, using the latest layout and constraints measurements, reposition the new layout axis\n         * proportionally within the constraints.\n         */\n        this.updateConstraints(function () {\n            eachAxis(function (axis) {\n                if (!shouldDrag(axis, drag, null))\n                    return;\n                // Calculate the position of the targetBox relative to the constraintsBox using the\n                // previously calculated progress\n                var _a = calcPositionFromProgress(_this.visualElement.projection.target[axis], _this.constraintsBox[axis], boxProgress[axis]), min = _a.min, max = _a.max;\n                _this.visualElement.setProjectionTargetAxis(axis, min, max);\n            });\n        });\n        /**\n         * If any other draggable components are queuing the same tasks synchronously\n         * this will wait until they've all been scheduled before flushing.\n         */\n        setTimeout(flushLayout, 1);\n    };\n    VisualElementDragControls.prototype.updateConstraints = function (onReady) {\n        var _this = this;\n        this.cancelLayout = batchLayout(function (read, write) {\n            var ancestors = collectProjectingAncestors(_this.visualElement);\n            write(function () {\n                return ancestors.forEach(function (element) { return element.resetTransform(); });\n            });\n            read(function () { return updateLayoutMeasurement(_this.visualElement); });\n            write(function () {\n                return ancestors.forEach(function (element) { return element.restoreTransform(); });\n            });\n            read(function () {\n                _this.resolveDragConstraints();\n            });\n            if (onReady)\n                write(onReady);\n        });\n    };\n    VisualElementDragControls.prototype.mount = function (visualElement) {\n        var _this = this;\n        var element = visualElement.getInstance();\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        var stopPointerListener = addPointerEvent(element, \"pointerdown\", function (event) {\n            var _a = _this.props, drag = _a.drag, _b = _a.dragListener, dragListener = _b === void 0 ? true : _b;\n            drag && dragListener && _this.start(event);\n        });\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        var stopResizeListener = addDomEvent(window, \"resize\", function () {\n            _this.scalePoint();\n        });\n        /**\n         * Ensure drag constraints are resolved correctly relative to the dragging element\n         * whenever its layout changes.\n         */\n        var stopLayoutUpdateListener = visualElement.onLayoutUpdate(function () {\n            if (_this.isDragging) {\n                _this.resolveDragConstraints();\n            }\n        });\n        /**\n         * If the previous component with this same layoutId was dragging at the time\n         * it was unmounted, we want to continue the same gesture on this component.\n         */\n        var prevDragCursor = visualElement.prevDragCursor;\n        if (prevDragCursor) {\n            this.start(lastPointerEvent, { cursorProgress: prevDragCursor });\n        }\n        /**\n         * Return a function that will teardown the drag gesture\n         */\n        return function () {\n            stopPointerListener === null || stopPointerListener === void 0 ? void 0 : stopPointerListener();\n            stopResizeListener === null || stopResizeListener === void 0 ? void 0 : stopResizeListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n            _this.cancelDrag();\n        };\n    };\n    return VisualElementDragControls;\n}());\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold) {\n    if (lockThreshold === void 0) { lockThreshold = 10; }\n    var direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    var groupDragControls = props.dragControls, visualElement = props.visualElement;\n    var transformPagePoint = React.useContext(MotionConfigContext).transformPagePoint;\n    var dragControls = useConstant(function () {\n        return new VisualElementDragControls({\n            visualElement: visualElement,\n        });\n    });\n    dragControls.setProps(tslib.__assign(tslib.__assign({}, props), { transformPagePoint: transformPagePoint }));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    React.useEffect(function () { return groupDragControls && groupDragControls.subscribe(dragControls); }, [dragControls]);\n    // Mount the drag controls with the visualElement\n    React.useEffect(function () { return dragControls.mount(visualElement); }, []);\n}\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @internalremarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture(_a) {\n    var onPan = _a.onPan, onPanStart = _a.onPanStart, onPanEnd = _a.onPanEnd, onPanSessionStart = _a.onPanSessionStart, visualElement = _a.visualElement;\n    var hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    var panSession = React.useRef(null);\n    var transformPagePoint = React.useContext(MotionConfigContext).transformPagePoint;\n    var handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: function (event, info) {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    React.useEffect(function () {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint: transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(function () { return panSession.current && panSession.current.end(); });\n}\n\nvar drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\n/**\n * @public\n */\nvar Presence;\n(function (Presence) {\n    Presence[Presence[\"Entering\"] = 0] = \"Entering\";\n    Presence[Presence[\"Present\"] = 1] = \"Present\";\n    Presence[Presence[\"Exiting\"] = 2] = \"Exiting\";\n})(Presence || (Presence = {}));\n/**\n * @public\n */\nexports.VisibilityAction = void 0;\n(function (VisibilityAction) {\n    VisibilityAction[VisibilityAction[\"Hide\"] = 0] = \"Hide\";\n    VisibilityAction[VisibilityAction[\"Show\"] = 1] = \"Show\";\n})(exports.VisibilityAction || (exports.VisibilityAction = {}));\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nvar cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    var match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    var _a = tslib.__read(match, 3), token = _a[1], fallback = _a[2];\n    return [token, fallback];\n}\nvar maxDepth = 4;\nfunction getVariableValue(current, element, depth) {\n    if (depth === void 0) { depth = 1; }\n    heyListen.invariant(depth <= maxDepth, \"Max CSS variable fallback depth detected in property \\\"\" + current + \"\\\". This may indicate a circular fallback dependency.\");\n    var _a = tslib.__read(parseCSSVariable(current), 2), token = _a[0], fallback = _a[1];\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    var resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, _a, transitionEnd) {\n    var _b;\n    var target = tslib.__rest(_a, []);\n    var element = visualElement.getInstance();\n    if (!(element instanceof HTMLElement))\n        return { target: target, transitionEnd: transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = tslib.__assign({}, transitionEnd);\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.forEachValue(function (value) {\n        var current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        var resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (var key in target) {\n        var current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        var resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd)\n            (_b = transitionEnd[key]) !== null && _b !== void 0 ? _b : (transitionEnd[key] = current);\n    }\n    return { target: target, transitionEnd: transitionEnd };\n}\n\nfunction pixelsToPercent(pixels, axis) {\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nfunction correctBorderRadius(latest, _layoutState, _a) {\n    var target = _a.target;\n    /**\n     * If latest is a string, if it's a percentage we can return immediately as it's\n     * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n     */\n    if (typeof latest === \"string\") {\n        if (styleValueTypes.px.test(latest)) {\n            latest = parseFloat(latest);\n        }\n        else {\n            return latest;\n        }\n    }\n    /**\n     * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n     * pixel value as a percentage of each axis\n     */\n    var x = pixelsToPercent(latest, target.x);\n    var y = pixelsToPercent(latest, target.y);\n    return x + \"% \" + y + \"%\";\n}\nvar varToken = \"_$css\";\nfunction correctBoxShadow(latest, _a) {\n    var delta = _a.delta, treeScale = _a.treeScale;\n    var original = latest;\n    /**\n     * We need to first strip and store CSS variables from the string.\n     */\n    var containsCSSVariables = latest.includes(\"var(\");\n    var cssVariables = [];\n    if (containsCSSVariables) {\n        latest = latest.replace(cssVariableRegex, function (match) {\n            cssVariables.push(match);\n            return varToken;\n        });\n    }\n    var shadow = styleValueTypes.complex.parse(latest);\n    // TODO: Doesn't support multiple shadows\n    if (shadow.length > 5)\n        return original;\n    var template = styleValueTypes.complex.createTransformer(latest);\n    var offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n    // Calculate the overall context scale\n    var xScale = delta.x.scale * treeScale.x;\n    var yScale = delta.y.scale * treeScale.y;\n    shadow[0 + offset] /= xScale;\n    shadow[1 + offset] /= yScale;\n    /**\n     * Ideally we'd correct x and y scales individually, but because blur and\n     * spread apply to both we have to take a scale average and apply that instead.\n     * We could potentially improve the outcome of this by incorporating the ratio between\n     * the two scales.\n     */\n    var averageScale = popmotion.mix(xScale, yScale, 0.5);\n    // Blur\n    if (typeof shadow[2 + offset] === \"number\")\n        shadow[2 + offset] /= averageScale;\n    // Spread\n    if (typeof shadow[3 + offset] === \"number\")\n        shadow[3 + offset] /= averageScale;\n    var output = template(shadow);\n    if (containsCSSVariables) {\n        var i_1 = 0;\n        output = output.replace(varToken, function () {\n            var cssVariable = cssVariables[i_1];\n            i_1++;\n            return cssVariable;\n        });\n    }\n    return output;\n}\nvar borderCorrectionDefinition = {\n    process: correctBorderRadius,\n};\nvar defaultScaleCorrectors = {\n    borderRadius: tslib.__assign(tslib.__assign({}, borderCorrectionDefinition), { applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ] }),\n    borderTopLeftRadius: borderCorrectionDefinition,\n    borderTopRightRadius: borderCorrectionDefinition,\n    borderBottomLeftRadius: borderCorrectionDefinition,\n    borderBottomRightRadius: borderCorrectionDefinition,\n    boxShadow: {\n        process: correctBoxShadow,\n    },\n};\n\nvar progressTarget = 1000;\nvar Animate = /** @class */ (function (_super) {\n    tslib.__extends(Animate, _super);\n    function Animate() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * A mutable object that tracks the target viewport box\n         * for the current animation frame.\n         */\n        _this.frameTarget = axisBox();\n        /**\n         * The current animation target, we use this to check whether to start\n         * a new animation or continue the existing one.\n         */\n        _this.currentAnimationTarget = axisBox();\n        /**\n         * Track whether we're animating this axis.\n         */\n        _this.isAnimating = {\n            x: false,\n            y: false,\n        };\n        _this.stopAxisAnimation = {\n            x: undefined,\n            y: undefined,\n        };\n        _this.isAnimatingTree = false;\n        _this.animate = function (target, origin, _a) {\n            if (_a === void 0) { _a = {}; }\n            var originBox = _a.originBox, targetBox = _a.targetBox, visibilityAction = _a.visibilityAction, shouldStackAnimate = _a.shouldStackAnimate, onComplete = _a.onComplete, prevParent = _a.prevParent, config = tslib.__rest(_a, [\"originBox\", \"targetBox\", \"visibilityAction\", \"shouldStackAnimate\", \"onComplete\", \"prevParent\"]);\n            var _b = _this.props, visualElement = _b.visualElement, layout = _b.layout;\n            /**\n             * Early return if we've been instructed not to animate this render.\n             */\n            if (shouldStackAnimate === false) {\n                _this.isAnimatingTree = false;\n                return _this.safeToRemove();\n            }\n            /**\n             * Prioritise tree animations\n             */\n            if (_this.isAnimatingTree && shouldStackAnimate !== true) {\n                return;\n            }\n            else if (shouldStackAnimate) {\n                _this.isAnimatingTree = true;\n            }\n            /**\n             * Allow the measured origin (prev bounding box) and target (actual layout) to be\n             * overridden by the provided config.\n             */\n            origin = originBox || origin;\n            target = targetBox || target;\n            /**\n             * If this element has a projecting parent, there's an opportunity to animate\n             * it relatively to that parent rather than relatively to the viewport. This\n             * allows us to add orchestrated animations.\n             */\n            var isRelative = false;\n            var projectionParent = visualElement.getProjectionParent();\n            if (projectionParent) {\n                var prevParentViewportBox = projectionParent.prevViewportBox;\n                var parentLayout = projectionParent.getLayoutState().layout;\n                /**\n                 * If we're being provided a previous parent VisualElement by AnimateSharedLayout\n                 */\n                if (prevParent) {\n                    /**\n                     * If we've been provided an explicit target box it means we're animating back\n                     * to this previous parent. So we can make a relative box by comparing to the previous\n                     * parent's layout\n                     */\n                    if (targetBox) {\n                        parentLayout = prevParent.getLayoutState().layout;\n                    }\n                    /**\n                     * Likewise if we've been provided an explicit origin box it means we're\n                     * animating out from a different element. So we should figure out where that was\n                     * on screen relative to the new parent element.\n                     */\n                    if (originBox &&\n                        !checkIfParentHasChanged(prevParent, projectionParent) &&\n                        prevParent.prevViewportBox) {\n                        prevParentViewportBox = prevParent.prevViewportBox;\n                    }\n                }\n                if (prevParentViewportBox &&\n                    isProvidedCorrectDataForRelativeSharedLayout(prevParent, originBox, targetBox)) {\n                    isRelative = true;\n                    origin = calcRelativeOffset(prevParentViewportBox, origin);\n                    target = calcRelativeOffset(parentLayout, target);\n                }\n            }\n            var boxHasMoved = hasMoved(origin, target);\n            var animations = eachAxis(function (axis) {\n                var _a, _b;\n                /**\n                 * If layout is set to \"position\", we can resize the origin box based on the target\n                 * box and only animate its position.\n                 */\n                if (layout === \"position\") {\n                    var targetLength = target[axis].max - target[axis].min;\n                    origin[axis].max = origin[axis].min + targetLength;\n                }\n                if (visualElement.projection.isTargetLocked) {\n                    return;\n                }\n                else if (visibilityAction !== undefined) {\n                    visualElement.setVisibility(visibilityAction === exports.VisibilityAction.Show);\n                }\n                else if (boxHasMoved) {\n                    // If the box has moved, animate between it's current visual state and its\n                    // final state\n                    return _this.animateAxis(axis, target[axis], origin[axis], tslib.__assign(tslib.__assign({}, config), { isRelative: isRelative }));\n                }\n                else {\n                    (_b = (_a = _this.stopAxisAnimation)[axis]) === null || _b === void 0 ? void 0 : _b.call(_a);\n                    // If the box has remained in the same place, immediately set the axis target\n                    // to the final desired state\n                    return visualElement.setProjectionTargetAxis(axis, target[axis].min, target[axis].max, isRelative);\n                }\n            });\n            // Force a render to ensure there's no flash of uncorrected bounding box.\n            visualElement.syncRender();\n            /**\n             * If this visualElement isn't present (ie it's been removed from the tree by the user but\n             * kept in by the tree by AnimatePresence) then call safeToRemove when all axis animations\n             * have successfully finished.\n             */\n            return Promise.all(animations).then(function () {\n                _this.isAnimatingTree = false;\n                onComplete && onComplete();\n                visualElement.notifyLayoutAnimationComplete();\n            });\n        };\n        return _this;\n    }\n    Animate.prototype.componentDidMount = function () {\n        var _this = this;\n        var visualElement = this.props.visualElement;\n        visualElement.animateMotionValue = startAnimation;\n        visualElement.enableLayoutProjection();\n        this.unsubLayoutReady = visualElement.onLayoutUpdate(this.animate);\n        visualElement.layoutSafeToRemove = function () { return _this.safeToRemove(); };\n        addScaleCorrection(defaultScaleCorrectors);\n    };\n    Animate.prototype.componentWillUnmount = function () {\n        var _this = this;\n        this.unsubLayoutReady();\n        eachAxis(function (axis) { var _a, _b; return (_b = (_a = _this.stopAxisAnimation)[axis]) === null || _b === void 0 ? void 0 : _b.call(_a); });\n    };\n    /**\n     * TODO: This manually performs animations on the visualElement's layout progress\n     * values. It'd be preferable to amend the startLayoutAxisAnimation\n     * API to accept more custom animations like this.\n     */\n    Animate.prototype.animateAxis = function (axis, target, origin, _a) {\n        var _this = this;\n        var _b, _c;\n        var _d = _a === void 0 ? {} : _a, transition = _d.transition, isRelative = _d.isRelative;\n        /**\n         * If we're not animating to a new target, don't run this animation\n         */\n        if (this.isAnimating[axis] &&\n            axisIsEqual(target, this.currentAnimationTarget[axis])) {\n            return;\n        }\n        (_c = (_b = this.stopAxisAnimation)[axis]) === null || _c === void 0 ? void 0 : _c.call(_b);\n        this.isAnimating[axis] = true;\n        var visualElement = this.props.visualElement;\n        var frameTarget = this.frameTarget[axis];\n        var layoutProgress = visualElement.getProjectionAnimationProgress()[axis];\n        /**\n         * Set layout progress back to 0. We set it twice to hard-reset any velocity that might\n         * be re-incoporated into a subsequent spring animation.\n         */\n        layoutProgress.clearListeners();\n        layoutProgress.set(0);\n        layoutProgress.set(0);\n        /**\n         * Create an animation function to run once per frame. This will tween the visual bounding box from\n         * origin to target using the latest progress value.\n         */\n        var frame = function () {\n            // Convert the latest layoutProgress, which is a value from 0-1000, into a 0-1 progress\n            var p = layoutProgress.get() / progressTarget;\n            // Tween the axis and update the visualElement with the latest values\n            tweenAxis(frameTarget, origin, target, p);\n            visualElement.setProjectionTargetAxis(axis, frameTarget.min, frameTarget.max, isRelative);\n        };\n        // Synchronously run a frame to ensure there's no flash of the uncorrected bounding box.\n        frame();\n        // Create a function to stop animation on this specific axis\n        var unsubscribeProgress = layoutProgress.onChange(frame);\n        this.stopAxisAnimation[axis] = function () {\n            _this.isAnimating[axis] = false;\n            layoutProgress.stop();\n            unsubscribeProgress();\n        };\n        this.currentAnimationTarget[axis] = target;\n        var layoutTransition = transition ||\n            visualElement.getDefaultTransition() ||\n            defaultLayoutTransition;\n        // Start the animation on this axis\n        var animation = startAnimation(axis === \"x\" ? \"layoutX\" : \"layoutY\", layoutProgress, progressTarget, layoutTransition && getValueTransition(layoutTransition, \"layout\")).then(this.stopAxisAnimation[axis]);\n        return animation;\n    };\n    Animate.prototype.safeToRemove = function () {\n        var _a, _b;\n        (_b = (_a = this.props).safeToRemove) === null || _b === void 0 ? void 0 : _b.call(_a);\n    };\n    Animate.prototype.render = function () {\n        return null;\n    };\n    return Animate;\n}(React__namespace.Component));\nfunction AnimateLayoutContextProvider(props) {\n    var _a = tslib.__read(usePresence(), 2), safeToRemove = _a[1];\n    return React__namespace.createElement(Animate, tslib.__assign({}, props, { safeToRemove: safeToRemove }));\n}\nfunction hasMoved(a, b) {\n    return (!isZeroBox(a) &&\n        !isZeroBox(b) &&\n        (!axisIsEqual(a.x, b.x) || !axisIsEqual(a.y, b.y)));\n}\nvar zeroAxis = { min: 0, max: 0 };\nfunction isZeroBox(a) {\n    return axisIsEqual(a.x, zeroAxis) && axisIsEqual(a.y, zeroAxis);\n}\nfunction axisIsEqual(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nvar defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction isProvidedCorrectDataForRelativeSharedLayout(prevParent, originBox, targetBox) {\n    return prevParent || (!prevParent && !(originBox || targetBox));\n}\n\n/**\n * Default handlers for batching VisualElements\n */\nvar defaultHandler = {\n    layoutReady: function (child) { return child.notifyLayoutReady(); },\n};\n/**\n * Create a batcher to process VisualElements\n */\nfunction createBatcher() {\n    var queue = new Set();\n    return {\n        add: function (child) { return queue.add(child); },\n        flush: function (_a) {\n            var _b = _a === void 0 ? defaultHandler : _a, layoutReady = _b.layoutReady, parent = _b.parent;\n            batchLayout(function (read, write) {\n                var order = Array.from(queue).sort(compareByDepth);\n                var ancestors = parent\n                    ? collectProjectingAncestors(parent)\n                    : [];\n                write(function () {\n                    var allElements = tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(ancestors)), tslib.__read(order));\n                    allElements.forEach(function (element) { return element.resetTransform(); });\n                });\n                read(function () {\n                    order.forEach(updateLayoutMeasurement);\n                });\n                write(function () {\n                    ancestors.forEach(function (element) { return element.restoreTransform(); });\n                    order.forEach(layoutReady);\n                });\n                read(function () {\n                    /**\n                     * After all children have started animating, ensure any Entering components are set to Present.\n                     * If we add deferred animations (set up all animations and then start them in two loops) this\n                     * could be moved to the start loop. But it needs to happen after all the animations configs\n                     * are generated in AnimateSharedLayout as this relies on presence data\n                     */\n                    order.forEach(function (child) {\n                        if (child.isPresent)\n                            child.presence = Presence.Present;\n                    });\n                });\n                write(function () {\n                    /**\n                     * Starting these animations will have queued jobs on the frame loop. In some situations,\n                     * like when removing an element, these will be processed too late after the DOM is manipulated,\n                     * leaving a flash of incorrectly-projected content. By manually flushing these jobs\n                     * we ensure there's no flash.\n                     */\n                    sync.flushSync.preRender();\n                    sync.flushSync.render();\n                });\n                read(function () {\n                    /**\n                     * Schedule a callback at the end of the following frame to assign the latest projection\n                     * box to the prevViewportBox snapshot. Once global batching is in place this could be run\n                     * synchronously. But for now it ensures that if any nested `AnimateSharedLayout` top-level\n                     * child attempts to calculate its previous relative position against a prevViewportBox\n                     * it will be against its latest projection box instead, as the snapshot is useless beyond this\n                     * render.\n                     */\n                    sync__default['default'].postRender(function () {\n                        return order.forEach(assignProjectionToSnapshot);\n                    });\n                    queue.clear();\n                });\n            });\n            // TODO: Need to find a layout-synchronous way of flushing this\n            flushLayout();\n        },\n    };\n}\nfunction assignProjectionToSnapshot(child) {\n    child.prevViewportBox = child.projection.target;\n}\n\nvar SharedLayoutContext = React.createContext(createBatcher());\n/**\n * @internal\n */\nvar FramerTreeLayoutContext = React.createContext(createBatcher());\nfunction isSharedLayout(context) {\n    return !!context.forceUpdate;\n}\n\n/**\n * This component is responsible for scheduling the measuring of the motion component\n */\nvar Measure = /** @class */ (function (_super) {\n    tslib.__extends(Measure, _super);\n    function Measure() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * If this is a child of a SyncContext, register the VisualElement with it on mount.\n     */\n    Measure.prototype.componentDidMount = function () {\n        var _a = this.props, syncLayout = _a.syncLayout, framerSyncLayout = _a.framerSyncLayout, visualElement = _a.visualElement;\n        isSharedLayout(syncLayout) && syncLayout.register(visualElement);\n        isSharedLayout(framerSyncLayout) &&\n            framerSyncLayout.register(visualElement);\n        visualElement.onUnmount(function () {\n            if (isSharedLayout(syncLayout)) {\n                syncLayout.remove(visualElement);\n            }\n            if (isSharedLayout(framerSyncLayout)) {\n                framerSyncLayout.remove(visualElement);\n            }\n        });\n    };\n    /**\n     * If this is a child of a SyncContext, notify it that it needs to re-render. It will then\n     * handle the snapshotting.\n     *\n     * If it is stand-alone component, add it to the batcher.\n     */\n    Measure.prototype.getSnapshotBeforeUpdate = function () {\n        var _a = this.props, syncLayout = _a.syncLayout, visualElement = _a.visualElement;\n        if (isSharedLayout(syncLayout)) {\n            syncLayout.syncUpdate();\n        }\n        else {\n            snapshotViewportBox(visualElement);\n            syncLayout.add(visualElement);\n        }\n        return null;\n    };\n    Measure.prototype.componentDidUpdate = function () {\n        var syncLayout = this.props.syncLayout;\n        if (!isSharedLayout(syncLayout))\n            syncLayout.flush();\n    };\n    Measure.prototype.render = function () {\n        return null;\n    };\n    return Measure;\n}(React__default['default'].Component));\nfunction MeasureContextProvider(props) {\n    var syncLayout = React.useContext(SharedLayoutContext);\n    var framerSyncLayout = React.useContext(FramerTreeLayoutContext);\n    return (React__default['default'].createElement(Measure, tslib.__assign({}, props, { syncLayout: syncLayout, framerSyncLayout: framerSyncLayout })));\n}\n\nvar layoutAnimations = {\n    measureLayout: MeasureContextProvider,\n    layoutAnimation: AnimateLayoutContextProvider,\n};\n\nvar createProjectionState = function () { return ({\n    isEnabled: false,\n    isHydrated: false,\n    isTargetLocked: false,\n    target: axisBox(),\n    targetFinal: axisBox(),\n}); };\nfunction createLayoutState() {\n    return {\n        isHydrated: false,\n        layout: axisBox(),\n        layoutCorrected: axisBox(),\n        treeScale: { x: 1, y: 1 },\n        delta: delta(),\n        deltaFinal: delta(),\n        deltaTransform: \"\",\n    };\n}\nvar zeroLayout = createLayoutState();\n\n/**\n * Build a transform style that takes a calculated delta between the element's current\n * space on screen and projects it into the desired space.\n */\nfunction buildLayoutProjectionTransform(_a, treeScale, latestTransform) {\n    var x = _a.x, y = _a.y;\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    var xTranslate = x.translate / treeScale.x;\n    var yTranslate = y.translate / treeScale.y;\n    var transform = \"translate3d(\" + xTranslate + \"px, \" + yTranslate + \"px, 0) \";\n    if (latestTransform) {\n        var rotate = latestTransform.rotate, rotateX = latestTransform.rotateX, rotateY = latestTransform.rotateY;\n        if (rotate)\n            transform += \"rotate(\" + rotate + \") \";\n        if (rotateX)\n            transform += \"rotateX(\" + rotateX + \") \";\n        if (rotateY)\n            transform += \"rotateY(\" + rotateY + \") \";\n    }\n    transform += \"scale(\" + x.scale + \", \" + y.scale + \")\";\n    return !latestTransform && transform === identityProjection ? \"\" : transform;\n}\n/**\n * Take the calculated delta origin and apply it as a transform string.\n */\nfunction buildLayoutProjectionTransformOrigin(_a) {\n    var deltaFinal = _a.deltaFinal;\n    return deltaFinal.x.origin * 100 + \"% \" + deltaFinal.y.origin * 100 + \"% 0\";\n}\nvar identityProjection = buildLayoutProjectionTransform(zeroLayout.delta, zeroLayout.treeScale, { x: 1, y: 1 });\n\nvar names = [\n    \"LayoutMeasure\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutUpdate\",\n    \"ViewportBoxUpdate\",\n    \"Update\",\n    \"Render\",\n    \"AnimationComplete\",\n    \"LayoutAnimationComplete\",\n    \"AnimationStart\",\n    \"SetAxisTarget\",\n    \"Unmount\",\n];\nfunction createLifecycles() {\n    var managers = names.map(function () { return new SubscriptionManager(); });\n    var propSubscriptions = {};\n    var lifecycles = {\n        clearAllListeners: function () { return managers.forEach(function (manager) { return manager.clear(); }); },\n        updatePropListeners: function (props) {\n            return names.forEach(function (name) {\n                var _a;\n                (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions);\n                var on = \"on\" + name;\n                var propListener = props[on];\n                if (propListener) {\n                    propSubscriptions[name] = lifecycles[on](propListener);\n                }\n            });\n        },\n    };\n    managers.forEach(function (manager, i) {\n        lifecycles[\"on\" + names[i]] = function (handler) { return manager.add(handler); };\n        lifecycles[\"notify\" + names[i]] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return manager.notify.apply(manager, tslib.__spreadArray([], tslib.__read(args)));\n        };\n    });\n    return lifecycles;\n}\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    var _a;\n    for (var key in next) {\n        var nextValue = next[key];\n        var prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping to a new motion value, create a new motion value\n             * from that\n             */\n            element.addValue(key, motionValue(nextValue));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                var existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (var key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nfunction updateLayoutDeltas(_a, _b, treePath, transformOrigin) {\n    var delta = _a.delta, layout = _a.layout, layoutCorrected = _a.layoutCorrected, treeScale = _a.treeScale;\n    var target = _b.target;\n    /**\n     * Reset the corrected box with the latest values from box, as we're then going\n     * to perform mutative operations on it.\n     */\n    resetBox(layoutCorrected, layout);\n    /**\n     * Apply all the parent deltas to this box to produce the corrected box. This\n     * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n     */\n    applyTreeDeltas(layoutCorrected, treeScale, treePath);\n    /**\n     * Update the delta between the corrected box and the target box before user-set transforms were applied.\n     * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n     * for our layout reprojection, but still allow them to be scaled correctly by the user.\n     * It might be that to simplify this we may want to accept that user-set scale is also corrected\n     * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n     * to allow people to choose whether these styles are corrected based on just the\n     * layout reprojection or the final bounding box.\n     */\n    updateBoxDelta(delta, layoutCorrected, target, transformOrigin);\n}\n\nvar FlatTree = /** @class */ (function () {\n    function FlatTree() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    FlatTree.prototype.add = function (child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    };\n    FlatTree.prototype.remove = function (child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    };\n    FlatTree.prototype.forEach = function (callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    };\n    return FlatTree;\n}());\n\nfunction setCurrentViewportBox(visualElement) {\n    var projectionParent = visualElement.getProjectionParent();\n    if (!projectionParent) {\n        visualElement.rebaseProjectionTarget();\n        return;\n    }\n    var relativeOffset = calcRelativeOffset(projectionParent.getLayoutState().layout, visualElement.getLayoutState().layout);\n    eachAxis(function (axis) {\n        visualElement.setProjectionTargetAxis(axis, relativeOffset[axis].min, relativeOffset[axis].max, true);\n    });\n}\n\nvar visualElement = function (_a) {\n    var _b = _a.treeType, treeType = _b === void 0 ? \"\" : _b, build = _a.build, getBaseTarget = _a.getBaseTarget, makeTargetAnimatable = _a.makeTargetAnimatable, measureViewportBox = _a.measureViewportBox, renderInstance = _a.render, readValueFromInstance = _a.readValueFromInstance, resetTransform = _a.resetTransform, restoreTransform = _a.restoreTransform, removeValueFromRenderState = _a.removeValueFromRenderState, sortNodePosition = _a.sortNodePosition, scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps;\n    return function (_a, options) {\n        var parent = _a.parent, props = _a.props, presenceId = _a.presenceId, blockInitialAnimation = _a.blockInitialAnimation, visualState = _a.visualState;\n        if (options === void 0) { options = {}; }\n        var latestValues = visualState.latestValues, renderState = visualState.renderState;\n        /**\n         * The instance of the render-specific node that will be hydrated by the\n         * exposed React ref. So for example, this visual element can host a\n         * HTMLElement, plain object, or Three.js object. The functions provided\n         * in VisualElementConfig allow us to interface with this instance.\n         */\n        var instance;\n        /**\n         * Manages the subscriptions for a visual element's lifecycle, for instance\n         * onRender and onViewportBoxUpdate.\n         */\n        var lifecycles = createLifecycles();\n        /**\n         *\n         */\n        var projection = createProjectionState();\n        /**\n         * A reference to the nearest projecting parent. This is either\n         * undefined if we haven't looked for the nearest projecting parent,\n         * false if there is no parent performing layout projection, or a reference\n         * to the projecting parent.\n         */\n        var projectionParent;\n        /**\n         * This is a reference to the visual state of the \"lead\" visual element.\n         * Usually, this will be this visual element. But if it shares a layoutId\n         * with other visual elements, only one of them will be designated lead by\n         * AnimateSharedLayout. All the other visual elements will take on the visual\n         * appearance of the lead while they crossfade to it.\n         */\n        var leadProjection = projection;\n        var leadLatestValues = latestValues;\n        var unsubscribeFromLeadVisualElement;\n        /**\n         * The latest layout measurements and calculated projections. This\n         * is seperate from the target projection data in visualState as\n         * many visual elements might point to the same piece of visualState as\n         * a target, whereas they might each have different layouts and thus\n         * projection calculations needed to project into the same viewport box.\n         */\n        var layoutState = createLayoutState();\n        /**\n         *\n         */\n        var crossfader;\n        /**\n         * Keep track of whether the viewport box has been updated since the\n         * last time the layout projection was re-calculated.\n         */\n        var hasViewportBoxUpdated = false;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        var values = new Map();\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        var valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        var prevMotionValues = {};\n        /**\n         * x/y motion values that track the progress of initiated layout\n         * animations.\n         *\n         * TODO: Target for removal\n         */\n        var projectionTargetProgress;\n        /**\n         * When values are removed from all animation props we need to search\n         * for a fallback value to animate to. These values are tracked in baseTarget.\n         */\n        var baseTarget = tslib.__assign({}, latestValues);\n        // Internal methods ========================\n        /**\n         * On mount, this will be hydrated with a callback to disconnect\n         * this visual element from its parent on unmount.\n         */\n        var removeFromVariantTree;\n        /**\n         *\n         */\n        function render() {\n            if (!instance)\n                return;\n            if (element.isProjectionReady()) {\n                /**\n                 * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n                 * This is the final box that we will then project into by calculating a transform delta and\n                 * applying it to the corrected box.\n                 */\n                applyBoxTransforms(leadProjection.targetFinal, leadProjection.target, leadLatestValues);\n                /**\n                 * Update the delta between the corrected box and the final target box, after\n                 * user-set transforms are applied to it. This will be used by the renderer to\n                 * create a transform style that will reproject the element from its actual layout\n                 * into the desired bounding box.\n                 */\n                updateBoxDelta(layoutState.deltaFinal, layoutState.layoutCorrected, leadProjection.targetFinal, latestValues);\n            }\n            triggerBuild();\n            renderInstance(instance, renderState);\n        }\n        function triggerBuild() {\n            var valuesToRender = latestValues;\n            if (crossfader && crossfader.isActive()) {\n                var crossfadedValues = crossfader.getCrossfadeState(element);\n                if (crossfadedValues)\n                    valuesToRender = crossfadedValues;\n            }\n            build(element, renderState, valuesToRender, leadProjection, layoutState, options, props);\n        }\n        function update() {\n            lifecycles.notifyUpdate(latestValues);\n        }\n        function updateLayoutProjection() {\n            if (!element.isProjectionReady())\n                return;\n            var delta = layoutState.delta, treeScale = layoutState.treeScale;\n            var prevTreeScaleX = treeScale.x;\n            var prevTreeScaleY = treeScale.y;\n            var prevDeltaTransform = layoutState.deltaTransform;\n            updateLayoutDeltas(layoutState, leadProjection, element.path, latestValues);\n            hasViewportBoxUpdated &&\n                element.notifyViewportBoxUpdate(leadProjection.target, delta);\n            hasViewportBoxUpdated = false;\n            var deltaTransform = buildLayoutProjectionTransform(delta, treeScale);\n            if (deltaTransform !== prevDeltaTransform ||\n                // Also compare calculated treeScale, for values that rely on this only for scale correction\n                prevTreeScaleX !== treeScale.x ||\n                prevTreeScaleY !== treeScale.y) {\n                element.scheduleRender();\n            }\n            layoutState.deltaTransform = deltaTransform;\n        }\n        function updateTreeLayoutProjection() {\n            element.layoutTree.forEach(fireUpdateLayoutProjection);\n        }\n        /**\n         *\n         */\n        function bindToMotionValue(key, value) {\n            var removeOnChange = value.onChange(function (latestValue) {\n                latestValues[key] = latestValue;\n                props.onUpdate && sync__default['default'].update(update, false, true);\n            });\n            var removeOnRenderRequest = value.onRenderRequest(element.scheduleRender);\n            valueSubscriptions.set(key, function () {\n                removeOnChange();\n                removeOnRenderRequest();\n            });\n        }\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        var initialMotionValues = scrapeMotionValuesFromProps(props);\n        for (var key in initialMotionValues) {\n            var value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        var isControllingVariants = checkIfControllingVariants(props);\n        var isVariantNode = checkIfVariantNode(props);\n        var element = tslib.__assign(tslib.__assign({ treeType: treeType, \n            /**\n             * This is a mirror of the internal instance prop, which keeps\n             * VisualElement type-compatible with React's RefObject.\n             */\n            current: null, \n            /**\n             * The depth of this visual element within the visual element tree.\n             */\n            depth: parent ? parent.depth + 1 : 0, parent: parent, children: new Set(), \n            /**\n             * An ancestor path back to the root visual element. This is used\n             * by layout projection to quickly recurse back up the tree.\n             */\n            path: parent ? tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(parent.path)), [parent]) : [], layoutTree: parent ? parent.layoutTree : new FlatTree(), \n            /**\n             *\n             */\n            presenceId: presenceId,\n            projection: projection, \n            /**\n             * If this component is part of the variant tree, it should track\n             * any children that are also part of the tree. This is essentially\n             * a shadow tree to simplify logic around how to stagger over children.\n             */\n            variantChildren: isVariantNode ? new Set() : undefined, \n            /**\n             * Whether this instance is visible. This can be changed imperatively\n             * by AnimateSharedLayout, is analogous to CSS's visibility in that\n             * hidden elements should take up layout, and needs enacting by the configured\n             * render function.\n             */\n            isVisible: undefined, \n            /**\n             * Normally, if a component is controlled by a parent's variants, it can\n             * rely on that ancestor to trigger animations further down the tree.\n             * However, if a component is created after its parent is mounted, the parent\n             * won't trigger that mount animation so the child needs to.\n             *\n             * TODO: This might be better replaced with a method isParentMounted\n             */\n            manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()), \n            /**\n             * This can be set by AnimatePresence to force components that mount\n             * at the same time as it to mount as if they have initial={false} set.\n             */\n            blockInitialAnimation: blockInitialAnimation, \n            /**\n             * Determine whether this component has mounted yet. This is mostly used\n             * by variant children to determine whether they need to trigger their\n             * own animations on mount.\n             */\n            isMounted: function () { return Boolean(instance); }, mount: function (newInstance) {\n                instance = element.current = newInstance;\n                element.pointTo(element);\n                if (isVariantNode && parent && !isControllingVariants) {\n                    removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);\n                }\n                parent === null || parent === void 0 ? void 0 : parent.children.add(element);\n            },\n            /**\n             *\n             */\n            unmount: function () {\n                sync.cancelSync.update(update);\n                sync.cancelSync.render(render);\n                sync.cancelSync.preRender(element.updateLayoutProjection);\n                valueSubscriptions.forEach(function (remove) { return remove(); });\n                element.stopLayoutAnimation();\n                element.layoutTree.remove(element);\n                removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();\n                parent === null || parent === void 0 ? void 0 : parent.children.delete(element);\n                unsubscribeFromLeadVisualElement === null || unsubscribeFromLeadVisualElement === void 0 ? void 0 : unsubscribeFromLeadVisualElement();\n                lifecycles.clearAllListeners();\n            },\n            /**\n             * Add a child visual element to our set of children.\n             */\n            addVariantChild: function (child) {\n                var _a;\n                var closestVariantNode = element.getClosestVariantNode();\n                if (closestVariantNode) {\n                    (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n                    return function () { return closestVariantNode.variantChildren.delete(child); };\n                }\n            },\n            sortNodePosition: function (other) {\n                /**\n                 * If these nodes aren't even of the same type we can't compare their depth.\n                 */\n                if (!sortNodePosition || treeType !== other.treeType)\n                    return 0;\n                return sortNodePosition(element.getInstance(), other.getInstance());\n            }, \n            /**\n             * Returns the closest variant node in the tree starting from\n             * this visual element.\n             */\n            getClosestVariantNode: function () {\n                return isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode();\n            }, \n            /**\n             * A method that schedules an update to layout projections throughout\n             * the tree. We inherit from the parent so there's only ever one\n             * job scheduled on the next frame - that of the root visual element.\n             */\n            scheduleUpdateLayoutProjection: parent\n                ? parent.scheduleUpdateLayoutProjection\n                : function () {\n                    return sync__default['default'].preRender(element.updateTreeLayoutProjection, false, true);\n                }, \n            /**\n             * Expose the latest layoutId prop.\n             */\n            getLayoutId: function () { return props.layoutId; }, \n            /**\n             * Returns the current instance.\n             */\n            getInstance: function () { return instance; }, \n            /**\n             * Get/set the latest static values.\n             */\n            getStaticValue: function (key) { return latestValues[key]; }, setStaticValue: function (key, value) { return (latestValues[key] = value); }, \n            /**\n             * Returns the latest motion value state. Currently only used to take\n             * a snapshot of the visual element - perhaps this can return the whole\n             * visual state\n             */\n            getLatestValues: function () { return latestValues; }, \n            /**\n             * Set the visiblity of the visual element. If it's changed, schedule\n             * a render to reflect these changes.\n             */\n            setVisibility: function (visibility) {\n                if (element.isVisible === visibility)\n                    return;\n                element.isVisible = visibility;\n                element.scheduleRender();\n            },\n            /**\n             * Make a target animatable by Popmotion. For instance, if we're\n             * trying to animate width from 100px to 100vw we need to measure 100vw\n             * in pixels to determine what we really need to animate to. This is also\n             * pluggable to support Framer's custom value types like Color,\n             * and CSS variables.\n             */\n            makeTargetAnimatable: function (target, canMutate) {\n                if (canMutate === void 0) { canMutate = true; }\n                return makeTargetAnimatable(element, target, props, canMutate);\n            },\n            // Motion values ========================\n            /**\n             * Add a motion value and bind it to this visual element.\n             */\n            addValue: function (key, value) {\n                // Remove existing value if it exists\n                if (element.hasValue(key))\n                    element.removeValue(key);\n                values.set(key, value);\n                latestValues[key] = value.get();\n                bindToMotionValue(key, value);\n            },\n            /**\n             * Remove a motion value and unbind any active subscriptions.\n             */\n            removeValue: function (key) {\n                var _a;\n                values.delete(key);\n                (_a = valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n                valueSubscriptions.delete(key);\n                delete latestValues[key];\n                removeValueFromRenderState(key, renderState);\n            }, \n            /**\n             * Check whether we have a motion value for this key\n             */\n            hasValue: function (key) { return values.has(key); }, \n            /**\n             * Get a motion value for this key. If called with a default\n             * value, we'll create one if none exists.\n             */\n            getValue: function (key, defaultValue) {\n                var value = values.get(key);\n                if (value === undefined && defaultValue !== undefined) {\n                    value = motionValue(defaultValue);\n                    element.addValue(key, value);\n                }\n                return value;\n            }, \n            /**\n             * Iterate over our motion values.\n             */\n            forEachValue: function (callback) { return values.forEach(callback); }, \n            /**\n             * If we're trying to animate to a previously unencountered value,\n             * we need to check for it in our state and as a last resort read it\n             * directly from the instance (which might have performance implications).\n             */\n            readValue: function (key) { var _a; return (_a = latestValues[key]) !== null && _a !== void 0 ? _a : readValueFromInstance(instance, key, options); }, \n            /**\n             * Set the base target to later animate back to. This is currently\n             * only hydrated on creation and when we first read a value.\n             */\n            setBaseTarget: function (key, value) {\n                baseTarget[key] = value;\n            },\n            /**\n             * Find the base target for a value thats been removed from all animation\n             * props.\n             */\n            getBaseTarget: function (key) {\n                if (getBaseTarget) {\n                    var target = getBaseTarget(props, key);\n                    if (target !== undefined && !isMotionValue(target))\n                        return target;\n                }\n                return baseTarget[key];\n            } }, lifecycles), { \n            /**\n             * Build the renderer state based on the latest visual state.\n             */\n            build: function () {\n                triggerBuild();\n                return renderState;\n            },\n            /**\n             * Schedule a render on the next animation frame.\n             */\n            scheduleRender: function () {\n                sync__default['default'].render(render, false, true);\n            }, \n            /**\n             * Synchronously fire render. It's prefered that we batch renders but\n             * in many circumstances, like layout measurement, we need to run this\n             * synchronously. However in those instances other measures should be taken\n             * to batch reads/writes.\n             */\n            syncRender: render, \n            /**\n             * Update the provided props. Ensure any newly-added motion values are\n             * added to our map, old ones removed, and listeners updated.\n             */\n            setProps: function (newProps) {\n                props = newProps;\n                lifecycles.updatePropListeners(newProps);\n                prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps(props), prevMotionValues);\n            }, getProps: function () { return props; }, \n            // Variants ==============================\n            /**\n             * Returns the variant definition with a given name.\n             */\n            getVariant: function (name) { var _a; return (_a = props.variants) === null || _a === void 0 ? void 0 : _a[name]; }, \n            /**\n             * Returns the defined default transition on this component.\n             */\n            getDefaultTransition: function () { return props.transition; }, \n            /**\n             * Used by child variant nodes to get the closest ancestor variant props.\n             */\n            getVariantContext: function (startAtParent) {\n                if (startAtParent === void 0) { startAtParent = false; }\n                if (startAtParent)\n                    return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();\n                if (!isControllingVariants) {\n                    var context_1 = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};\n                    if (props.initial !== undefined) {\n                        context_1.initial = props.initial;\n                    }\n                    return context_1;\n                }\n                var context = {};\n                for (var i = 0; i < numVariantProps; i++) {\n                    var name_1 = variantProps[i];\n                    var prop = props[name_1];\n                    if (isVariantLabel(prop) || prop === false) {\n                        context[name_1] = prop;\n                    }\n                }\n                return context;\n            },\n            // Layout projection ==============================\n            /**\n             * Enable layout projection for this visual element. Won't actually\n             * occur until we also have hydrated layout measurements.\n             */\n            enableLayoutProjection: function () {\n                projection.isEnabled = true;\n                element.layoutTree.add(element);\n            },\n            /**\n             * Lock the projection target, for instance when dragging, so\n             * nothing else can try and animate it.\n             */\n            lockProjectionTarget: function () {\n                projection.isTargetLocked = true;\n            },\n            unlockProjectionTarget: function () {\n                element.stopLayoutAnimation();\n                projection.isTargetLocked = false;\n            }, getLayoutState: function () { return layoutState; }, setCrossfader: function (newCrossfader) {\n                crossfader = newCrossfader;\n            }, isProjectionReady: function () {\n                return projection.isEnabled &&\n                    projection.isHydrated &&\n                    layoutState.isHydrated;\n            }, \n            /**\n             * Start a layout animation on a given axis.\n             */\n            startLayoutAnimation: function (axis, transition, isRelative) {\n                if (isRelative === void 0) { isRelative = false; }\n                var progress = element.getProjectionAnimationProgress()[axis];\n                var _a = isRelative\n                    ? projection.relativeTarget[axis]\n                    : projection.target[axis], min = _a.min, max = _a.max;\n                var length = max - min;\n                progress.clearListeners();\n                progress.set(min);\n                progress.set(min); // Set twice to hard-reset velocity\n                progress.onChange(function (v) {\n                    element.setProjectionTargetAxis(axis, v, v + length, isRelative);\n                });\n                return element.animateMotionValue(axis, progress, 0, transition);\n            },\n            /**\n             * Stop layout animations.\n             */\n            stopLayoutAnimation: function () {\n                eachAxis(function (axis) {\n                    return element.getProjectionAnimationProgress()[axis].stop();\n                });\n            },\n            /**\n             * Measure the current viewport box with or without transforms.\n             * Only measures axis-aligned boxes, rotate and skew must be manually\n             * removed with a re-render to work.\n             */\n            measureViewportBox: function (withTransform) {\n                if (withTransform === void 0) { withTransform = true; }\n                var viewportBox = measureViewportBox(instance, options);\n                if (!withTransform)\n                    removeBoxTransforms(viewportBox, latestValues);\n                return viewportBox;\n            },\n            /**\n             * Get the motion values tracking the layout animations on each\n             * axis. Lazy init if not already created.\n             */\n            getProjectionAnimationProgress: function () {\n                projectionTargetProgress || (projectionTargetProgress = {\n                    x: motionValue(0),\n                    y: motionValue(0),\n                });\n                return projectionTargetProgress;\n            },\n            /**\n             * Update the projection of a single axis. Schedule an update to\n             * the tree layout projection.\n             */\n            setProjectionTargetAxis: function (axis, min, max, isRelative) {\n                if (isRelative === void 0) { isRelative = false; }\n                var target;\n                if (isRelative) {\n                    if (!projection.relativeTarget) {\n                        projection.relativeTarget = axisBox();\n                    }\n                    target = projection.relativeTarget[axis];\n                }\n                else {\n                    projection.relativeTarget = undefined;\n                    target = projection.target[axis];\n                }\n                projection.isHydrated = true;\n                target.min = min;\n                target.max = max;\n                // Flag that we want to fire the onViewportBoxUpdate event handler\n                hasViewportBoxUpdated = true;\n                lifecycles.notifySetAxisTarget();\n            },\n            /**\n             * Rebase the projection target on top of the provided viewport box\n             * or the measured layout. This ensures that non-animating elements\n             * don't fall out of sync differences in measurements vs projections\n             * after a page scroll or other relayout.\n             */\n            rebaseProjectionTarget: function (force, box) {\n                if (box === void 0) { box = layoutState.layout; }\n                var _a = element.getProjectionAnimationProgress(), x = _a.x, y = _a.y;\n                var shouldRebase = !projection.relativeTarget &&\n                    !projection.isTargetLocked &&\n                    !x.isAnimating() &&\n                    !y.isAnimating();\n                if (force || shouldRebase) {\n                    eachAxis(function (axis) {\n                        var _a = box[axis], min = _a.min, max = _a.max;\n                        element.setProjectionTargetAxis(axis, min, max);\n                    });\n                }\n            },\n            /**\n             * Notify the visual element that its layout is up-to-date.\n             * Currently Animate.tsx uses this to check whether a layout animation\n             * needs to be performed.\n             */\n            notifyLayoutReady: function (config) {\n                setCurrentViewportBox(element);\n                element.notifyLayoutUpdate(layoutState.layout, element.prevViewportBox || layoutState.layout, config);\n            }, \n            /**\n             * Temporarily reset the transform of the instance.\n             */\n            resetTransform: function () { return resetTransform(element, instance, props); }, restoreTransform: function () { return restoreTransform(instance, renderState); }, updateLayoutProjection: updateLayoutProjection,\n            updateTreeLayoutProjection: function () {\n                element.layoutTree.forEach(fireResolveRelativeTargetBox);\n                /**\n                 * Schedule the projection updates at the end of the current preRender\n                 * step. This will ensure that all layout trees will first resolve\n                 * relative projection boxes into viewport boxes, and *then*\n                 * update projections.\n                 */\n                sync__default['default'].preRender(updateTreeLayoutProjection, false, true);\n                // sync.postRender(() => element.scheduleUpdateLayoutProjection())\n            },\n            getProjectionParent: function () {\n                if (projectionParent === undefined) {\n                    var foundParent = false;\n                    // Search backwards through the tree path\n                    for (var i = element.path.length - 1; i >= 0; i--) {\n                        var ancestor = element.path[i];\n                        if (ancestor.projection.isEnabled) {\n                            foundParent = ancestor;\n                            break;\n                        }\n                    }\n                    projectionParent = foundParent;\n                }\n                return projectionParent;\n            },\n            resolveRelativeTargetBox: function () {\n                var relativeParent = element.getProjectionParent();\n                if (!projection.relativeTarget || !relativeParent)\n                    return;\n                calcRelativeBox(projection, relativeParent.projection);\n                if (isDraggable(relativeParent)) {\n                    var target = projection.target;\n                    applyBoxTransforms(target, target, relativeParent.getLatestValues());\n                }\n            },\n            shouldResetTransform: function () {\n                return Boolean(props._layoutResetTransform);\n            },\n            /**\n             *\n             */\n            pointTo: function (newLead) {\n                leadProjection = newLead.projection;\n                leadLatestValues = newLead.getLatestValues();\n                /**\n                 * Subscribe to lead component's layout animations\n                 */\n                unsubscribeFromLeadVisualElement === null || unsubscribeFromLeadVisualElement === void 0 ? void 0 : unsubscribeFromLeadVisualElement();\n                unsubscribeFromLeadVisualElement = popmotion.pipe(newLead.onSetAxisTarget(element.scheduleUpdateLayoutProjection), newLead.onLayoutAnimationComplete(function () {\n                    var _a;\n                    if (element.isPresent) {\n                        element.presence = Presence.Present;\n                    }\n                    else {\n                        (_a = element.layoutSafeToRemove) === null || _a === void 0 ? void 0 : _a.call(element);\n                    }\n                }));\n            }, \n            // TODO: Clean this up\n            isPresent: true, presence: Presence.Entering });\n        return element;\n    };\n};\nfunction fireResolveRelativeTargetBox(child) {\n    child.resolveRelativeTargetBox();\n}\nfunction fireUpdateLayoutProjection(child) {\n    child.updateLayoutProjection();\n}\nvar variantProps = tslib.__spreadArray([\"initial\"], tslib.__read(variantPriorityOrder));\nvar numVariantProps = variantProps.length;\n\nvar positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nvar isPositionalKey = function (key) { return positionalKeys.has(key); };\nvar hasPositionalKey = function (target) {\n    return Object.keys(target).some(isPositionalKey);\n};\nvar setAndResetVelocity = function (value, to) {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nvar isNumOrPxType = function (v) {\n    return v === styleValueTypes.number || v === styleValueTypes.px;\n};\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nvar getPosFromMatrix = function (matrix, pos) {\n    return parseFloat(matrix.split(\", \")[pos]);\n};\nvar getTranslateFromMatrix = function (pos2, pos3) { return function (_bbox, _a) {\n    var transform = _a.transform;\n    if (transform === \"none\" || !transform)\n        return 0;\n    var matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        var matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n}; };\nvar transformKeys = new Set([\"x\", \"y\", \"z\"]);\nvar nonTranslationalTransformKeys = transformProps.filter(function (key) { return !transformKeys.has(key); });\nfunction removeNonTranslationalTransform(visualElement) {\n    var removedTransforms = [];\n    nonTranslationalTransformKeys.forEach(function (key) {\n        var value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.syncRender();\n    return removedTransforms;\n}\nvar positionalValues = {\n    // Dimensions\n    width: function (_a) {\n        var x = _a.x;\n        return x.max - x.min;\n    },\n    height: function (_a) {\n        var y = _a.y;\n        return y.max - y.min;\n    },\n    top: function (_bbox, _a) {\n        var top = _a.top;\n        return parseFloat(top);\n    },\n    left: function (_bbox, _a) {\n        var left = _a.left;\n        return parseFloat(left);\n    },\n    bottom: function (_a, _b) {\n        var y = _a.y;\n        var top = _b.top;\n        return parseFloat(top) + (y.max - y.min);\n    },\n    right: function (_a, _b) {\n        var x = _a.x;\n        var left = _b.left;\n        return parseFloat(left) + (x.max - x.min);\n    },\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nvar convertChangedValueTypes = function (target, visualElement, changedKeys) {\n    var originBbox = visualElement.measureViewportBox();\n    var element = visualElement.getInstance();\n    var elementComputedStyle = getComputedStyle(element);\n    var display = elementComputedStyle.display, top = elementComputedStyle.top, left = elementComputedStyle.left, bottom = elementComputedStyle.bottom, right = elementComputedStyle.right, transform = elementComputedStyle.transform;\n    var originComputedStyle = { top: top, left: left, bottom: bottom, right: right, transform: transform };\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.syncRender();\n    var targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach(function (key) {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        var value = visualElement.getValue(key);\n        setAndResetVelocity(value, positionalValues[key](originBbox, originComputedStyle));\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nvar checkAndConvertChangedValueTypes = function (visualElement, target, origin, transitionEnd) {\n    if (origin === void 0) { origin = {}; }\n    if (transitionEnd === void 0) { transitionEnd = {}; }\n    target = tslib.__assign({}, target);\n    transitionEnd = tslib.__assign({}, transitionEnd);\n    var targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    var removedTransformValues = [];\n    var hasAttemptedToRemoveTransformValues = false;\n    var changedValueTypeKeys = [];\n    targetPositionalKeys.forEach(function (key) {\n        var value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        var from = origin[key];\n        var to = target[key];\n        var fromType = findDimensionValueType(from);\n        var toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            var numKeyframes = to.length;\n            for (var i = to[0] === null ? 1 : 0; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    heyListen.invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    heyListen.invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                var current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === styleValueTypes.px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues = removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        var convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(function (_a) {\n                var _b = tslib.__read(_a, 2), key = _b[0], value = _b[1];\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.syncRender();\n        return { target: convertedTarget, transitionEnd: transitionEnd };\n    }\n    else {\n        return { target: target, transitionEnd: transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target: target, transitionEnd: transitionEnd };\n}\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nvar parseDomVariant = function (visualElement, target, origin, transitionEnd) {\n    var resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nfunction getComputedStyle$1(element) {\n    return window.getComputedStyle(element);\n}\nvar htmlConfig = {\n    treeType: \"dom\",\n    readValueFromInstance: function (domElement, key) {\n        if (isTransformProp(key)) {\n            var defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            var computedStyle = getComputedStyle$1(domElement);\n            return ((isCSSVariable$1(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0);\n        }\n    },\n    sortNodePosition: function (a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    },\n    getBaseTarget: function (props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    },\n    measureViewportBox: function (element, _a) {\n        var transformPagePoint = _a.transformPagePoint;\n        return getBoundingBox(element, transformPagePoint);\n    },\n    /**\n     * Reset the transform on the current Element. This is called as part\n     * of a batched process across the entire layout tree. To remove this write\n     * cycle it'd be interesting to see if it's possible to \"undo\" all the current\n     * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms\n     * works\n     */\n    resetTransform: function (element, domElement, props) {\n        var transformTemplate = props.transformTemplate;\n        domElement.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        // Ensure that whatever happens next, we restore our transform on the next frame\n        element.scheduleRender();\n    },\n    restoreTransform: function (instance, mutableState) {\n        instance.style.transform = mutableState.style.transform;\n    },\n    removeValueFromRenderState: function (key, _a) {\n        var vars = _a.vars, style = _a.style;\n        delete vars[key];\n        delete style[key];\n    },\n    /**\n     * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`\n     * can be animated by Motion.\n     */\n    makeTargetAnimatable: function (element, _a, _b, isMounted) {\n        var transformValues = _b.transformValues;\n        if (isMounted === void 0) { isMounted = true; }\n        var transition = _a.transition, transitionEnd = _a.transitionEnd, target = tslib.__rest(_a, [\"transition\", \"transitionEnd\"]);\n        var origin = getOrigin(target, transition || {}, element);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(element, target, origin);\n            var parsed = parseDomVariant(element, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return tslib.__assign({ transition: transition,\n            transitionEnd: transitionEnd }, target);\n    },\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,\n    build: function (element, renderState, latestValues, projection, layoutState, options, props) {\n        if (element.isVisible !== undefined) {\n            renderState.style.visibility = element.isVisible\n                ? \"visible\"\n                : \"hidden\";\n        }\n        var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;\n        buildHTMLStyles(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : undefined, isProjectionTranform\n            ? buildLayoutProjectionTransformOrigin\n            : undefined);\n    },\n    render: renderHTML,\n};\nvar htmlVisualElement = visualElement(htmlConfig);\n\nvar svgVisualElement = visualElement(tslib.__assign(tslib.__assign({}, htmlConfig), { getBaseTarget: function (props, key) {\n        return props[key];\n    },\n    readValueFromInstance: function (domElement, key) {\n        var _a;\n        if (isTransformProp(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return domElement.getAttribute(key);\n    },\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    build: function (_element, renderState, latestValues, projection, layoutState, options, props) {\n        var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;\n        buildSVGAttrs(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : undefined, isProjectionTranform\n            ? buildLayoutProjectionTransformOrigin\n            : undefined);\n    }, render: renderSVG }));\n\nvar createDomVisualElement = function (Component, options) {\n    return isSVGComponent(Component)\n        ? svgVisualElement(options, { enableHardwareAcceleration: false })\n        : htmlVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nvar featureBundle = tslib.__assign(tslib.__assign(tslib.__assign(tslib.__assign({}, animations), gestureAnimations), drag), layoutAnimations);\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nvar motion = /*@__PURE__*/ createMotionProxy(function (Component, config) {\n    return createDomMotionConfig(Component, config, featureBundle, createDomVisualElement);\n});\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement));\n}\n\n/**\n * @public\n */\nvar m = createMotionProxy(createDomMotionConfig);\n\nfunction useForceUpdate() {\n    var unloadingRef = React.useRef(false);\n    var _a = tslib.__read(React.useState(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];\n    useUnmountEffect(function () { return (unloadingRef.current = true); });\n    return React.useCallback(function () {\n        !unloadingRef.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n}\n\nvar presenceId = 0;\nfunction getPresenceId() {\n    var id = presenceId;\n    presenceId++;\n    return id;\n}\nvar PresenceChild = function (_a) {\n    var children = _a.children, initial = _a.initial, isPresent = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom, presenceAffectsLayout = _a.presenceAffectsLayout;\n    var presenceChildren = useConstant(newChildrenMap);\n    var id = useConstant(getPresenceId);\n    var context = React.useMemo(function () { return ({\n        id: id,\n        initial: initial,\n        isPresent: isPresent,\n        custom: custom,\n        onExitComplete: function (childId) {\n            presenceChildren.set(childId, true);\n            var allComplete = true;\n            presenceChildren.forEach(function (isComplete) {\n                if (!isComplete)\n                    allComplete = false;\n            });\n            allComplete && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n        },\n        register: function (childId) {\n            presenceChildren.set(childId, false);\n            return function () { return presenceChildren.delete(childId); };\n        },\n    }); }, \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    React.useMemo(function () {\n        presenceChildren.forEach(function (_, key) { return presenceChildren.set(key, false); });\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React__namespace.useEffect(function () {\n        !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n    }, [isPresent]);\n    return (React__namespace.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nfunction getChildKey(child) {\n    return child.key || \"\";\n}\nfunction updateChildLookup(children, allChildren) {\n    var seenChildren = process.env.NODE_ENV !== \"production\" ? new Set() : null;\n    children.forEach(function (child) {\n        var key = getChildKey(child);\n        if (process.env.NODE_ENV !== \"production\" && seenChildren) {\n            if (seenChildren.has(key)) {\n                console.warn(\"Children of AnimatePresence require unique keys. \\\"\" + key + \"\\\" is a duplicate.\");\n            }\n            seenChildren.add(key);\n        }\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    var filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    React.Children.forEach(children, function (child) {\n        if (React.isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * @library\n *\n * Any `Frame` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { Frame, AnimatePresence } from 'framer'\n *\n * // As items are added and removed from `items`\n * export function Items({ items }) {\n *   return (\n *     <AnimatePresence>\n *       {items.map(item => (\n *         <Frame\n *           key={item.id}\n *           initial={{ opacity: 0 }}\n *           animate={{ opacity: 1 }}\n *           exit={{ opacity: 0 }}\n *         />\n *       ))}\n *     </AnimatePresence>\n *   )\n * }\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * @motion\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nvar AnimatePresence = function (_a) {\n    var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter, _c = _a.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? true : _c;\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    var forceRender = useForceUpdate();\n    var layoutContext = React.useContext(SharedLayoutContext);\n    if (isSharedLayout(layoutContext)) {\n        forceRender = layoutContext.forceUpdate;\n    }\n    var isInitialRender = React.useRef(true);\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    var filteredChildren = onlyElements(children);\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    var presentChildren = React.useRef(filteredChildren);\n    // A lookup table to quickly reference components by key\n    var allChildren = React.useRef(new Map())\n        .current;\n    // A living record of all currently exiting components.\n    var exiting = React.useRef(new Set()).current;\n    updateChildLookup(filteredChildren, allChildren);\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    if (isInitialRender.current) {\n        isInitialRender.current = false;\n        return (React__namespace.createElement(React__namespace.Fragment, null, filteredChildren.map(function (child) { return (React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout }, child)); })));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    var childrenToRender = tslib.__spreadArray([], tslib.__read(filteredChildren));\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    var presentKeys = presentChildren.current.map(getChildKey);\n    var targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    var numPresent = presentKeys.length;\n    for (var i = 0; i < numPresent; i++) {\n        var key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n        else {\n            // In case this key has re-entered, remove from the exiting list\n            exiting.delete(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (exitBeforeEnter && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach(function (key) {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        var child = allChildren.get(key);\n        if (!child)\n            return;\n        var insertionIndex = presentKeys.indexOf(key);\n        var onExit = function () {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            var removeIndex = presentChildren.current.findIndex(function (presentChild) { return presentChild.key === key; });\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map(function (child) {\n        var key = child.key;\n        return exiting.has(key) ? (child) : (React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    presentChildren.current = childrenToRender;\n    if (process.env.NODE_ENV !== \"production\" &&\n        exitBeforeEnter &&\n        childrenToRender.length > 1) {\n        console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n    }\n    return (React__namespace.createElement(React__namespace.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map(function (child) { return React.cloneElement(child); })));\n};\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition) {\n    if (transition === void 0) { transition = {}; }\n    var value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: function () { return value.stop(); },\n    };\n}\n\nfunction createCrossfader() {\n    /**\n     * The current state of the crossfade as a value between 0 and 1\n     */\n    var progress = motionValue(1);\n    var options = {\n        lead: undefined,\n        follow: undefined,\n        crossfadeOpacity: false,\n        preserveFollowOpacity: false,\n    };\n    var prevOptions = tslib.__assign({}, options);\n    var leadState = {};\n    var followState = {};\n    /**\n     *\n     */\n    var isActive = false;\n    /**\n     *\n     */\n    var finalCrossfadeFrame = null;\n    /**\n     * Framestamp of the last frame we updated values at.\n     */\n    var prevUpdate = 0;\n    function startCrossfadeAnimation(target, transition) {\n        var lead = options.lead, follow = options.follow;\n        isActive = true;\n        finalCrossfadeFrame = null;\n        var hasUpdated = false;\n        var onUpdate = function () {\n            hasUpdated = true;\n            lead && lead.scheduleRender();\n            follow && follow.scheduleRender();\n        };\n        var onComplete = function () {\n            isActive = false;\n            /**\n             * If the crossfade animation is no longer active, flag a frame\n             * that we're still allowed to crossfade\n             */\n            finalCrossfadeFrame = sync.getFrameData().timestamp;\n        };\n        transition = transition && getValueTransition(transition, \"crossfade\");\n        return animate(progress, target, tslib.__assign(tslib.__assign({}, transition), { onUpdate: onUpdate, onComplete: function () {\n                if (!hasUpdated) {\n                    progress.set(target);\n                    /**\n                     * If we never ran an update, for instance if this was an instant transition, fire a\n                     * simulated final frame to ensure the crossfade gets applied correctly.\n                     */\n                    sync__default['default'].read(onComplete);\n                }\n                else {\n                    onComplete();\n                }\n                onUpdate();\n            } }));\n    }\n    function updateCrossfade() {\n        var _a, _b;\n        /**\n         * We only want to compute the crossfade once per frame, so we\n         * compare the previous update framestamp with the current frame\n         * and early return if they're the same.\n         */\n        var timestamp = sync.getFrameData().timestamp;\n        var lead = options.lead, follow = options.follow;\n        if (timestamp === prevUpdate || !lead)\n            return;\n        prevUpdate = timestamp;\n        /**\n         * Merge each component's latest values into our crossfaded state\n         * before crossfading.\n         */\n        var latestLeadValues = lead.getLatestValues();\n        Object.assign(leadState, latestLeadValues);\n        var latestFollowValues = follow\n            ? follow.getLatestValues()\n            : options.prevValues;\n        Object.assign(followState, latestFollowValues);\n        var p = progress.get();\n        /**\n         * Crossfade the opacity between the two components. This will result\n         * in a different opacity for each component.\n         */\n        var leadTargetOpacity = (_a = latestLeadValues.opacity) !== null && _a !== void 0 ? _a : 1;\n        var followTargetOpacity = (_b = latestFollowValues === null || latestFollowValues === void 0 ? void 0 : latestFollowValues.opacity) !== null && _b !== void 0 ? _b : 1;\n        if (options.crossfadeOpacity && follow) {\n            leadState.opacity = popmotion.mix(\n            /**\n             * If the follow child has been completely hidden we animate\n             * this opacity from its previous opacity, but otherwise from completely transparent.\n             */\n            follow.isVisible !== false ? 0 : followTargetOpacity, leadTargetOpacity, easeCrossfadeIn(p));\n            followState.opacity = options.preserveFollowOpacity\n                ? followTargetOpacity\n                : popmotion.mix(followTargetOpacity, 0, easeCrossfadeOut(p));\n        }\n        else if (!follow) {\n            leadState.opacity = popmotion.mix(followTargetOpacity, leadTargetOpacity, p);\n        }\n        mixValues(leadState, followState, latestLeadValues, latestFollowValues || {}, Boolean(follow), p);\n    }\n    return {\n        isActive: function () {\n            return leadState &&\n                (isActive || sync.getFrameData().timestamp === finalCrossfadeFrame);\n        },\n        fromLead: function (transition) {\n            return startCrossfadeAnimation(0, transition);\n        },\n        toLead: function (transition) {\n            var initialProgress = 0;\n            if (!options.prevValues && !options.follow) {\n                /**\n                 * If we're not coming from anywhere, start at the end of the animation.\n                 */\n                initialProgress = 1;\n            }\n            else if (prevOptions.lead === options.follow &&\n                prevOptions.follow === options.lead) {\n                /**\n                 * If we're swapping follow/lead we can reverse the progress\n                 */\n                initialProgress = 1 - progress.get();\n            }\n            progress.set(initialProgress);\n            return startCrossfadeAnimation(1, transition);\n        },\n        reset: function () { return progress.set(1); },\n        stop: function () { return progress.stop(); },\n        getCrossfadeState: function (element) {\n            updateCrossfade();\n            if (element === options.lead) {\n                return leadState;\n            }\n            else if (element === options.follow) {\n                return followState;\n            }\n        },\n        setOptions: function (newOptions) {\n            prevOptions = options;\n            options = newOptions;\n            leadState = {};\n            followState = {};\n        },\n        getLatestValues: function () {\n            return leadState;\n        },\n    };\n}\nvar easeCrossfadeIn = compress(0, 0.5, popmotion.circOut);\nvar easeCrossfadeOut = compress(0.5, 0.95, popmotion.linear);\nfunction compress(min, max, easing) {\n    return function (p) {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(popmotion.progress(min, max, p));\n    };\n}\nvar borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nvar numBorders = borders.length;\nfunction mixValues(leadState, followState, latestLeadValues, latestFollowValues, hasFollowElement, p) {\n    /**\n     * Mix border radius\n     */\n    for (var i = 0; i < numBorders; i++) {\n        var borderLabel = \"border\" + borders[i] + \"Radius\";\n        var followRadius = getRadius(latestFollowValues, borderLabel);\n        var leadRadius = getRadius(latestLeadValues, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        /**\n         * Currently we're only crossfading between numerical border radius.\n         * It would be possible to crossfade between percentages for a little\n         * extra bundle size.\n         */\n        if (typeof followRadius === \"number\" &&\n            typeof leadRadius === \"number\") {\n            var radius = Math.max(popmotion.mix(followRadius, leadRadius, p), 0);\n            leadState[borderLabel] = followState[borderLabel] = radius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (latestFollowValues.rotate || latestLeadValues.rotate) {\n        var rotate = popmotion.mix(latestFollowValues.rotate || 0, latestLeadValues.rotate || 0, p);\n        leadState.rotate = followState.rotate = rotate;\n    }\n    /**\n     * We only want to mix the background color if there's a follow element\n     * that we're not crossfading opacity between. For instance with switch\n     * AnimateSharedLayout animations, this helps the illusion of a continuous\n     * element being animated but also cuts down on the number of paints triggered\n     * for elements where opacity is doing that work for us.\n     */\n    if (!hasFollowElement &&\n        latestLeadValues.backgroundColor &&\n        latestFollowValues.backgroundColor) {\n        /**\n         * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n         * We could probably create a mixer that runs at the start of the animation but\n         * the idea behind the crossfader is that it runs dynamically between two potentially\n         * changing targets (ie opacity or borderRadius may be animating independently via variants)\n         */\n        leadState.backgroundColor = followState.backgroundColor = popmotion.mixColor(latestFollowValues.backgroundColor, latestLeadValues.backgroundColor)(p);\n    }\n}\nfunction getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n\nfunction layoutStack() {\n    var stack = new Set();\n    var state = { leadIsExiting: false };\n    var prevState = tslib.__assign({}, state);\n    var prevValues;\n    var prevViewportBox;\n    var prevDragCursor;\n    var crossfader = createCrossfader();\n    var needsCrossfadeAnimation = false;\n    function getFollowViewportBox() {\n        return state.follow ? state.follow.prevViewportBox : prevViewportBox;\n    }\n    function getFollowLayout() {\n        var _a;\n        return (_a = state.follow) === null || _a === void 0 ? void 0 : _a.getLayoutState().layout;\n    }\n    return {\n        add: function (element) {\n            element.setCrossfader(crossfader);\n            stack.add(element);\n            /**\n             * Hydrate new element with previous drag position if we have one\n             */\n            if (prevDragCursor)\n                element.prevDragCursor = prevDragCursor;\n            if (!state.lead)\n                state.lead = element;\n        },\n        remove: function (element) {\n            stack.delete(element);\n        },\n        getLead: function () { return state.lead; },\n        updateSnapshot: function () {\n            if (!state.lead)\n                return;\n            prevValues = crossfader.isActive()\n                ? crossfader.getLatestValues()\n                : state.lead.getLatestValues();\n            prevViewportBox = state.lead.prevViewportBox;\n            var dragControls = elementDragControls.get(state.lead);\n            if (dragControls && dragControls.isDragging) {\n                prevDragCursor = dragControls.cursorProgress;\n            }\n        },\n        clearSnapshot: function () {\n            prevDragCursor = prevViewportBox = undefined;\n        },\n        updateLeadAndFollow: function () {\n            var _a;\n            prevState = tslib.__assign({}, state);\n            var lead;\n            var follow;\n            var order = Array.from(stack);\n            for (var i = order.length; i--; i >= 0) {\n                var element = order[i];\n                if (lead)\n                    follow !== null && follow !== void 0 ? follow : (follow = element);\n                lead !== null && lead !== void 0 ? lead : (lead = element);\n                if (lead && follow)\n                    break;\n            }\n            state.lead = lead;\n            state.follow = follow;\n            state.leadIsExiting = ((_a = state.lead) === null || _a === void 0 ? void 0 : _a.presence) === Presence.Exiting;\n            crossfader.setOptions({\n                lead: lead,\n                follow: follow,\n                prevValues: prevValues,\n                crossfadeOpacity: (follow === null || follow === void 0 ? void 0 : follow.isPresenceRoot) || (lead === null || lead === void 0 ? void 0 : lead.isPresenceRoot),\n            });\n            if (\n            // Don't crossfade if we've just animated back from lead and switched the\n            // old follow to the new lead.\n            state.lead !== prevState.follow &&\n                (prevState.lead !== state.lead ||\n                    prevState.leadIsExiting !== state.leadIsExiting)) {\n                needsCrossfadeAnimation = true;\n            }\n        },\n        animate: function (child, shouldCrossfade) {\n            var _a;\n            if (shouldCrossfade === void 0) { shouldCrossfade = false; }\n            if (child === state.lead) {\n                if (shouldCrossfade) {\n                    /**\n                     * Point a lead to itself in case it was previously pointing\n                     * to a different visual element\n                     */\n                    child.pointTo(state.lead);\n                }\n                else {\n                    child.setVisibility(true);\n                }\n                var config = {};\n                var prevParent = (_a = state.follow) === null || _a === void 0 ? void 0 : _a.getProjectionParent();\n                if (prevParent) {\n                    /**\n                     * We'll use this to determine if the element or its layoutId has been reparented.\n                     */\n                    config.prevParent = prevParent;\n                }\n                if (child.presence === Presence.Entering) {\n                    config.originBox = getFollowViewportBox();\n                }\n                else if (child.presence === Presence.Exiting) {\n                    config.targetBox = getFollowLayout();\n                }\n                if (needsCrossfadeAnimation) {\n                    needsCrossfadeAnimation = false;\n                    var transition = child.getDefaultTransition();\n                    child.presence === Presence.Entering\n                        ? crossfader.toLead(transition)\n                        : crossfader.fromLead(transition);\n                }\n                child.notifyLayoutReady(config);\n            }\n            else {\n                if (shouldCrossfade) {\n                    state.lead && child.pointTo(state.lead);\n                }\n                else {\n                    child.setVisibility(false);\n                }\n            }\n        },\n    };\n}\n\nfunction resetRotate(child) {\n    // If there's no detected rotation values, we can early return without a forced render.\n    var hasRotate = false;\n    // Keep a record of all the values we've reset\n    var resetValues = {};\n    // Check the rotate value of all axes and reset to 0\n    for (var i = 0; i < transformAxes.length; i++) {\n        var axis = transformAxes[i];\n        var key = \"rotate\" + axis;\n        // If this rotation doesn't exist as a motion value, then we don't\n        // need to reset it\n        if (!child.hasValue(key) || child.getStaticValue(key) === 0)\n            continue;\n        hasRotate = true;\n        // Record the rotation and then temporarily set it to 0\n        resetValues[key] = child.getStaticValue(key);\n        child.setStaticValue(key, 0);\n    }\n    // If there's no rotation values, we don't need to do any more.\n    if (!hasRotate)\n        return;\n    // Force a render of this element to apply the transform with all rotations\n    // set to 0.\n    child.syncRender();\n    // Put back all the values we reset\n    for (var key in resetValues) {\n        child.setStaticValue(key, resetValues[key]);\n    }\n    // Schedule a render for the next frame. This ensures we won't visually\n    // see the element with the reset rotate value applied.\n    child.scheduleRender();\n}\n\n/**\n * @public\n */\nvar AnimateSharedLayout = /** @class */ (function (_super) {\n    tslib.__extends(AnimateSharedLayout, _super);\n    function AnimateSharedLayout() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * A list of all the children in the shared layout\n         */\n        _this.children = new Set();\n        /**\n         * As animate components with a defined `layoutId` are added/removed to the tree,\n         * we store them in order. When one is added, it will animate out from the\n         * previous one, and when it's removed, it'll animate to the previous one.\n         */\n        _this.stacks = new Map();\n        /**\n         * Track whether the component has mounted. If it hasn't, the presence of added children\n         * are set to Present, whereas if it has they're considered Entering\n         */\n        _this.hasMounted = false;\n        /**\n         * Track whether we already have an update scheduled. If we don't, we'll run snapshots\n         * and schedule one.\n         */\n        _this.updateScheduled = false;\n        /**\n         * Tracks whether we already have a render scheduled. If we don't, we'll force one with this.forceRender\n         */\n        _this.renderScheduled = false;\n        /**\n         * The methods provided to all children in the shared layout tree.\n         */\n        _this.syncContext = tslib.__assign(tslib.__assign({}, createBatcher()), { syncUpdate: function (force) { return _this.scheduleUpdate(force); }, forceUpdate: function () {\n                // By copying syncContext to itself, when this component re-renders it'll also re-render\n                // all children subscribed to the SharedLayout context.\n                _this.syncContext = tslib.__assign({}, _this.syncContext);\n                _this.scheduleUpdate(true);\n            }, register: function (child) { return _this.addChild(child); }, remove: function (child) { return _this.removeChild(child); } });\n        return _this;\n    }\n    AnimateSharedLayout.prototype.componentDidMount = function () {\n        this.hasMounted = true;\n    };\n    AnimateSharedLayout.prototype.componentDidUpdate = function () {\n        this.startLayoutAnimation();\n    };\n    AnimateSharedLayout.prototype.shouldComponentUpdate = function () {\n        this.renderScheduled = true;\n        return true;\n    };\n    AnimateSharedLayout.prototype.startLayoutAnimation = function () {\n        var _this = this;\n        /**\n         * Reset update and render scheduled status\n         */\n        this.renderScheduled = this.updateScheduled = false;\n        var type = this.props.type;\n        /**\n         * Update presence metadata based on the latest AnimatePresence status.\n         * This is a kind of goofy way of dealing with this, perhaps there's a better model to find.\n         */\n        this.children.forEach(function (child) {\n            if (!child.isPresent) {\n                child.presence = Presence.Exiting;\n            }\n            else if (child.presence !== Presence.Entering) {\n                child.presence =\n                    child.presence === Presence.Exiting\n                        ? Presence.Entering\n                        : Presence.Present;\n            }\n        });\n        this.updateStacks();\n        /**\n         * Create a handler which we can use to flush the children animations\n         */\n        var handler = {\n            layoutReady: function (child) {\n                if (child.getLayoutId() !== undefined) {\n                    var stack = _this.getStack(child);\n                    stack.animate(child, type === \"crossfade\");\n                }\n                else {\n                    child.notifyLayoutReady();\n                }\n            },\n            parent: this.context.visualElement,\n        };\n        /**\n         * Shared layout animations can be used without the AnimateSharedLayout wrapping component.\n         * This requires some co-ordination across components to stop layout thrashing\n         * and ensure measurements are taken at the correct time.\n         *\n         * Here we use that same mechanism of schedule/flush.\n         */\n        this.children.forEach(function (child) { return _this.syncContext.add(child); });\n        this.syncContext.flush(handler);\n        /**\n         * Clear snapshots so subsequent rerenders don't retain memory of outgoing components\n         */\n        this.stacks.forEach(function (stack) { return stack.clearSnapshot(); });\n    };\n    AnimateSharedLayout.prototype.updateStacks = function () {\n        this.stacks.forEach(function (stack) { return stack.updateLeadAndFollow(); });\n    };\n    AnimateSharedLayout.prototype.scheduleUpdate = function (force) {\n        if (force === void 0) { force = false; }\n        if (!(force || !this.updateScheduled))\n            return;\n        /**\n         * Flag we've scheduled an update\n         */\n        this.updateScheduled = true;\n        /**\n         * Write: Reset transforms so bounding boxes can be accurately measured.\n         */\n        this.children.forEach(function (child) {\n            resetRotate(child);\n            if (child.shouldResetTransform())\n                child.resetTransform();\n        });\n        /**\n         * Read: Snapshot children\n         */\n        this.children.forEach(snapshotViewportBox);\n        /**\n         * Every child keeps a local snapshot, but we also want to record\n         * snapshots of the visible children as, if they're are being removed\n         * in this render, we can still access them.\n         *\n         * TODO: What would be better here is doing a single loop where we\n         * only snapshotViewportBoxes of undefined layoutIds and then one for each stack\n         */\n        this.stacks.forEach(function (stack) { return stack.updateSnapshot(); });\n        /**\n         * Force a rerender by setting state if we aren't already going to render.\n         */\n        if (force || !this.renderScheduled) {\n            this.renderScheduled = true;\n            this.forceUpdate();\n        }\n    };\n    AnimateSharedLayout.prototype.addChild = function (child) {\n        this.children.add(child);\n        this.addToStack(child);\n        child.presence = this.hasMounted ? Presence.Entering : Presence.Present;\n    };\n    AnimateSharedLayout.prototype.removeChild = function (child) {\n        this.scheduleUpdate();\n        this.children.delete(child);\n        this.removeFromStack(child);\n    };\n    AnimateSharedLayout.prototype.addToStack = function (child) {\n        var stack = this.getStack(child);\n        stack === null || stack === void 0 ? void 0 : stack.add(child);\n    };\n    AnimateSharedLayout.prototype.removeFromStack = function (child) {\n        var stack = this.getStack(child);\n        stack === null || stack === void 0 ? void 0 : stack.remove(child);\n    };\n    /**\n     * Return a stack of animate children based on the provided layoutId.\n     * Will create a stack if none currently exists with that layoutId.\n     */\n    AnimateSharedLayout.prototype.getStack = function (child) {\n        var id = child.getLayoutId();\n        if (id === undefined)\n            return;\n        // Create stack if it doesn't already exist\n        !this.stacks.has(id) && this.stacks.set(id, layoutStack());\n        return this.stacks.get(id);\n    };\n    AnimateSharedLayout.prototype.render = function () {\n        return (React__namespace.createElement(SharedLayoutContext.Provider, { value: this.syncContext }, this.props.children));\n    };\n    AnimateSharedLayout.contextType = MotionContext;\n    return AnimateSharedLayout;\n}(React__namespace.Component));\n\n/**\n * `MotionConfig` is used to set configuration options for all children `motion` components.\n *\n * ```jsx\n * import { motion, MotionConfig } from \"framer-motion\"\n *\n * export function App() {\n *   return (\n *     <MotionConfig transition={{ type: \"spring\" }}>\n *       <motion.div animate={{ x: 100 }} />\n *     </MotionConfig>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction MotionConfig(_a) {\n    var children = _a.children, config = tslib.__rest(_a, [\"children\"]);\n    /**\n     * Inherit props from any parent MotionConfig components\n     */\n    config = tslib.__assign(tslib.__assign({}, React.useContext(MotionConfigContext)), config);\n    /**\n     * Don't allow isStatic to change between renders as it affects how many hooks\n     * motion components fire.\n     */\n    config.isStatic = useConstant(function () { return config.isStatic; });\n    /**\n     * Creating a new config context object will re-render every `motion` component\n     * every time it renders. So we only want to create a new one sparingly.\n     */\n    var transitionDependency = typeof config.transition === \"object\"\n        ? config.transition.toString()\n        : \"\";\n    var context = React.useMemo(function () { return config; }, [\n        transitionDependency,\n        config.transformPagePoint,\n    ]);\n    return (React__namespace.createElement(MotionConfigContext.Provider, { value: context }, children));\n}\n\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimations } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimations}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimations')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction LazyMotion(_a) {\n    var children = _a.children, features = _a.features, _b = _a.strict, strict = _b === void 0 ? false : _b;\n    var _c = tslib.__read(React.useState(!isLazyBundle(features)), 2), setIsLoaded = _c[1];\n    var loadedRenderer = React.useRef(undefined);\n    /**\n     * If this is a synchronous load, load features immediately\n     */\n    if (!isLazyBundle(features)) {\n        var renderer = features.renderer, loadedFeatures = tslib.__rest(features, [\"renderer\"]);\n        loadedRenderer.current = renderer;\n        loadFeatures(loadedFeatures);\n    }\n    React.useEffect(function () {\n        if (isLazyBundle(features)) {\n            features().then(function (_a) {\n                var renderer = _a.renderer, loadedFeatures = tslib.__rest(_a, [\"renderer\"]);\n                loadFeatures(loadedFeatures);\n                loadedRenderer.current = renderer;\n                setIsLoaded(true);\n            });\n        }\n    }, []);\n    return (React__namespace.createElement(LazyContext.Provider, { value: { renderer: loadedRenderer.current, strict: strict } }, children));\n}\nfunction isLazyBundle(features) {\n    return typeof features === \"function\";\n}\n\n/**\n * @public\n */\nvar domAnimation = tslib.__assign(tslib.__assign({ renderer: createDomVisualElement }, animations), gestureAnimations);\n\n/**\n * @public\n */\nvar domMax = tslib.__assign(tslib.__assign(tslib.__assign({}, domAnimation), drag), layoutAnimations);\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * @library\n *\n * ```jsx\n * export function MyComponent() {\n *   const scale = useMotionValue(1)\n *\n *   return <Frame scale={scale} />\n * }\n * ```\n *\n * @motion\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    var value = useConstant(function () { return motionValue(initial); });\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    var isStatic = React.useContext(MotionConfigContext).isStatic;\n    if (isStatic) {\n        var _a = tslib.__read(React.useState(initial), 2), setLatest_1 = _a[1];\n        React.useEffect(function () { return value.onChange(setLatest_1); }, []);\n    }\n    return value;\n}\n\nfunction useOnChange(value, callback) {\n    React.useEffect(function () {\n        if (isMotionValue(value))\n            return value.onChange(callback);\n    }, [callback]);\n}\nfunction useMultiOnChange(values, handler) {\n    React.useEffect(function () {\n        var subscriptions = values.map(function (value) { return value.onChange(handler); });\n        return function () { return subscriptions.forEach(function (unsubscribe) { return unsubscribe(); }); };\n    });\n}\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    var value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    var updateValue = function () { return value.set(combineValues()); };\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useMultiOnChange(values, function () { return sync__default['default'].update(updateValue, false, true); });\n    return value;\n}\n\n/**\n * Combine multiple motion values into a new one using a string template literal.\n *\n * ```jsx\n * import {\n *   motion,\n *   useSpring,\n *   useMotionValue,\n *   useMotionTemplate\n * } from \"framer-motion\"\n *\n * function Component() {\n *   const shadowX = useSpring(0)\n *   const shadowY = useMotionValue(0)\n *   const shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`\n *\n *   return <motion.div style={{ filter: shadow }} />\n * }\n * ```\n *\n * @public\n */\nfunction useMotionTemplate(fragments) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    /**\n     * Create a function that will build a string from the latest motion values.\n     */\n    var numFragments = fragments.length;\n    function buildValue() {\n        var output = \"\";\n        for (var i = 0; i < numFragments; i++) {\n            output += fragments[i];\n            var value = values[i];\n            if (value)\n                output += values[i].get();\n        }\n        return output;\n    }\n    return useCombineMotionValues(values, buildValue);\n}\n\nvar isCustomValueType = function (v) {\n    return typeof v === \"object\" && v.mix;\n};\nvar getMixer = function (v) { return (isCustomValueType(v) ? v.mix : undefined); };\nfunction transform() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var useImmediate = !Array.isArray(args[0]);\n    var argOffset = useImmediate ? 0 : -1;\n    var inputValue = args[0 + argOffset];\n    var inputRange = args[1 + argOffset];\n    var outputRange = args[2 + argOffset];\n    var options = args[3 + argOffset];\n    var interpolator = popmotion.interpolate(inputRange, outputRange, tslib.__assign({ mixer: getMixer(outputRange[0]) }, options));\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    var transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], function (_a) {\n            var _b = tslib.__read(_a, 1), latest = _b[0];\n            return transformer(latest);\n        });\n}\nfunction useListTransform(values, transformer) {\n    var latest = useConstant(function () { return []; });\n    return useCombineMotionValues(values, function () {\n        latest.length = 0;\n        var numValues = values.length;\n        for (var i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\nfunction useSpring(source, config) {\n    if (config === void 0) { config = {}; }\n    var isStatic = React.useContext(MotionConfigContext).isStatic;\n    var activeSpringAnimation = React.useRef(null);\n    var value = useMotionValue(isMotionValue(source) ? source.get() : source);\n    React.useMemo(function () {\n        return value.attach(function (v, set) {\n            /**\n             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n             * at that level, but this will work for now\n             */\n            if (isStatic)\n                return set(v);\n            if (activeSpringAnimation.current) {\n                activeSpringAnimation.current.stop();\n            }\n            activeSpringAnimation.current = popmotion.animate(tslib.__assign(tslib.__assign({ from: value.get(), to: v, velocity: value.getVelocity() }, config), { onUpdate: set }));\n            return value.get();\n        });\n    }, Object.values(config));\n    useOnChange(source, function (v) { return value.set(parseFloat(v)); });\n    return value;\n}\n\n/**\n * Creates a `MotionValue` that updates when the velocity of the provided `MotionValue` changes.\n *\n * ```javascript\n * const x = useMotionValue(0)\n * const xVelocity = useVelocity(x)\n * const xAcceleration = useVelocity(xVelocity)\n * ```\n *\n * @public\n */\nfunction useVelocity(value) {\n    var velocity = useMotionValue(value.getVelocity());\n    React.useEffect(function () {\n        return value.velocityUpdateSubscribers.add(function (newVelocity) {\n            velocity.set(newVelocity);\n        });\n    }, [value]);\n    return velocity;\n}\n\nfunction createScrollMotionValues() {\n    return {\n        scrollX: motionValue(0),\n        scrollY: motionValue(0),\n        scrollXProgress: motionValue(0),\n        scrollYProgress: motionValue(0),\n    };\n}\nfunction setProgress(offset, maxOffset, value) {\n    value.set(!offset || !maxOffset ? 0 : offset / maxOffset);\n}\nfunction createScrollUpdater(values, getOffsets) {\n    var update = function () {\n        var _a = getOffsets(), xOffset = _a.xOffset, yOffset = _a.yOffset, xMaxOffset = _a.xMaxOffset, yMaxOffset = _a.yMaxOffset;\n        // Set absolute positions\n        values.scrollX.set(xOffset);\n        values.scrollY.set(yOffset);\n        // Set 0-1 progress\n        setProgress(xOffset, xMaxOffset, values.scrollXProgress);\n        setProgress(yOffset, yMaxOffset, values.scrollYProgress);\n    };\n    update();\n    return update;\n}\n\nvar getElementScrollOffsets = function (element) { return function () {\n    return {\n        xOffset: element.scrollLeft,\n        yOffset: element.scrollTop,\n        xMaxOffset: element.scrollWidth - element.offsetWidth,\n        yMaxOffset: element.scrollHeight - element.offsetHeight,\n    };\n}; };\n/**\n * Returns MotionValues that update when the provided element scrolls:\n *\n * - `scrollX` — Horizontal scroll distance in pixels.\n * - `scrollY` — Vertical scroll distance in pixels.\n * - `scrollXProgress` — Horizontal scroll progress between `0` and `1`.\n * - `scrollYProgress` — Vertical scroll progress between `0` and `1`.\n *\n * This element must be set to `overflow: scroll` on either or both axes to report scroll offset.\n *\n * @library\n *\n * ```jsx\n * import * as React from \"react\"\n * import {\n *   Frame,\n *   useElementScroll,\n *   useTransform\n * } from \"framer\"\n *\n * export function MyComponent() {\n *   const ref = React.useRef()\n *   const { scrollYProgress } = useElementScroll(ref)\n *\n *   return (\n *     <Frame ref={ref}>\n *       <Frame scaleX={scrollYProgress} />\n *     </Frame>\n *   )\n * }\n * ```\n *\n * @motion\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const ref = useRef()\n *   const { scrollYProgress } = useElementScroll(ref)\n *\n *   return (\n *     <div ref={ref}>\n *       <motion.div style={{ scaleX: scrollYProgress }} />\n *     </div>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction useElementScroll(ref) {\n    var values = useConstant(createScrollMotionValues);\n    useIsomorphicLayoutEffect(function () {\n        var element = ref.current;\n        heyListen.invariant(!!element, \"ref provided to useScroll must be passed into a HTML element.\");\n        if (!element)\n            return;\n        var updateScrollValues = createScrollUpdater(values, getElementScrollOffsets(element));\n        var scrollListener = addDomEvent(element, \"scroll\", updateScrollValues, { passive: true });\n        var resizeListener = addDomEvent(element, \"resize\", updateScrollValues);\n        return function () {\n            scrollListener && scrollListener();\n            resizeListener && resizeListener();\n        };\n    }, []);\n    return values;\n}\n\nvar viewportScrollValues;\nfunction getViewportScrollOffsets() {\n    return {\n        xOffset: window.pageXOffset,\n        yOffset: window.pageYOffset,\n        xMaxOffset: document.body.clientWidth - window.innerWidth,\n        yMaxOffset: document.body.clientHeight - window.innerHeight,\n    };\n}\nvar hasListeners = false;\nfunction addEventListeners() {\n    hasListeners = true;\n    if (typeof window === \"undefined\")\n        return;\n    var updateScrollValues = createScrollUpdater(viewportScrollValues, getViewportScrollOffsets);\n    addDomEvent(window, \"scroll\", updateScrollValues, { passive: true });\n    addDomEvent(window, \"resize\", updateScrollValues);\n}\n/**\n * Returns MotionValues that update when the viewport scrolls:\n *\n * - `scrollX` — Horizontal scroll distance in pixels.\n * - `scrollY` — Vertical scroll distance in pixels.\n * - `scrollXProgress` — Horizontal scroll progress between `0` and `1`.\n * - `scrollYProgress` — Vertical scroll progress between `0` and `1`.\n *\n * **Warning:** Setting `body` or `html` to `height: 100%` or similar will break the `Progress`\n * values as this breaks the browser's capability to accurately measure the page length.\n *\n * @library\n *\n * ```jsx\n * import * as React from \"react\"\n * import {\n *   Frame,\n *   useViewportScroll,\n *   useTransform\n * } from \"framer\"\n *\n * export function MyComponent() {\n *   const { scrollYProgress } = useViewportScroll()\n *   return <Frame scaleX={scrollYProgress} />\n * }\n * ```\n *\n * @motion\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const { scrollYProgress } = useViewportScroll()\n *   return <motion.div style={{ scaleX: scrollYProgress }} />\n * }\n * ```\n *\n * @public\n */\nfunction useViewportScroll() {\n    /**\n     * Lazy-initialise the viewport scroll values\n     */\n    if (!viewportScrollValues) {\n        viewportScrollValues = createScrollMotionValues();\n    }\n    useIsomorphicLayoutEffect(function () {\n        !hasListeners && addEventListeners();\n    }, []);\n    return viewportScrollValues;\n}\n\n// Does this device prefer reduced motion? Returns `null` server-side.\nvar prefersReducedMotion;\nfunction initPrefersReducedMotion() {\n    prefersReducedMotion = motionValue(null);\n    if (typeof window === \"undefined\")\n        return;\n    if (window.matchMedia) {\n        var motionMediaQuery_1 = window.matchMedia(\"(prefers-reduced-motion)\");\n        var setReducedMotionPreferences = function () {\n            return prefersReducedMotion.set(motionMediaQuery_1.matches);\n        };\n        motionMediaQuery_1.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.set(false);\n    }\n}\n/**\n * A hook that returns `true` if we should be using reduced motion based on the current device's Reduced Motion setting.\n *\n * This can be used to implement changes to your UI based on Reduced Motion. For instance, replacing motion-sickness inducing\n * `x`/`y` animations with `opacity`, disabling the autoplay of background videos, or turning off parallax motion.\n *\n * It will actively respond to changes and re-render your components with the latest setting.\n *\n * ```jsx\n * export function Sidebar({ isOpen }) {\n *   const shouldReduceMotion = useReducedMotion()\n *   const closedX = shouldReduceMotion ? 0 : \"-100%\"\n *\n *   return (\n *     <motion.div animate={{\n *       opacity: isOpen ? 1 : 0,\n *       x: isOpen ? 0 : closedX\n *     }} />\n *   )\n * }\n * ```\n *\n * @return boolean\n *\n * @public\n */\nfunction useReducedMotion() {\n    /**\n     * Lazy initialisation of prefersReducedMotion\n     */\n    !prefersReducedMotion && initPrefersReducedMotion();\n    var _a = tslib.__read(React.useState(prefersReducedMotion.get()), 2), shouldReduceMotion = _a[0], setShouldReduceMotion = _a[1];\n    useOnChange(prefersReducedMotion, setShouldReduceMotion);\n    return shouldReduceMotion;\n}\n\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    var hasMounted = false;\n    /**\n     * Pending animations that are started before a component is mounted.\n     * TODO: Remove this as animations should only run in effects\n     */\n    var pendingAnimations = [];\n    /**\n     * A collection of linked component animation controls.\n     */\n    var subscribers = new Set();\n    var controls = {\n        subscribe: function (visualElement) {\n            subscribers.add(visualElement);\n            return function () { return void subscribers.delete(visualElement); };\n        },\n        start: function (definition, transitionOverride) {\n            /**\n             * TODO: We only perform this hasMounted check because in Framer we used to\n             * encourage the ability to start an animation within the render phase. This\n             * isn't behaviour concurrent-safe so when we make Framer concurrent-safe\n             * we can ditch this.\n             */\n            if (hasMounted) {\n                var animations_1 = [];\n                subscribers.forEach(function (visualElement) {\n                    animations_1.push(animateVisualElement(visualElement, definition, {\n                        transitionOverride: transitionOverride,\n                    }));\n                });\n                return Promise.all(animations_1);\n            }\n            else {\n                return new Promise(function (resolve) {\n                    pendingAnimations.push({\n                        animation: [definition, transitionOverride],\n                        resolve: resolve,\n                    });\n                });\n            }\n        },\n        set: function (definition) {\n            heyListen.invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach(function (visualElement) {\n                setValues(visualElement, definition);\n            });\n        },\n        stop: function () {\n            subscribers.forEach(function (visualElement) {\n                stopAnimation(visualElement);\n            });\n        },\n        mount: function () {\n            hasMounted = true;\n            pendingAnimations.forEach(function (_a) {\n                var animation = _a.animation, resolve = _a.resolve;\n                controls.start.apply(controls, tslib.__spreadArray([], tslib.__read(animation))).then(resolve);\n            });\n            return function () {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * @library\n *\n * ```jsx\n * import * as React from 'react'\n * import { Frame, useAnimation } from 'framer'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <Frame animate={controls} />\n * }\n * ```\n *\n * @motion\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimation() {\n    var controls = useConstant(animationControls);\n    React.useEffect(controls.mount, []);\n    return controls;\n}\n\n/**\n * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.\n *\n * @library\n *\n * ```jsx\n * import * as React from \"react\"\n * import { Frame, useCycle } from \"framer\"\n *\n * export function MyComponent() {\n *   const [x, cycleX] = useCycle(0, 50, 100)\n *\n *   return (\n *     <Frame\n *       animate={{ x: x }}\n *       onTap={() => cycleX()}\n *      />\n *    )\n * }\n * ```\n *\n * @motion\n *\n * An index value can be passed to the returned `cycle` function to cycle to a specific index.\n *\n * ```jsx\n * import * as React from \"react\"\n * import { motion, useCycle } from \"framer-motion\"\n *\n * export const MyComponent = () => {\n *   const [x, cycleX] = useCycle(0, 50, 100)\n *\n *   return (\n *     <motion.div\n *       animate={{ x: x }}\n *       onTap={() => cycleX()}\n *      />\n *    )\n * }\n * ```\n *\n * @param items - items to cycle through\n * @returns [currentState, cycleState]\n *\n * @public\n */\nfunction useCycle() {\n    var items = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        items[_i] = arguments[_i];\n    }\n    var index = React.useRef(0);\n    var _a = tslib.__read(React.useState(items[index.current]), 2), item = _a[0], setItem = _a[1];\n    return [\n        item,\n        function (next) {\n            index.current =\n                typeof next !== \"number\"\n                    ? popmotion.wrap(0, items.length, index.current + 1)\n                    : next;\n            setItem(items[index.current]);\n        },\n    ];\n}\n\n/**\n * Can manually trigger a drag gesture on one or more `drag`-enabled `motion` components.\n *\n * @library\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <Frame onTapStart={startDrag} />\n *     <Frame drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @motion\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\nvar DragControls = /** @class */ (function () {\n    function DragControls() {\n        this.componentControls = new Set();\n    }\n    /**\n     * Subscribe a component's internal `VisualElementDragControls` to the user-facing API.\n     *\n     * @internal\n     */\n    DragControls.prototype.subscribe = function (controls) {\n        var _this = this;\n        this.componentControls.add(controls);\n        return function () { return _this.componentControls.delete(controls); };\n    };\n    /**\n     * Start a drag gesture on every `motion` component that has this set of drag controls\n     * passed into it via the `dragControls` prop.\n     *\n     * ```jsx\n     * dragControls.start(e, {\n     *   snapToCursor: true\n     * })\n     * ```\n     *\n     * @param event - PointerEvent\n     * @param options - Options\n     *\n     * @public\n     */\n    DragControls.prototype.start = function (event, options) {\n        this.componentControls.forEach(function (controls) {\n            controls.start(event.nativeEvent || event, options);\n        });\n    };\n    DragControls.prototype.updateConstraints = function (flush) {\n        if (flush === void 0) { flush = true; }\n        this.componentControls.forEach(function (controls) {\n            controls.updateConstraints();\n        });\n        flush && flushLayout();\n    };\n    return DragControls;\n}());\nvar createDragControls = function () { return new DragControls(); };\n/**\n * Usually, dragging is initiated by pressing down on a `motion` component with a `drag` prop\n * and moving it. For some use-cases, for instance clicking at an arbitrary point on a video scrubber, we\n * might want to initiate that dragging from a different component than the draggable one.\n *\n * By creating a `dragControls` using the `useDragControls` hook, we can pass this into\n * the draggable component's `dragControls` prop. It exposes a `start` method\n * that can start dragging from pointer events on other components.\n *\n * @library\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <Frame onTapStart={startDrag} />\n *     <Frame drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @motion\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\nfunction useDragControls() {\n    return useConstant(createDragControls);\n}\n\nvar createObject = function () { return ({}); };\nvar stateVisualElement = visualElement({\n    build: function () { },\n    measureViewportBox: axisBox,\n    resetTransform: function () { },\n    restoreTransform: function () { },\n    removeValueFromRenderState: function () { },\n    render: function () { },\n    scrapeMotionValuesFromProps: createObject,\n    readValueFromInstance: function (_state, key, options) {\n        return options.initialState[key] || 0;\n    },\n    makeTargetAnimatable: function (element, _a) {\n        var transition = _a.transition, transitionEnd = _a.transitionEnd, target = tslib.__rest(_a, [\"transition\", \"transitionEnd\"]);\n        var origin = getOrigin(target, transition || {}, element);\n        checkTargetForNewValues(element, target, origin);\n        return tslib.__assign({ transition: transition, transitionEnd: transitionEnd }, target);\n    },\n});\nvar useVisualState = makeUseVisualState({\n    scrapeMotionValuesFromProps: createObject,\n    createRenderState: createObject,\n});\n/**\n * This is not an officially supported API and may be removed\n * on any version.\n * @internal\n */\nfunction useAnimatedState(initialState) {\n    var _a = tslib.__read(React.useState(initialState), 2), animationState = _a[0], setAnimationState = _a[1];\n    var visualState = useVisualState({}, false);\n    var element = useConstant(function () {\n        return stateVisualElement({ props: {}, visualState: visualState }, { initialState: initialState });\n    });\n    React.useEffect(function () {\n        element.mount({});\n        return element.unmount();\n    }, []);\n    React.useEffect(function () {\n        element.setProps({\n            onUpdate: function (v) { return setAnimationState(tslib.__assign({}, v)); },\n        });\n    });\n    var startAnimation = useConstant(function () { return function (animationDefinition) {\n        return animateVisualElement(element, animationDefinition);\n    }; });\n    return [animationState, startAnimation];\n}\n\n// Keep things reasonable and avoid scale: Infinity. In practise we might need\n// to add another value, opacity, that could interpolate scaleX/Y [0,0.01] => [0,1]\n// to simply hide content at unreasonable scales.\nvar maxScale = 100000;\nvar invertScale = function (scale) {\n    return scale > 0.001 ? 1 / scale : maxScale;\n};\nvar hasWarned = false;\n/**\n * Returns a `MotionValue` each for `scaleX` and `scaleY` that update with the inverse\n * of their respective parent scales.\n *\n * This is useful for undoing the distortion of content when scaling a parent component.\n *\n * By default, `useInvertedScale` will automatically fetch `scaleX` and `scaleY` from the nearest parent.\n * By passing other `MotionValue`s in as `useInvertedScale({ scaleX, scaleY })`, it will invert the output\n * of those instead.\n *\n * @motion\n *\n * ```jsx\n * const MyComponent = () => {\n *   const { scaleX, scaleY } = useInvertedScale()\n *   return <motion.div style={{ scaleX, scaleY }} />\n * }\n * ```\n *\n * @library\n *\n * ```jsx\n * function MyComponent() {\n *   const { scaleX, scaleY } = useInvertedScale()\n *   return <Frame scaleX={scaleX} scaleY={scaleY} />\n * }\n * ```\n *\n * @deprecated\n * @internal\n */\nfunction useInvertedScale(scale) {\n    var parentScaleX = useMotionValue(1);\n    var parentScaleY = useMotionValue(1);\n    var visualElement = useVisualElementContext();\n    heyListen.invariant(!!(scale || visualElement), \"If no scale values are provided, useInvertedScale must be used within a child of another motion component.\");\n    heyListen.warning(hasWarned, \"useInvertedScale is deprecated and will be removed in 3.0. Use the layout prop instead.\");\n    hasWarned = true;\n    if (scale) {\n        parentScaleX = scale.scaleX || parentScaleX;\n        parentScaleY = scale.scaleY || parentScaleY;\n    }\n    else if (visualElement) {\n        parentScaleX = visualElement.getValue(\"scaleX\", 1);\n        parentScaleY = visualElement.getValue(\"scaleY\", 1);\n    }\n    var scaleX = useTransform(parentScaleX, invertScale);\n    var scaleY = useTransform(parentScaleY, invertScale);\n    return { scaleX: scaleX, scaleY: scaleY };\n}\n\nexports.AnimatePresence = AnimatePresence;\nexports.AnimateSharedLayout = AnimateSharedLayout;\nexports.DragControls = DragControls;\nexports.FlatTree = FlatTree;\nexports.FramerTreeLayoutContext = FramerTreeLayoutContext;\nexports.LayoutGroupContext = LayoutGroupContext;\nexports.LazyMotion = LazyMotion;\nexports.MotionConfig = MotionConfig;\nexports.MotionConfigContext = MotionConfigContext;\nexports.MotionValue = MotionValue;\nexports.PresenceContext = PresenceContext;\nexports.SharedLayoutContext = SharedLayoutContext;\nexports.addScaleCorrection = addScaleCorrection;\nexports.animate = animate;\nexports.animateVisualElement = animateVisualElement;\nexports.animationControls = animationControls;\nexports.batchLayout = batchLayout;\nexports.createBatcher = createBatcher;\nexports.createCrossfader = createCrossfader;\nexports.createDomMotionComponent = createDomMotionComponent;\nexports.createMotionComponent = createMotionComponent;\nexports.domAnimation = domAnimation;\nexports.domMax = domMax;\nexports.flushLayout = flushLayout;\nexports.isValidMotionProp = isValidMotionProp;\nexports.m = m;\nexports.motion = motion;\nexports.motionValue = motionValue;\nexports.resolveMotionValue = resolveMotionValue;\nexports.snapshotViewportBox = snapshotViewportBox;\nexports.transform = transform;\nexports.useAnimation = useAnimation;\nexports.useCycle = useCycle;\nexports.useDeprecatedAnimatedState = useAnimatedState;\nexports.useDeprecatedInvertedScale = useInvertedScale;\nexports.useDomEvent = useDomEvent;\nexports.useDragControls = useDragControls;\nexports.useElementScroll = useElementScroll;\nexports.useIsPresent = useIsPresent;\nexports.useMotionTemplate = useMotionTemplate;\nexports.useMotionValue = useMotionValue;\nexports.usePresence = usePresence;\nexports.useReducedMotion = useReducedMotion;\nexports.useSpring = useSpring;\nexports.useTransform = useTransform;\nexports.useVelocity = useVelocity;\nexports.useViewportScroll = useViewportScroll;\nexports.visualElement = visualElement;\n"],"names":["memoize","fn","cache","arg","reactPropsRegex","index","prop","tslib","require$$0","React","require$$1","heyListen","require$$2","styleValueTypes","require$$3","popmotion","require$$4","sync","require$$5","_interopDefaultLegacy","_interopNamespace","n","k","d","React__namespace","React__default","sync__default","createDefinition","propNames","props","name","featureDefinitions","loadFeatures","features","key","Component","LazyContext","featureNames","numFeatures","useFeatures","visualElement","preloadedFeatures","i","name_1","_a","isEnabled","MotionConfigContext","p","MotionContext","useVisualElementContext","PresenceContext","useConstant","init","ref","usePresence","context","isPresent","onExitComplete","register","id","useUniqueId","safeToRemove","useIsPresent","counter","incrementId","LayoutGroupContext","isBrowser","useIsomorphicLayoutEffect","useLayoutId","layoutId","layoutGroupId","useVisualElement","visualState","createVisualElement","config","lazyContext","parent","presenceContext","visualElementRef","isRefObject","useMotionRef","externalRef","instance","isVariantLabels","v","isVariantLabel","getCurrent","current","value","getVelocity$1","velocity","resolveVariantFromProps","definition","custom","currentValues","currentVelocity","resolveVariant","checkIfControllingVariants","checkIfVariantNode","getCurrentTreeVariants","initial","animate","useCreateMotionContext","isStatic","variantLabelsAsDependency","createMotionComponent","useRender","useVisualState","MotionComponent","createMotionProxy","createConfig","customMotionComponentConfig","componentCache","_target","lowercaseSVGElements","isSVGComponent","valueScaleCorrection","addScaleCorrection","correctors","transformAxes","order","transformProps","operationKey","axesKey","sortTransformProps","a","b","transformPropSet","isTransformProp","transformOriginProps","isTransformOriginProp","isForcedMotionValue","layout","isMotionValue","translateAlias","buildTransform","_b","transformIsDefault","transformTemplate","transform","transformKeys","_c","enableHardwareAcceleration","_d","allowTransformNone","transformString","transformHasZ","numTransformKeys","buildTransformOrigin","originX","originY","originZ","isCSSVariable$1","getValueAsType","type","int","numberValueTypes","buildHTMLStyles","state","latestValues","projection","layoutState","options","buildProjectionTransform","buildProjectionTransformOrigin","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","correctedValue","applyTo","num","createHtmlRenderState","copyRawValuesOnly","target","source","useInitialMotionValues","useStyle","styleProp","useHTMLProps","htmlProps","validMotionProps","isValidMotionProp","shouldForward","emotionIsPropValid_1","require$$6","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin$1","origin","offset","size","calcSVGTransformOrigin","dimensions","pxOriginX","pxOriginY","progressToPixels","progress","length","camelKeys","buildSVGPath","attrs","totalLength","spacing","useDashCase","keys","pathLength","pathSpacing","buildSVGAttrs","attrX","attrY","pathOffset","latest","totalPathLength","createSvgRenderState","useSVGProps","visualProps","rawStyles","createUseRender","useVisualProps","elementProps","CAMEL_CASE_PATTERN","REPLACE_TEMPLATE","camelToDash","str","renderHTML","element","camelCaseAttributes","renderSVG","renderState","scrapeMotionValuesFromProps$1","newValues","scrapeMotionValuesFromProps","targetKey","isAnimationControls","isKeyframesTarget","isCustomValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeState","createRenderState","onMount","makeLatestValues","makeUseVisualState","scrapeMotionValues","values","blockInitialAnimation","motionValues","isControllingVariants","isVariantNode","variantToSet","list","resolved","transitionEnd","svgMotionConfig","isPath","htmlMotionConfig","createDomMotionConfig","baseConfig","AnimationType","addDomEvent","eventName","handler","useDomEvent","useFocusGesture","whileFocus","onFocus","onBlur","isMouseEvent","event","isTouchEvent","hasTouches","filterPrimaryPointer","eventHandler","isPrimaryPointer","defaultPagePoint","pointFromTouch","pointType","primaryTouch","point","pointFromMouse","extractEventInfo","getViewportPointFromEvent","wrapHandler","shouldFilterPrimaryPointer","listener","supportsPointerEvents","supportsTouchEvents","supportsMouseEvents","mouseEventNames","touchEventNames","getPointerEventName","addPointerEvent","usePointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal_1","openVertical_1","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","useHoverGesture","onHoverStart","onHoverEnd","whileHover","isNodeOrChild","child","useUnmountEffect","useTapGesture","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","removePointerEndListener","checkPointerEnd","onPointerUp","onPointerCancel","onPointerDown","makeRenderlessComponent","hook","gestureAnimations","shallowCompare","next","prev","prevLength","secondsToMilliseconds","seconds","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","isEasingArray","ease","isAnimatable","underDampedSpring","criticallyDampedSpring","to","linearTween","keyframes","defaultTransitions","getDefaultTransition","valueKey","transitionFactory","defaultValueTypes","getDefaultValueType","getAnimatableNone","defaultValueType","isTransitionDefined","transition","legacyRepeatWarning","convertTransitionToAnimationOptions","times","yoyo","flip","loop","getDelayFromTransition","valueTransition","getValueTransition","hydrateKeyframes","getPopmotionAnimationOptions","getAnimation","onComplete","isTargetAnimatable","isZero","getZeroUnit","isOriginAnimatable","start","set","potentialUnitType","startAnimation","delayTimer","controls","animation","delay","isNumericalString","addUniqueItem","arr","item","removeItem","SubscriptionManager","_this","c","numSubscriptions","isFloat","MotionValue","render","delta","timestamp","subscription","passiveEffect","resolve","motionValue","testValueType","auto","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","setTarget","setVariants","variantLabels","reversedLabels","variant","setValues","checkTargetForNewValues","newValueKeys","numNewValues","targetValue","getOriginFromTransition","getOrigin","animateVisualElement","animations","animateVariant","resolvedDefinition","animateTarget","getChildAnimations","forwardDelay","delayChildren","staggerChildren","staggerDirection","animateChildren","when","first","last","transitionOverride","_e","_f","animationTypeState","valueTarget","shouldBlockAnimation","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","stopAnimation","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","reversePriorityOrder","numAnimationTypes","animateList","createAnimationState","createState","allAnimatedKeys","isInitialRender","buildResolvedTypeValues","acc","isAnimated","setAnimateFunction","makeAnimator","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","_loop_1","typeState","propIsVariant","activeDelta","isInherited","shouldAnimateType","variantsHaveChanged","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation_1","fallbackTarget","shouldAnimate","setActive","createTypeState","PanSession","handlers","transformPagePoint","getPanInfo","isPanStarted","isDistancePastThreshold","onStart","onMove","transformPoint","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","subtractPoint","history","lastDevicePoint","startDevicePoint","getVelocity","timeDelta","timestampedPoint","lastPoint","time","noop","any","convertBoundingBoxToAxisBox","top","left","right","bottom","convertAxisBoxToBoundingBox","x","y","transformBoundingBox","topLeft","bottomRight","axisBox","copyAxisBox","box","zeroDelta","eachAxis","clampProgress","isNear","maxDistance","calcLength","axis","calcOrigin","sourceLength","targetLength","updateAxisDelta","updateBoxDelta","defaultOrigin","calcRelativeAxis","relative","calcRelativeBox","parentProjection","applyConstraints","elastic","min","max","calcConstrainedMinPoint","constraints","calcRelativeAxisConstraints","calcRelativeConstraints","layoutBox","calcViewportAxisConstraints","layoutAxis","constraintsAxis","calcViewportConstraints","constraintsBox","calcPositionFromProgress","axisLength","rebaseAxisConstraints","relativeConstraints","defaultElastic","resolveDragElastic","dragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","label","getBoundingBox","compareByDepth","isProjecting","collectProjectingAncestors","ancestors","collectProjectingChildren","children","addChild","updateLayoutMeasurement","snapshotViewportBox","tweenAxis","calcRelativeOffsetAxis","calcRelativeOffset","checkIfParentHasChanged","prevId","nextId","isDraggable","_dragX","resetAxis","originAxis","resetBox","originBox","scalePoint","scale","originPoint","distanceFromOrigin","scaled","applyPointDelta","translate","boxScale","applyAxisDelta","applyBoxDelta","applyAxisTransforms","final","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","applyBoxTransforms","finalBox","removePointDelta","removeAxisDelta","removeAxisTransforms","removeBoxTransforms","applyTreeDeltas","treeScale","treePath","treeLength","node","convertToRelativeProjection","isLayoutDrag","projectionParent","unresolvedJobs","pushJob","stack","job","pointer","batchLayout","flushLayout","reads","writes","setRead","setWrite","numStacks","executeJob","elementDragControls","lastPointerEvent","VisualElementDragControls","originEvent","snapToCursor","cursorProgress","initialPoint","read","write","tree","hasManuallySetCursorOrigin","isRelativeDrag","axisValue","dragPropagation","dragDirectionLock","getCurrentDirection","dragConstraints","onMeasureDragConstraints","constraintsElement","measuredConstraints","userConstraints","isDragging","shouldDrag","length_1","center","nextValue","update","axisLayout","axisProgress","_g","dragMomentum","remainingProps","dragKey","_dragY","dragTransition","isRelative","relativeConstraints_1","momentumAnimations","bounceStiffness","bounceDamping","inertia","currentValue","boxProgress","onReady","stopPointerListener","dragListener","stopResizeListener","stopLayoutUpdateListener","prevDragCursor","direction","currentDirection","lockThreshold","useDrag","groupDragControls","dragControls","usePanGesture","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","panSession","Presence","exports","VisibilityAction","isCSSVariable","cssVariableRegex","parseCSSVariable","match","token","fallback","maxDepth","getVariableValue","depth","resolveCSSVariables","pixelsToPercent","pixels","correctBorderRadius","_layoutState","varToken","correctBoxShadow","original","containsCSSVariables","cssVariables","shadow","template","xScale","yScale","averageScale","output","i_1","cssVariable","borderCorrectionDefinition","defaultScaleCorrectors","progressTarget","Animate","_super","targetBox","visibilityAction","shouldStackAnimate","prevParent","prevParentViewportBox","parentLayout","isProvidedCorrectDataForRelativeSharedLayout","boxHasMoved","hasMoved","axisIsEqual","frameTarget","layoutProgress","frame","unsubscribeProgress","layoutTransition","defaultLayoutTransition","AnimateLayoutContextProvider","isZeroBox","zeroAxis","defaultHandler","createBatcher","queue","layoutReady","allElements","assignProjectionToSnapshot","SharedLayoutContext","FramerTreeLayoutContext","isSharedLayout","Measure","syncLayout","framerSyncLayout","MeasureContextProvider","layoutAnimations","createProjectionState","createLayoutState","zeroLayout","buildLayoutProjectionTransform","latestTransform","xTranslate","yTranslate","rotate","rotateX","rotateY","identityProjection","buildLayoutProjectionTransformOrigin","deltaFinal","names","createLifecycles","managers","propSubscriptions","lifecycles","manager","on","propListener","args","_i","updateMotionValuesFromProps","prevValue","existingValue","updateLayoutDeltas","layoutCorrected","FlatTree","setCurrentViewportBox","relativeOffset","treeType","build","getBaseTarget","makeTargetAnimatable","measureViewportBox","renderInstance","readValueFromInstance","resetTransform","restoreTransform","removeValueFromRenderState","sortNodePosition","presenceId","leadProjection","leadLatestValues","unsubscribeFromLeadVisualElement","crossfader","hasViewportBoxUpdated","valueSubscriptions","prevMotionValues","projectionTargetProgress","baseTarget","removeFromVariantTree","triggerBuild","valuesToRender","crossfadedValues","updateLayoutProjection","prevTreeScaleX","prevTreeScaleY","prevDeltaTransform","deltaTransform","updateTreeLayoutProjection","fireUpdateLayoutProjection","bindToMotionValue","removeOnChange","latestValue","removeOnRenderRequest","initialMotionValues","newInstance","remove","closestVariantNode","other","visibility","canMutate","defaultValue","newProps","startAtParent","context_1","numVariantProps","variantProps","newCrossfader","withTransform","viewportBox","force","shouldRebase","fireResolveRelativeTargetBox","foundParent","ancestor","relativeParent","newLead","positionalKeys","isPositionalKey","hasPositionalKey","setAndResetVelocity","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","originComputedStyle","targetBbox","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","from","fromType","toType","numKeyframes","convertedTarget","unitConversion","parseDomVariant","getComputedStyle$1","htmlConfig","domElement","defaultType","computedStyle","mutableState","isMounted","transformValues","parsed","isProjectionTranform","htmlVisualElement","svgVisualElement","_element","createDomVisualElement","featureBundle","motion","createDomMotionComponent","m","useForceUpdate","unloadingRef","forcedRenderCount","setForcedRenderCount","getPresenceId","PresenceChild","presenceAffectsLayout","presenceChildren","newChildrenMap","childId","allComplete","isComplete","_","getChildKey","updateChildLookup","allChildren","onlyElements","filtered","AnimatePresence","exitBeforeEnter","forceRender","layoutContext","filteredChildren","presentChildren","exiting","childrenToRender","presentKeys","targetKeys","numPresent","insertionIndex","onExit","removeIndex","presentChild","createCrossfader","prevOptions","leadState","followState","finalCrossfadeFrame","prevUpdate","startCrossfadeAnimation","lead","follow","hasUpdated","onUpdate","updateCrossfade","latestLeadValues","latestFollowValues","leadTargetOpacity","followTargetOpacity","easeCrossfadeIn","easeCrossfadeOut","mixValues","initialProgress","newOptions","compress","easing","borders","numBorders","hasFollowElement","borderLabel","followRadius","getRadius","leadRadius","radius","radiusName","layoutStack","prevState","prevValues","prevViewportBox","needsCrossfadeAnimation","getFollowViewportBox","getFollowLayout","shouldCrossfade","resetRotate","hasRotate","resetValues","AnimateSharedLayout","MotionConfig","transitionDependency","LazyMotion","strict","isLazyBundle","setIsLoaded","loadedRenderer","renderer","loadedFeatures","domAnimation","domMax","useMotionValue","setLatest_1","useOnChange","useMultiOnChange","subscriptions","unsubscribe","useCombineMotionValues","combineValues","updateValue","useMotionTemplate","fragments","numFragments","buildValue","isCustomValueType","getMixer","useImmediate","argOffset","inputValue","inputRange","outputRange","interpolator","useTransform","input","inputRangeOrTransformer","transformer","useListTransform","numValues","useSpring","activeSpringAnimation","useVelocity","newVelocity","createScrollMotionValues","setProgress","maxOffset","createScrollUpdater","getOffsets","xOffset","yOffset","xMaxOffset","yMaxOffset","getElementScrollOffsets","useElementScroll","updateScrollValues","scrollListener","resizeListener","viewportScrollValues","getViewportScrollOffsets","hasListeners","addEventListeners","useViewportScroll","prefersReducedMotion","initPrefersReducedMotion","motionMediaQuery_1","setReducedMotionPreferences","useReducedMotion","shouldReduceMotion","setShouldReduceMotion","animationControls","hasMounted","pendingAnimations","subscribers","animations_1","useAnimation","useCycle","items","setItem","DragControls","flush","createDragControls","useDragControls","createObject","stateVisualElement","_state","useAnimatedState","initialState","animationState","setAnimationState","animationDefinition","maxScale","invertScale","hasWarned","useInvertedScale","parentScaleX","parentScaleY","scaleX","scaleY"],"mappings":"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","x_google_ignoreList":[0,1,2]}